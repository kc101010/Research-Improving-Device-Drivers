{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99","program":"C:\\Users\\blueb\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--crate-name","syn","--edition=2018","C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"full\"","-C","metadata=10294a55f417ec03","-C","extra-filename=-10294a55f417ec03","--out-dir","c:\\Programming Things\\Uni\\Improving Device Drivers Research\\Research-Improving-Device-Drivers\\Rust\\code\\windows-excl\\rss_reader\\target\\rls\\debug\\deps","-L","dependency=c:\\Programming Things\\Uni\\Improving Device Drivers Research\\Research-Improving-Device-Drivers\\Rust\\code\\windows-excl\\rss_reader\\target\\rls\\debug\\deps","--extern","proc_macro2=c:\\Programming Things\\Uni\\Improving Device Drivers Research\\Research-Improving-Device-Drivers\\Rust\\code\\windows-excl\\rss_reader\\target\\rls\\debug\\deps\\libproc_macro2-f777110f6b9ab522.rmeta","--extern","unicode_ident=c:\\Programming Things\\Uni\\Improving Device Drivers Research\\Research-Improving-Device-Drivers\\Rust\\code\\windows-excl\\rss_reader\\target\\rls\\debug\\deps\\libunicode_ident-e98491921636b6b7.rmeta","--cap-lints","allow","--cfg","syn_disable_nightly_tests","--error-format=json","--sysroot","C:\\Users\\blueb\\.rustup/toolchains/stable-x86_64-pc-windows-msvc"],"output":"c:\\Programming Things\\Uni\\Improving Device Drivers Research\\Research-Improving-Device-Drivers\\Rust\\code\\windows-excl\\rss_reader\\target\\rls\\debug\\deps\\libsyn-10294a55f417ec03.rmeta"},"prelude":{"crate_id":{"name":"syn","disambiguator":[13546762159642502994,0]},"crate_root":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src","external_crates":[{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","num":1,"id":{"name":"std","disambiguator":[4402420685575932686,0]}},{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","num":2,"id":{"name":"core","disambiguator":[16639894342417964460,0]}},{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[1960661561601094031,0]}},{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[4626707339213967717,0]}},{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","num":5,"id":{"name":"alloc","disambiguator":[13575330073562295178,0]}},{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","num":6,"id":{"name":"libc","disambiguator":[15417973128473761251,0]}},{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","num":7,"id":{"name":"unwind","disambiguator":[3307230022923030275,0]}},{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[1477362299507908243,0]}},{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","num":9,"id":{"name":"miniz_oxide","disambiguator":[6635298892910706034,0]}},{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[1545597443293537734,0]}},{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","num":11,"id":{"name":"adler","disambiguator":[1361891767217464645,0]}},{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[15508830081156326446,0]}},{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","num":13,"id":{"name":"std_detect","disambiguator":[15010314299123018028,0]}},{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","num":14,"id":{"name":"rustc_demangle","disambiguator":[4879419464889335982,0]}},{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","num":15,"id":{"name":"panic_unwind","disambiguator":[14947387329158915948,0]}},{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","num":16,"id":{"name":"proc_macro2","disambiguator":[9945374680959122114,0]}},{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\ident.rs","num":17,"id":{"name":"unicode_ident","disambiguator":[6203220704686060357,0]}}],"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":0,"byte_end":32533,"line_start":1,"line_end":989,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":16,"index":776},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\ident.rs","byte_start":72040,"byte_end":72045,"line_start":10,"line_end":10,"column_start":22,"column_end":27},"alias_span":null,"name":"Ident","value":"","parent":{"krate":0,"index":43}},{"kind":"Use","ref_id":{"krate":16,"index":776},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":11025,"byte_end":11030,"line_start":312,"line_end":312,"column_start":23,"column_end":28},"alias_span":null,"name":"Ident","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2659},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":11170,"byte_end":11179,"line_start":318,"line_end":318,"column_start":5,"column_end":14},"alias_span":null,"name":"AttrStyle","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2653},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":11181,"byte_end":11190,"line_start":318,"line_end":318,"column_start":16,"column_end":25},"alias_span":null,"name":"Attribute","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":71},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":11192,"byte_end":11205,"line_start":318,"line_end":318,"column_start":27,"column_end":40},"alias_span":null,"name":"AttributeArgs","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2665},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":11207,"byte_end":11211,"line_start":318,"line_end":318,"column_start":42,"column_end":46},"alias_span":null,"name":"Meta","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2681},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":11213,"byte_end":11221,"line_start":318,"line_end":318,"column_start":48,"column_end":56},"alias_span":null,"name":"MetaList","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2685},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":11223,"byte_end":11236,"line_start":318,"line_end":318,"column_start":58,"column_end":71},"alias_span":null,"name":"MetaNameValue","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2689},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":11238,"byte_end":11248,"line_start":318,"line_end":318,"column_start":73,"column_end":83},"alias_span":null,"name":"NestedMeta","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2724},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":11404,"byte_end":11409,"line_start":327,"line_end":327,"column_start":5,"column_end":10},"alias_span":null,"name":"Field","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2705},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":11411,"byte_end":11417,"line_start":327,"line_end":327,"column_start":12,"column_end":18},"alias_span":null,"name":"Fields","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2718},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":11419,"byte_end":11430,"line_start":327,"line_end":327,"column_start":20,"column_end":31},"alias_span":null,"name":"FieldsNamed","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2721},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":11432,"byte_end":11445,"line_start":327,"line_end":327,"column_start":33,"column_end":46},"alias_span":null,"name":"FieldsUnnamed","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2700},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":11447,"byte_end":11454,"line_start":327,"line_end":327,"column_start":48,"column_end":55},"alias_span":null,"name":"Variant","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2750},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":11456,"byte_end":11464,"line_start":327,"line_end":327,"column_start":57,"column_end":65},"alias_span":null,"name":"VisCrate","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2748},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":11466,"byte_end":11475,"line_start":327,"line_end":327,"column_start":67,"column_end":76},"alias_span":null,"name":"VisPublic","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2752},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":11477,"byte_end":11490,"line_start":327,"line_end":327,"column_start":78,"column_end":91},"alias_span":null,"name":"VisRestricted","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2730},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":11496,"byte_end":11506,"line_start":328,"line_end":328,"column_start":5,"column_end":15},"alias_span":null,"name":"Visibility","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3182},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":11624,"byte_end":11627,"line_start":335,"line_end":335,"column_start":5,"column_end":8},"alias_span":null,"name":"Arm","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3174},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":11629,"byte_end":11639,"line_start":335,"line_end":335,"column_start":10,"column_end":20},"alias_span":null,"name":"FieldValue","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3167},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":11641,"byte_end":11662,"line_start":335,"line_end":335,"column_start":22,"column_end":43},"alias_span":null,"name":"GenericMethodArgument","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3179},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":11664,"byte_end":11669,"line_start":335,"line_end":335,"column_start":45,"column_end":50},"alias_span":null,"name":"Label","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3162},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":11671,"byte_end":11686,"line_start":335,"line_end":335,"column_start":52,"column_end":67},"alias_span":null,"name":"MethodTurbofish","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3189},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":11688,"byte_end":11699,"line_start":335,"line_end":335,"column_start":69,"column_end":80},"alias_span":null,"name":"RangeLimits","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2757},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":11781,"byte_end":11785,"line_start":339,"line_end":339,"column_start":5,"column_end":9},"alias_span":null,"name":"Expr","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2956},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":11787,"byte_end":11796,"line_start":339,"line_end":339,"column_start":11,"column_end":20},"alias_span":null,"name":"ExprArray","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2960},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":11798,"byte_end":11808,"line_start":339,"line_end":339,"column_start":22,"column_end":32},"alias_span":null,"name":"ExprAssign","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2965},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":11810,"byte_end":11822,"line_start":339,"line_end":339,"column_start":34,"column_end":46},"alias_span":null,"name":"ExprAssignOp","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2970},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":11824,"byte_end":11833,"line_start":339,"line_end":339,"column_start":48,"column_end":57},"alias_span":null,"name":"ExprAsync","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2975},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":11835,"byte_end":11844,"line_start":339,"line_end":339,"column_start":59,"column_end":68},"alias_span":null,"name":"ExprAwait","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2980},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":11846,"byte_end":11856,"line_start":339,"line_end":339,"column_start":70,"column_end":80},"alias_span":null,"name":"ExprBinary","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2985},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":11858,"byte_end":11867,"line_start":339,"line_end":339,"column_start":82,"column_end":91},"alias_span":null,"name":"ExprBlock","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2989},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":11873,"byte_end":11880,"line_start":340,"line_end":340,"column_start":5,"column_end":12},"alias_span":null,"name":"ExprBox","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2993},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":11882,"byte_end":11891,"line_start":340,"line_end":340,"column_start":14,"column_end":23},"alias_span":null,"name":"ExprBreak","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2998},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":11893,"byte_end":11901,"line_start":340,"line_end":340,"column_start":25,"column_end":33},"alias_span":null,"name":"ExprCall","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3003},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":11903,"byte_end":11911,"line_start":340,"line_end":340,"column_start":35,"column_end":43},"alias_span":null,"name":"ExprCast","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3008},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":11913,"byte_end":11924,"line_start":340,"line_end":340,"column_start":45,"column_end":56},"alias_span":null,"name":"ExprClosure","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3018},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":11926,"byte_end":11938,"line_start":340,"line_end":340,"column_start":58,"column_end":70},"alias_span":null,"name":"ExprContinue","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3022},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":11940,"byte_end":11949,"line_start":340,"line_end":340,"column_start":72,"column_end":81},"alias_span":null,"name":"ExprField","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3027},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":11951,"byte_end":11962,"line_start":340,"line_end":340,"column_start":83,"column_end":94},"alias_span":null,"name":"ExprForLoop","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3035},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":11968,"byte_end":11977,"line_start":341,"line_end":341,"column_start":5,"column_end":14},"alias_span":null,"name":"ExprGroup","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3039},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":11979,"byte_end":11985,"line_start":341,"line_end":341,"column_start":16,"column_end":22},"alias_span":null,"name":"ExprIf","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3045},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":11987,"byte_end":11996,"line_start":341,"line_end":341,"column_start":24,"column_end":33},"alias_span":null,"name":"ExprIndex","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3050},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":11998,"byte_end":12005,"line_start":341,"line_end":341,"column_start":35,"column_end":42},"alias_span":null,"name":"ExprLet","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3056},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":12007,"byte_end":12014,"line_start":341,"line_end":341,"column_start":44,"column_end":51},"alias_span":null,"name":"ExprLit","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3059},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":12016,"byte_end":12024,"line_start":341,"line_end":341,"column_start":53,"column_end":61},"alias_span":null,"name":"ExprLoop","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3064},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":12026,"byte_end":12035,"line_start":341,"line_end":341,"column_start":63,"column_end":72},"alias_span":null,"name":"ExprMacro","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3067},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":12037,"byte_end":12046,"line_start":341,"line_end":341,"column_start":74,"column_end":83},"alias_span":null,"name":"ExprMatch","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3073},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":12048,"byte_end":12062,"line_start":341,"line_end":341,"column_start":85,"column_end":99},"alias_span":null,"name":"ExprMethodCall","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3081},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":12068,"byte_end":12077,"line_start":342,"line_end":342,"column_start":5,"column_end":14},"alias_span":null,"name":"ExprParen","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3085},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":12079,"byte_end":12087,"line_start":342,"line_end":342,"column_start":16,"column_end":24},"alias_span":null,"name":"ExprPath","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3089},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":12089,"byte_end":12098,"line_start":342,"line_end":342,"column_start":26,"column_end":35},"alias_span":null,"name":"ExprRange","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3094},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":12100,"byte_end":12113,"line_start":342,"line_end":342,"column_start":37,"column_end":50},"alias_span":null,"name":"ExprReference","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3100},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":12115,"byte_end":12125,"line_start":342,"line_end":342,"column_start":52,"column_end":62},"alias_span":null,"name":"ExprRepeat","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3106},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":12127,"byte_end":12137,"line_start":342,"line_end":342,"column_start":64,"column_end":74},"alias_span":null,"name":"ExprReturn","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3110},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":12139,"byte_end":12149,"line_start":342,"line_end":342,"column_start":76,"column_end":86},"alias_span":null,"name":"ExprStruct","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3117},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":12151,"byte_end":12158,"line_start":342,"line_end":342,"column_start":88,"column_end":95},"alias_span":null,"name":"ExprTry","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3121},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":12164,"byte_end":12176,"line_start":343,"line_end":343,"column_start":5,"column_end":17},"alias_span":null,"name":"ExprTryBlock","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3125},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":12178,"byte_end":12187,"line_start":343,"line_end":343,"column_start":19,"column_end":28},"alias_span":null,"name":"ExprTuple","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3129},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":12189,"byte_end":12197,"line_start":343,"line_end":343,"column_start":30,"column_end":38},"alias_span":null,"name":"ExprType","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3134},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":12199,"byte_end":12208,"line_start":343,"line_end":343,"column_start":40,"column_end":49},"alias_span":null,"name":"ExprUnary","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3138},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":12210,"byte_end":12220,"line_start":343,"line_end":343,"column_start":51,"column_end":61},"alias_span":null,"name":"ExprUnsafe","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3142},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":12222,"byte_end":12231,"line_start":343,"line_end":343,"column_start":63,"column_end":72},"alias_span":null,"name":"ExprWhile","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3148},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":12233,"byte_end":12242,"line_start":343,"line_end":343,"column_start":74,"column_end":83},"alias_span":null,"name":"ExprYield","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3159},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":12244,"byte_end":12249,"line_start":343,"line_end":343,"column_start":85,"column_end":90},"alias_span":null,"name":"Index","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3152},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":12251,"byte_end":12257,"line_start":343,"line_end":343,"column_start":92,"column_end":98},"alias_span":null,"name":"Member","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3237},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":12408,"byte_end":12422,"line_start":350,"line_end":350,"column_start":5,"column_end":19},"alias_span":null,"name":"BoundLifetimes","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3229},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":12424,"byte_end":12434,"line_start":350,"line_end":350,"column_start":21,"column_end":31},"alias_span":null,"name":"ConstParam","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3201},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":12436,"byte_end":12448,"line_start":350,"line_end":350,"column_start":33,"column_end":45},"alias_span":null,"name":"GenericParam","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3196},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":12450,"byte_end":12458,"line_start":350,"line_end":350,"column_start":47,"column_end":55},"alias_span":null,"name":"Generics","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3224},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":12460,"byte_end":12471,"line_start":350,"line_end":350,"column_start":57,"column_end":68},"alias_span":null,"name":"LifetimeDef","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3292},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":12473,"byte_end":12484,"line_start":350,"line_end":350,"column_start":70,"column_end":81},"alias_span":null,"name":"PredicateEq","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3288},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":12490,"byte_end":12507,"line_start":351,"line_end":351,"column_start":5,"column_end":22},"alias_span":null,"name":"PredicateLifetime","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3283},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":12509,"byte_end":12522,"line_start":351,"line_end":351,"column_start":24,"column_end":37},"alias_span":null,"name":"PredicateType","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3253},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":12524,"byte_end":12534,"line_start":351,"line_end":351,"column_start":39,"column_end":49},"alias_span":null,"name":"TraitBound","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3258},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":12536,"byte_end":12554,"line_start":351,"line_end":351,"column_start":51,"column_end":69},"alias_span":null,"name":"TraitBoundModifier","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3217},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":12556,"byte_end":12565,"line_start":351,"line_end":351,"column_start":71,"column_end":80},"alias_span":null,"name":"TypeParam","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3242},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":12567,"byte_end":12581,"line_start":351,"line_end":351,"column_start":82,"column_end":96},"alias_span":null,"name":"TypeParamBound","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3264},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":12587,"byte_end":12598,"line_start":352,"line_end":352,"column_start":5,"column_end":16},"alias_span":null,"name":"WhereClause","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3267},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":12600,"byte_end":12614,"line_start":352,"line_end":352,"column_start":18,"column_end":32},"alias_span":null,"name":"WherePredicate","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3713},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":12850,"byte_end":12855,"line_start":361,"line_end":361,"column_start":5,"column_end":10},"alias_span":null,"name":"FnArg","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3548},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":12857,"byte_end":12868,"line_start":361,"line_end":361,"column_start":12,"column_end":23},"alias_span":null,"name":"ForeignItem","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3572},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":12870,"byte_end":12883,"line_start":361,"line_end":361,"column_start":25,"column_end":38},"alias_span":null,"name":"ForeignItemFn","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3592},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":12885,"byte_end":12901,"line_start":361,"line_end":361,"column_start":40,"column_end":56},"alias_span":null,"name":"ForeignItemMacro","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3577},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":12903,"byte_end":12920,"line_start":361,"line_end":361,"column_start":58,"column_end":75},"alias_span":null,"name":"ForeignItemStatic","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3586},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":12922,"byte_end":12937,"line_start":361,"line_end":361,"column_start":77,"column_end":92},"alias_span":null,"name":"ForeignItemType","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3646},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":12943,"byte_end":12951,"line_start":362,"line_end":362,"column_start":5,"column_end":13},"alias_span":null,"name":"ImplItem","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3670},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":12953,"byte_end":12966,"line_start":362,"line_end":362,"column_start":15,"column_end":28},"alias_span":null,"name":"ImplItemConst","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3697},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":12968,"byte_end":12981,"line_start":362,"line_end":362,"column_start":30,"column_end":43},"alias_span":null,"name":"ImplItemMacro","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3681},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":12983,"byte_end":12997,"line_start":362,"line_end":362,"column_start":45,"column_end":59},"alias_span":null,"name":"ImplItemMethod","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3687},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":12999,"byte_end":13011,"line_start":362,"line_end":362,"column_start":61,"column_end":73},"alias_span":null,"name":"ImplItemType","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3296},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":13013,"byte_end":13017,"line_start":362,"line_end":362,"column_start":75,"column_end":79},"alias_span":null,"name":"Item","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3380},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":13019,"byte_end":13028,"line_start":362,"line_end":362,"column_start":81,"column_end":90},"alias_span":null,"name":"ItemConst","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3390},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":13034,"byte_end":13042,"line_start":363,"line_end":363,"column_start":5,"column_end":13},"alias_span":null,"name":"ItemEnum","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3398},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":13044,"byte_end":13059,"line_start":363,"line_end":363,"column_start":15,"column_end":30},"alias_span":null,"name":"ItemExternCrate","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3406},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":13061,"byte_end":13067,"line_start":363,"line_end":363,"column_start":32,"column_end":38},"alias_span":null,"name":"ItemFn","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3411},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":13069,"byte_end":13083,"line_start":363,"line_end":363,"column_start":40,"column_end":54},"alias_span":null,"name":"ItemForeignMod","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3416},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":13085,"byte_end":13093,"line_start":363,"line_end":363,"column_start":56,"column_end":64},"alias_span":null,"name":"ItemImpl","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3426},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":13095,"byte_end":13104,"line_start":363,"line_end":363,"column_start":66,"column_end":75},"alias_span":null,"name":"ItemMacro","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3431},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":13106,"byte_end":13116,"line_start":363,"line_end":363,"column_start":77,"column_end":87},"alias_span":null,"name":"ItemMacro2","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3437},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":13118,"byte_end":13125,"line_start":363,"line_end":363,"column_start":89,"column_end":96},"alias_span":null,"name":"ItemMod","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3444},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":13131,"byte_end":13141,"line_start":364,"line_end":364,"column_start":5,"column_end":15},"alias_span":null,"name":"ItemStatic","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3455},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":13143,"byte_end":13153,"line_start":364,"line_end":364,"column_start":17,"column_end":27},"alias_span":null,"name":"ItemStruct","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3463},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":13155,"byte_end":13164,"line_start":364,"line_end":364,"column_start":29,"column_end":38},"alias_span":null,"name":"ItemTrait","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3475},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":13166,"byte_end":13180,"line_start":364,"line_end":364,"column_start":40,"column_end":54},"alias_span":null,"name":"ItemTraitAlias","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3484},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":13182,"byte_end":13190,"line_start":364,"line_end":364,"column_start":56,"column_end":64},"alias_span":null,"name":"ItemType","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3493},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":13192,"byte_end":13201,"line_start":364,"line_end":364,"column_start":66,"column_end":75},"alias_span":null,"name":"ItemUnion","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3500},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":13203,"byte_end":13210,"line_start":364,"line_end":364,"column_start":77,"column_end":84},"alias_span":null,"name":"ItemUse","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3724},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":13212,"byte_end":13220,"line_start":364,"line_end":364,"column_start":86,"column_end":94},"alias_span":null,"name":"Receiver","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3701},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":13226,"byte_end":13235,"line_start":365,"line_end":365,"column_start":5,"column_end":14},"alias_span":null,"name":"Signature","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3596},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":13237,"byte_end":13246,"line_start":365,"line_end":365,"column_start":16,"column_end":25},"alias_span":null,"name":"TraitItem","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3620},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":13248,"byte_end":13262,"line_start":365,"line_end":365,"column_start":27,"column_end":41},"alias_span":null,"name":"TraitItemConst","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3642},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":13264,"byte_end":13278,"line_start":365,"line_end":365,"column_start":43,"column_end":57},"alias_span":null,"name":"TraitItemMacro","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3628},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":13280,"byte_end":13295,"line_start":365,"line_end":365,"column_start":59,"column_end":74},"alias_span":null,"name":"TraitItemMethod","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3633},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":13297,"byte_end":13310,"line_start":365,"line_end":365,"column_start":76,"column_end":89},"alias_span":null,"name":"TraitItemType","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3543},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":13312,"byte_end":13319,"line_start":365,"line_end":365,"column_start":91,"column_end":98},"alias_span":null,"name":"UseGlob","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3545},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":13325,"byte_end":13333,"line_start":366,"line_end":366,"column_start":5,"column_end":13},"alias_span":null,"name":"UseGroup","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3537},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":13335,"byte_end":13342,"line_start":366,"line_end":366,"column_start":15,"column_end":22},"alias_span":null,"name":"UseName","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3533},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":13344,"byte_end":13351,"line_start":366,"line_end":366,"column_start":24,"column_end":31},"alias_span":null,"name":"UsePath","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3539},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":13353,"byte_end":13362,"line_start":366,"line_end":366,"column_start":33,"column_end":42},"alias_span":null,"name":"UseRename","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3507},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":13364,"byte_end":13371,"line_start":366,"line_end":366,"column_start":44,"column_end":51},"alias_span":null,"name":"UseTree","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3729},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":13458,"byte_end":13462,"line_start":372,"line_end":372,"column_start":22,"column_end":26},"alias_span":null,"name":"File","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":676},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":13504,"byte_end":13512,"line_start":375,"line_end":375,"column_start":26,"column_end":34},"alias_span":null,"name":"Lifetime","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3733},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":13550,"byte_end":13553,"line_start":379,"line_end":379,"column_start":5,"column_end":8},"alias_span":null,"name":"Lit","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3784},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":13555,"byte_end":13562,"line_start":379,"line_end":379,"column_start":10,"column_end":17},"alias_span":null,"name":"LitBool","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3776},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":13564,"byte_end":13571,"line_start":379,"line_end":379,"column_start":19,"column_end":26},"alias_span":null,"name":"LitByte","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3774},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":13573,"byte_end":13583,"line_start":379,"line_end":379,"column_start":28,"column_end":38},"alias_span":null,"name":"LitByteStr","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3778},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":13585,"byte_end":13592,"line_start":379,"line_end":379,"column_start":40,"column_end":47},"alias_span":null,"name":"LitChar","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3782},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":13594,"byte_end":13602,"line_start":379,"line_end":379,"column_start":49,"column_end":57},"alias_span":null,"name":"LitFloat","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3780},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":13604,"byte_end":13610,"line_start":379,"line_end":379,"column_start":59,"column_end":65},"alias_span":null,"name":"LitInt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3772},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":13612,"byte_end":13618,"line_start":379,"line_end":379,"column_start":67,"column_end":73},"alias_span":null,"name":"LitStr","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3787},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":13620,"byte_end":13628,"line_start":379,"line_end":379,"column_start":75,"column_end":83},"alias_span":null,"name":"StrStyle","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3793},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":13764,"byte_end":13769,"line_start":385,"line_end":385,"column_start":22,"column_end":27},"alias_span":null,"name":"Macro","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3798},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":13771,"byte_end":13785,"line_start":385,"line_end":385,"column_start":29,"column_end":43},"alias_span":null,"name":"MacroDelimiter","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3841},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":14084,"byte_end":14089,"line_start":395,"line_end":395,"column_start":21,"column_end":26},"alias_span":null,"name":"BinOp","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3926},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":14091,"byte_end":14095,"line_start":395,"line_end":395,"column_start":28,"column_end":32},"alias_span":null,"name":"UnOp","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3936},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":14181,"byte_end":14186,"line_start":400,"line_end":400,"column_start":23,"column_end":28},"alias_span":null,"name":"Block","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3953},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":14188,"byte_end":14193,"line_start":400,"line_end":400,"column_start":30,"column_end":35},"alias_span":null,"name":"Local","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3939},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":14195,"byte_end":14199,"line_start":400,"line_end":400,"column_start":37,"column_end":41},"alias_span":null,"name":"Stmt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4084},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":14336,"byte_end":14339,"line_start":406,"line_end":406,"column_start":5,"column_end":8},"alias_span":null,"name":"Abi","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4087},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":14341,"byte_end":14350,"line_start":406,"line_end":406,"column_start":10,"column_end":19},"alias_span":null,"name":"BareFnArg","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4094},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":14352,"byte_end":14362,"line_start":406,"line_end":406,"column_start":21,"column_end":31},"alias_span":null,"name":"ReturnType","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3959},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":14364,"byte_end":14368,"line_start":406,"line_end":406,"column_start":33,"column_end":37},"alias_span":null,"name":"Type","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4033},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":14370,"byte_end":14379,"line_start":406,"line_end":406,"column_start":39,"column_end":48},"alias_span":null,"name":"TypeArray","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4038},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":14381,"byte_end":14391,"line_start":406,"line_end":406,"column_start":50,"column_end":60},"alias_span":null,"name":"TypeBareFn","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4047},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":14393,"byte_end":14402,"line_start":406,"line_end":406,"column_start":62,"column_end":71},"alias_span":null,"name":"TypeGroup","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4050},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":14404,"byte_end":14417,"line_start":406,"line_end":406,"column_start":73,"column_end":86},"alias_span":null,"name":"TypeImplTrait","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4053},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":14419,"byte_end":14428,"line_start":406,"line_end":406,"column_start":88,"column_end":97},"alias_span":null,"name":"TypeInfer","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4055},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":14434,"byte_end":14443,"line_start":407,"line_end":407,"column_start":5,"column_end":14},"alias_span":null,"name":"TypeMacro","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4057},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":14445,"byte_end":14454,"line_start":407,"line_end":407,"column_start":16,"column_end":25},"alias_span":null,"name":"TypeNever","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4059},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":14456,"byte_end":14465,"line_start":407,"line_end":407,"column_start":27,"column_end":36},"alias_span":null,"name":"TypeParen","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4062},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":14467,"byte_end":14475,"line_start":407,"line_end":407,"column_start":38,"column_end":46},"alias_span":null,"name":"TypePath","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4065},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":14477,"byte_end":14484,"line_start":407,"line_end":407,"column_start":48,"column_end":55},"alias_span":null,"name":"TypePtr","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4070},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":14486,"byte_end":14499,"line_start":407,"line_end":407,"column_start":57,"column_end":70},"alias_span":null,"name":"TypeReference","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4075},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":14501,"byte_end":14510,"line_start":407,"line_end":407,"column_start":72,"column_end":81},"alias_span":null,"name":"TypeSlice","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4078},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":14512,"byte_end":14527,"line_start":407,"line_end":407,"column_start":83,"column_end":98},"alias_span":null,"name":"TypeTraitObject","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4081},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":14533,"byte_end":14542,"line_start":408,"line_end":408,"column_start":5,"column_end":14},"alias_span":null,"name":"TypeTuple","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4091},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":14544,"byte_end":14552,"line_start":408,"line_end":408,"column_start":16,"column_end":24},"alias_span":null,"name":"Variadic","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4243},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":14643,"byte_end":14651,"line_start":415,"line_end":415,"column_start":5,"column_end":13},"alias_span":null,"name":"FieldPat","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4101},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":14653,"byte_end":14656,"line_start":415,"line_end":415,"column_start":15,"column_end":18},"alias_span":null,"name":"Pat","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4180},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":14658,"byte_end":14664,"line_start":415,"line_end":415,"column_start":20,"column_end":26},"alias_span":null,"name":"PatBox","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4184},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":14666,"byte_end":14674,"line_start":415,"line_end":415,"column_start":28,"column_end":36},"alias_span":null,"name":"PatIdent","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4190},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":14676,"byte_end":14682,"line_start":415,"line_end":415,"column_start":38,"column_end":44},"alias_span":null,"name":"PatLit","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4193},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":14684,"byte_end":14692,"line_start":415,"line_end":415,"column_start":46,"column_end":54},"alias_span":null,"name":"PatMacro","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4196},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":14694,"byte_end":14699,"line_start":415,"line_end":415,"column_start":56,"column_end":61},"alias_span":null,"name":"PatOr","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4200},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":14701,"byte_end":14708,"line_start":415,"line_end":415,"column_start":63,"column_end":70},"alias_span":null,"name":"PatPath","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4204},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":14710,"byte_end":14718,"line_start":415,"line_end":415,"column_start":72,"column_end":80},"alias_span":null,"name":"PatRange","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4209},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":14720,"byte_end":14732,"line_start":415,"line_end":415,"column_start":82,"column_end":94},"alias_span":null,"name":"PatReference","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4214},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":14738,"byte_end":14745,"line_start":416,"line_end":416,"column_start":5,"column_end":12},"alias_span":null,"name":"PatRest","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4217},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":14747,"byte_end":14755,"line_start":416,"line_end":416,"column_start":14,"column_end":22},"alias_span":null,"name":"PatSlice","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4221},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":14757,"byte_end":14766,"line_start":416,"line_end":416,"column_start":24,"column_end":33},"alias_span":null,"name":"PatStruct","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4227},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":14768,"byte_end":14776,"line_start":416,"line_end":416,"column_start":35,"column_end":43},"alias_span":null,"name":"PatTuple","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4231},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":14778,"byte_end":14792,"line_start":416,"line_end":416,"column_start":45,"column_end":59},"alias_span":null,"name":"PatTupleStruct","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4235},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":14794,"byte_end":14801,"line_start":416,"line_end":416,"column_start":61,"column_end":68},"alias_span":null,"name":"PatType","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4240},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":14803,"byte_end":14810,"line_start":416,"line_end":416,"column_start":70,"column_end":77},"alias_span":null,"name":"PatWild","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4279},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":14953,"byte_end":14983,"line_start":423,"line_end":423,"column_start":5,"column_end":35},"alias_span":null,"name":"AngleBracketedGenericArguments","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4284},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":14985,"byte_end":14992,"line_start":423,"line_end":423,"column_start":37,"column_end":44},"alias_span":null,"name":"Binding","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4288},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":14994,"byte_end":15004,"line_start":423,"line_end":423,"column_start":46,"column_end":56},"alias_span":null,"name":"Constraint","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4263},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":15006,"byte_end":15021,"line_start":423,"line_end":423,"column_start":58,"column_end":73},"alias_span":null,"name":"GenericArgument","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4292},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":15027,"byte_end":15056,"line_start":424,"line_end":424,"column_start":5,"column_end":34},"alias_span":null,"name":"ParenthesizedGenericArguments","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4248},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":15058,"byte_end":15062,"line_start":424,"line_end":424,"column_start":36,"column_end":40},"alias_span":null,"name":"Path","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4254},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":15064,"byte_end":15077,"line_start":424,"line_end":424,"column_start":42,"column_end":55},"alias_span":null,"name":"PathArguments","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4251},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":15079,"byte_end":15090,"line_start":424,"line_end":424,"column_start":57,"column_end":68},"alias_span":null,"name":"PathSegment","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4296},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":15092,"byte_end":15097,"line_start":424,"line_end":424,"column_start":70,"column_end":75},"alias_span":null,"name":"QSelf","value":"","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":26372,"byte_end":26373,"line_start":784,"line_end":784,"column_start":21,"column_end":22},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":2,"index":2801},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\export.rs","byte_start":624785,"byte_end":624790,"line_start":1,"line_end":1,"column_start":21,"column_end":26},"alias_span":null,"name":"Clone","value":"","parent":{"krate":0,"index":1443}},{"kind":"Use","ref_id":{"krate":2,"index":2804},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\export.rs","byte_start":624785,"byte_end":624790,"line_start":1,"line_end":1,"column_start":21,"column_end":26},"alias_span":null,"name":"Clone","value":"","parent":{"krate":0,"index":1443}},{"kind":"Use","ref_id":{"krate":2,"index":2836},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\export.rs","byte_start":624811,"byte_end":624813,"line_start":2,"line_end":2,"column_start":20,"column_end":22},"alias_span":null,"name":"Eq","value":"","parent":{"krate":0,"index":1443}},{"kind":"Use","ref_id":{"krate":2,"index":2838},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\export.rs","byte_start":624811,"byte_end":624813,"line_start":2,"line_end":2,"column_start":20,"column_end":22},"alias_span":null,"name":"Eq","value":"","parent":{"krate":0,"index":1443}},{"kind":"Use","ref_id":{"krate":2,"index":2831},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\export.rs","byte_start":624815,"byte_end":624824,"line_start":2,"line_end":2,"column_start":24,"column_end":33},"alias_span":null,"name":"PartialEq","value":"","parent":{"krate":0,"index":1443}},{"kind":"Use","ref_id":{"krate":2,"index":2835},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\export.rs","byte_start":624815,"byte_end":624824,"line_start":2,"line_end":2,"column_start":24,"column_end":33},"alias_span":null,"name":"PartialEq","value":"","parent":{"krate":0,"index":1443}},{"kind":"Use","ref_id":{"krate":2,"index":3157},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\export.rs","byte_start":624849,"byte_end":624856,"line_start":3,"line_end":3,"column_start":23,"column_end":30},"alias_span":null,"name":"Default","value":"","parent":{"krate":0,"index":1443}},{"kind":"Use","ref_id":{"krate":2,"index":3161},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\export.rs","byte_start":624849,"byte_end":624856,"line_start":3,"line_end":3,"column_start":23,"column_end":30},"alias_span":null,"name":"Default","value":"","parent":{"krate":0,"index":1443}},{"kind":"Use","ref_id":{"krate":5,"index":5077},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\export.rs","byte_start":624871,"byte_end":624874,"line_start":4,"line_end":4,"column_start":14,"column_end":17},"alias_span":null,"name":"fmt","value":"","parent":{"krate":0,"index":1443}},{"kind":"Use","ref_id":{"krate":2,"index":10115},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\export.rs","byte_start":624883,"byte_end":624888,"line_start":4,"line_end":4,"column_start":26,"column_end":31},"alias_span":null,"name":"Debug","value":"","parent":{"krate":0,"index":1443}},{"kind":"Use","ref_id":{"krate":2,"index":10118},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\export.rs","byte_start":624883,"byte_end":624888,"line_start":4,"line_end":4,"column_start":26,"column_end":31},"alias_span":null,"name":"Debug","value":"","parent":{"krate":0,"index":1443}},{"kind":"Use","ref_id":{"krate":2,"index":10075},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\export.rs","byte_start":624890,"byte_end":624899,"line_start":4,"line_end":4,"column_start":33,"column_end":42},"alias_span":null,"name":"Formatter","value":"","parent":{"krate":0,"index":1443}},{"kind":"Use","ref_id":{"krate":2,"index":10329},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\export.rs","byte_start":624922,"byte_end":624926,"line_start":5,"line_end":5,"column_start":21,"column_end":25},"alias_span":null,"name":"Hash","value":"","parent":{"krate":0,"index":1443}},{"kind":"Use","ref_id":{"krate":2,"index":10335},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\export.rs","byte_start":624922,"byte_end":624926,"line_start":5,"line_end":5,"column_start":21,"column_end":25},"alias_span":null,"name":"Hash","value":"","parent":{"krate":0,"index":1443}},{"kind":"Use","ref_id":{"krate":2,"index":10339},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\export.rs","byte_start":624928,"byte_end":624934,"line_start":5,"line_end":5,"column_start":27,"column_end":33},"alias_span":null,"name":"Hasher","value":"","parent":{"krate":0,"index":1443}},{"kind":"Use","ref_id":{"krate":2,"index":3189},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\export.rs","byte_start":624958,"byte_end":624962,"line_start":6,"line_end":6,"column_start":22,"column_end":26},"alias_span":null,"name":"Copy","value":"","parent":{"krate":0,"index":1443}},{"kind":"Use","ref_id":{"krate":2,"index":3190},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\export.rs","byte_start":624958,"byte_end":624962,"line_start":6,"line_end":6,"column_start":22,"column_end":26},"alias_span":null,"name":"Copy","value":"","parent":{"krate":0,"index":1443}},{"kind":"Use","ref_id":{"krate":2,"index":47180},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\export.rs","byte_start":624994,"byte_end":624998,"line_start":7,"line_end":7,"column_start":31,"column_end":35},"alias_span":null,"name":"None","value":"","parent":{"krate":0,"index":1443}},{"kind":"Use","ref_id":{"krate":2,"index":47181},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\export.rs","byte_start":624994,"byte_end":624998,"line_start":7,"line_end":7,"column_start":31,"column_end":35},"alias_span":null,"name":"None","value":"","parent":{"krate":0,"index":1443}},{"kind":"Use","ref_id":{"krate":2,"index":47182},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\export.rs","byte_start":625000,"byte_end":625004,"line_start":7,"line_end":7,"column_start":37,"column_end":41},"alias_span":null,"name":"Some","value":"","parent":{"krate":0,"index":1443}},{"kind":"Use","ref_id":{"krate":2,"index":47183},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\export.rs","byte_start":625000,"byte_end":625004,"line_start":7,"line_end":7,"column_start":37,"column_end":41},"alias_span":null,"name":"Some","value":"","parent":{"krate":0,"index":1443}},{"kind":"Use","ref_id":{"krate":2,"index":47311},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\export.rs","byte_start":625037,"byte_end":625040,"line_start":8,"line_end":8,"column_start":31,"column_end":34},"alias_span":null,"name":"Err","value":"","parent":{"krate":0,"index":1443}},{"kind":"Use","ref_id":{"krate":2,"index":47312},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\export.rs","byte_start":625037,"byte_end":625040,"line_start":8,"line_end":8,"column_start":31,"column_end":34},"alias_span":null,"name":"Err","value":"","parent":{"krate":0,"index":1443}},{"kind":"Use","ref_id":{"krate":2,"index":47308},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\export.rs","byte_start":625042,"byte_end":625044,"line_start":8,"line_end":8,"column_start":36,"column_end":38},"alias_span":null,"name":"Ok","value":"","parent":{"krate":0,"index":1443}},{"kind":"Use","ref_id":{"krate":2,"index":47309},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\export.rs","byte_start":625042,"byte_end":625044,"line_start":8,"line_end":8,"column_start":36,"column_end":38},"alias_span":null,"name":"Ok","value":"","parent":{"krate":0,"index":1443}},{"kind":"Use","ref_id":{"krate":16,"index":709},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\export.rs","byte_start":625124,"byte_end":625128,"line_start":13,"line_end":13,"column_start":23,"column_end":27},"alias_span":null,"name":"Span","value":"","parent":{"krate":0,"index":1443}},{"kind":"Use","ref_id":{"krate":16,"index":704},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\export.rs","byte_start":625130,"byte_end":625141,"line_start":13,"line_end":13,"column_start":29,"column_end":40},"alias_span":null,"name":"TokenStream2","value":"","parent":{"krate":0,"index":1443}},{"kind":"Use","ref_id":{"krate":0,"index":1529},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\export.rs","byte_start":625279,"byte_end":625288,"line_start":18,"line_end":18,"column_start":22,"column_end":31},"alias_span":null,"name":"IntoSpans","value":"","parent":{"krate":0,"index":1443}},{"kind":"Use","ref_id":{"krate":0,"index":1654},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":27245,"byte_end":27250,"line_start":824,"line_end":824,"column_start":24,"column_end":29},"alias_span":null,"name":"Error","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1652},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":27252,"byte_end":27258,"line_start":824,"line_end":824,"column_start":31,"column_end":37},"alias_span":null,"name":"Result","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":0,"byte_end":32533,"line_start":1,"line_end":989,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":12},{"krate":0,"index":43},{"krate":0,"index":51},{"krate":0,"index":54},{"krate":0,"index":84},{"krate":0,"index":85},{"krate":0,"index":88},{"krate":0,"index":91},{"krate":0,"index":94},{"krate":0,"index":97},{"krate":0,"index":100},{"krate":0,"index":103},{"krate":0,"index":106},{"krate":0,"index":124},{"krate":0,"index":148},{"krate":0,"index":149},{"krate":0,"index":152},{"krate":0,"index":155},{"krate":0,"index":158},{"krate":0,"index":161},{"krate":0,"index":164},{"krate":0,"index":167},{"krate":0,"index":170},{"krate":0,"index":173},{"krate":0,"index":176},{"krate":0,"index":219},{"krate":0,"index":220},{"krate":0,"index":223},{"krate":0,"index":226},{"krate":0,"index":229},{"krate":0,"index":232},{"krate":0,"index":235},{"krate":0,"index":238},{"krate":0,"index":239},{"krate":0,"index":242},{"krate":0,"index":245},{"krate":0,"index":248},{"krate":0,"index":251},{"krate":0,"index":254},{"krate":0,"index":257},{"krate":0,"index":260},{"krate":0,"index":263},{"krate":0,"index":266},{"krate":0,"index":269},{"krate":0,"index":272},{"krate":0,"index":275},{"krate":0,"index":278},{"krate":0,"index":281},{"krate":0,"index":284},{"krate":0,"index":287},{"krate":0,"index":290},{"krate":0,"index":293},{"krate":0,"index":296},{"krate":0,"index":299},{"krate":0,"index":302},{"krate":0,"index":305},{"krate":0,"index":308},{"krate":0,"index":311},{"krate":0,"index":314},{"krate":0,"index":317},{"krate":0,"index":320},{"krate":0,"index":323},{"krate":0,"index":326},{"krate":0,"index":329},{"krate":0,"index":332},{"krate":0,"index":335},{"krate":0,"index":338},{"krate":0,"index":341},{"krate":0,"index":344},{"krate":0,"index":347},{"krate":0,"index":350},{"krate":0,"index":353},{"krate":0,"index":356},{"krate":0,"index":359},{"krate":0,"index":362},{"krate":0,"index":365},{"krate":0,"index":442},{"krate":0,"index":443},{"krate":0,"index":446},{"krate":0,"index":449},{"krate":0,"index":452},{"krate":0,"index":455},{"krate":0,"index":458},{"krate":0,"index":461},{"krate":0,"index":464},{"krate":0,"index":467},{"krate":0,"index":470},{"krate":0,"index":473},{"krate":0,"index":476},{"krate":0,"index":479},{"krate":0,"index":482},{"krate":0,"index":485},{"krate":0,"index":522},{"krate":0,"index":523},{"krate":0,"index":526},{"krate":0,"index":529},{"krate":0,"index":532},{"krate":0,"index":535},{"krate":0,"index":538},{"krate":0,"index":541},{"krate":0,"index":544},{"krate":0,"index":547},{"krate":0,"index":550},{"krate":0,"index":553},{"krate":0,"index":556},{"krate":0,"index":559},{"krate":0,"index":562},{"krate":0,"index":565},{"krate":0,"index":568},{"krate":0,"index":571},{"krate":0,"index":574},{"krate":0,"index":577},{"krate":0,"index":580},{"krate":0,"index":583},{"krate":0,"index":586},{"krate":0,"index":589},{"krate":0,"index":592},{"krate":0,"index":595},{"krate":0,"index":598},{"krate":0,"index":601},{"krate":0,"index":604},{"krate":0,"index":607},{"krate":0,"index":610},{"krate":0,"index":613},{"krate":0,"index":616},{"krate":0,"index":619},{"krate":0,"index":622},{"krate":0,"index":625},{"krate":0,"index":628},{"krate":0,"index":631},{"krate":0,"index":634},{"krate":0,"index":637},{"krate":0,"index":640},{"krate":0,"index":643},{"krate":0,"index":646},{"krate":0,"index":648},{"krate":0,"index":651},{"krate":0,"index":697},{"krate":0,"index":700},{"krate":0,"index":844},{"krate":0,"index":845},{"krate":0,"index":848},{"krate":0,"index":851},{"krate":0,"index":854},{"krate":0,"index":857},{"krate":0,"index":860},{"krate":0,"index":863},{"krate":0,"index":866},{"krate":0,"index":869},{"krate":0,"index":872},{"krate":0,"index":888},{"krate":0,"index":889},{"krate":0,"index":892},{"krate":0,"index":895},{"krate":0,"index":900},{"krate":0,"index":901},{"krate":0,"index":902},{"krate":0,"index":905},{"krate":0,"index":908},{"krate":0,"index":910},{"krate":0,"index":911},{"krate":0,"index":914},{"krate":0,"index":917},{"krate":0,"index":920},{"krate":0,"index":928},{"krate":0,"index":929},{"krate":0,"index":932},{"krate":0,"index":935},{"krate":0,"index":938},{"krate":0,"index":941},{"krate":0,"index":944},{"krate":0,"index":947},{"krate":0,"index":950},{"krate":0,"index":953},{"krate":0,"index":956},{"krate":0,"index":959},{"krate":0,"index":962},{"krate":0,"index":965},{"krate":0,"index":968},{"krate":0,"index":971},{"krate":0,"index":974},{"krate":0,"index":977},{"krate":0,"index":980},{"krate":0,"index":983},{"krate":0,"index":986},{"krate":0,"index":994},{"krate":0,"index":995},{"krate":0,"index":998},{"krate":0,"index":1001},{"krate":0,"index":1004},{"krate":0,"index":1007},{"krate":0,"index":1010},{"krate":0,"index":1013},{"krate":0,"index":1016},{"krate":0,"index":1019},{"krate":0,"index":1022},{"krate":0,"index":1025},{"krate":0,"index":1028},{"krate":0,"index":1031},{"krate":0,"index":1034},{"krate":0,"index":1037},{"krate":0,"index":1040},{"krate":0,"index":1043},{"krate":0,"index":1046},{"krate":0,"index":1061},{"krate":0,"index":1062},{"krate":0,"index":1065},{"krate":0,"index":1068},{"krate":0,"index":1071},{"krate":0,"index":1074},{"krate":0,"index":1077},{"krate":0,"index":1080},{"krate":0,"index":1083},{"krate":0,"index":1086},{"krate":0,"index":1089},{"krate":0,"index":1440},{"krate":0,"index":1442},{"krate":0,"index":1443},{"krate":0,"index":1509},{"krate":0,"index":1515},{"krate":0,"index":1524},{"krate":0,"index":1525},{"krate":0,"index":1559},{"krate":0,"index":1589},{"krate":0,"index":1598},{"krate":0,"index":1706},{"krate":0,"index":1707},{"krate":0,"index":1710}],"decl_id":null,"docs":" [![github]](https://github.com/dtolnay/syn)&ensp;[![crates-io]](https://crates.io/crates/syn)&ensp;[![docs-rs]](crate)","sig":null,"attributes":[{"value":"/ [![github]](https://github.com/dtolnay/syn)&ensp;[![crates-io]](https://crates.io/crates/syn)&ensp;[![docs-rs]](crate)","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":0,"byte_end":122,"line_start":1,"line_end":1,"column_start":1,"column_end":123}},{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":123,"byte_end":126,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ [github]: https://img.shields.io/badge/github-8da0cb?style=for-the-badge&labelColor=555555&logo=github","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":127,"byte_end":233,"line_start":3,"line_end":3,"column_start":1,"column_end":107}},{"value":"/ [crates-io]: https://img.shields.io/badge/crates.io-fc8d62?style=for-the-badge&labelColor=555555&logo=rust","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":234,"byte_end":344,"line_start":4,"line_end":4,"column_start":1,"column_end":111}},{"value":"/ [docs-rs]: https://img.shields.io/badge/docs.rs-66c2a5?style=for-the-badge&labelColor=555555&logo=docs.rs","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":345,"byte_end":454,"line_start":5,"line_end":5,"column_start":1,"column_end":110}},{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":455,"byte_end":458,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ <br>","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":459,"byte_end":467,"line_start":7,"line_end":7,"column_start":1,"column_end":9}},{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":468,"byte_end":471,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ Syn is a parsing library for parsing a stream of Rust tokens into a syntax","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":472,"byte_end":550,"line_start":9,"line_end":9,"column_start":1,"column_end":79}},{"value":"/ tree of Rust source code.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":551,"byte_end":580,"line_start":10,"line_end":10,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":581,"byte_end":584,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ Currently this library is geared toward use in Rust procedural macros, but","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":585,"byte_end":663,"line_start":12,"line_end":12,"column_start":1,"column_end":79}},{"value":"/ contains some APIs that may be useful more generally.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":664,"byte_end":721,"line_start":13,"line_end":13,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":722,"byte_end":725,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ - **Data structures** — Syn provides a complete syntax tree that can","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":726,"byte_end":800,"line_start":15,"line_end":15,"column_start":1,"column_end":73}},{"value":"/   represent any valid Rust source code. The syntax tree is rooted at","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":801,"byte_end":873,"line_start":16,"line_end":16,"column_start":1,"column_end":73}},{"value":"/   [`syn::File`] which represents a full source file, but there are other","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":874,"byte_end":950,"line_start":17,"line_end":17,"column_start":1,"column_end":77}},{"value":"/   entry points that may be useful to procedural macros including","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":951,"byte_end":1019,"line_start":18,"line_end":18,"column_start":1,"column_end":69}},{"value":"/   [`syn::Item`], [`syn::Expr`] and [`syn::Type`].","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":1020,"byte_end":1073,"line_start":19,"line_end":19,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":1074,"byte_end":1077,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ - **Derives** — Of particular interest to derive macros is","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":1078,"byte_end":1142,"line_start":21,"line_end":21,"column_start":1,"column_end":63}},{"value":"/   [`syn::DeriveInput`] which is any of the three legal input items to a","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":1143,"byte_end":1218,"line_start":22,"line_end":22,"column_start":1,"column_end":76}},{"value":"/   derive macro. An example below shows using this type in a library that can","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":1219,"byte_end":1299,"line_start":23,"line_end":23,"column_start":1,"column_end":81}},{"value":"/   derive implementations of a user-defined trait.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":1300,"byte_end":1353,"line_start":24,"line_end":24,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":1354,"byte_end":1357,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ - **Parsing** — Parsing in Syn is built around [parser functions] with the","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":1358,"byte_end":1438,"line_start":26,"line_end":26,"column_start":1,"column_end":79}},{"value":"/   signature `fn(ParseStream) -> Result<T>`. Every syntax tree node defined","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":1439,"byte_end":1517,"line_start":27,"line_end":27,"column_start":1,"column_end":79}},{"value":"/   by Syn is individually parsable and may be used as a building block for","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":1518,"byte_end":1595,"line_start":28,"line_end":28,"column_start":1,"column_end":78}},{"value":"/   custom syntaxes, or you may dream up your own brand new syntax without","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":1596,"byte_end":1672,"line_start":29,"line_end":29,"column_start":1,"column_end":77}},{"value":"/   involving any of our syntax tree types.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":1673,"byte_end":1718,"line_start":30,"line_end":30,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":1719,"byte_end":1722,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ - **Location information** — Every token parsed by Syn is associated with a","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":1723,"byte_end":1804,"line_start":32,"line_end":32,"column_start":1,"column_end":80}},{"value":"/   `Span` that tracks line and column information back to the source of that","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":1805,"byte_end":1884,"line_start":33,"line_end":33,"column_start":1,"column_end":80}},{"value":"/   token. These spans allow a procedural macro to display detailed error","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":1885,"byte_end":1960,"line_start":34,"line_end":34,"column_start":1,"column_end":76}},{"value":"/   messages pointing to all the right places in the user's code. There is an","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":1961,"byte_end":2040,"line_start":35,"line_end":35,"column_start":1,"column_end":80}},{"value":"/   example of this below.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":2041,"byte_end":2069,"line_start":36,"line_end":36,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":2070,"byte_end":2073,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ - **Feature flags** — Functionality is aggressively feature gated so your","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":2074,"byte_end":2153,"line_start":38,"line_end":38,"column_start":1,"column_end":78}},{"value":"/   procedural macros enable only what they need, and do not pay in compile","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":2154,"byte_end":2231,"line_start":39,"line_end":39,"column_start":1,"column_end":78}},{"value":"/   time for all the rest.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":2232,"byte_end":2260,"line_start":40,"line_end":40,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":2261,"byte_end":2264,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ [`syn::File`]: File","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":2265,"byte_end":2288,"line_start":42,"line_end":42,"column_start":1,"column_end":24}},{"value":"/ [`syn::Item`]: Item","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":2289,"byte_end":2312,"line_start":43,"line_end":43,"column_start":1,"column_end":24}},{"value":"/ [`syn::Expr`]: Expr","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":2313,"byte_end":2336,"line_start":44,"line_end":44,"column_start":1,"column_end":24}},{"value":"/ [`syn::Type`]: Type","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":2337,"byte_end":2360,"line_start":45,"line_end":45,"column_start":1,"column_end":24}},{"value":"/ [`syn::DeriveInput`]: DeriveInput","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":2361,"byte_end":2398,"line_start":46,"line_end":46,"column_start":1,"column_end":38}},{"value":"/ [parser functions]: mod@parse","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":2399,"byte_end":2432,"line_start":47,"line_end":47,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":2433,"byte_end":2436,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ <br>","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":2437,"byte_end":2445,"line_start":49,"line_end":49,"column_start":1,"column_end":9}},{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":2446,"byte_end":2449,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ # Example of a derive macro","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":2450,"byte_end":2481,"line_start":51,"line_end":51,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":2482,"byte_end":2485,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ The canonical derive macro using Syn looks like this. We write an ordinary","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":2486,"byte_end":2564,"line_start":53,"line_end":53,"column_start":1,"column_end":79}},{"value":"/ Rust function tagged with a `proc_macro_derive` attribute and the name of","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":2565,"byte_end":2642,"line_start":54,"line_end":54,"column_start":1,"column_end":78}},{"value":"/ the trait we are deriving. Any time that derive appears in the user's code,","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":2643,"byte_end":2722,"line_start":55,"line_end":55,"column_start":1,"column_end":80}},{"value":"/ the Rust compiler passes their data structure as tokens into our macro. We","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":2723,"byte_end":2801,"line_start":56,"line_end":56,"column_start":1,"column_end":79}},{"value":"/ get to execute arbitrary Rust code to figure out what to do with those","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":2802,"byte_end":2876,"line_start":57,"line_end":57,"column_start":1,"column_end":75}},{"value":"/ tokens, then hand some tokens back to the compiler to compile into the","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":2877,"byte_end":2951,"line_start":58,"line_end":58,"column_start":1,"column_end":75}},{"value":"/ user's crate.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":2952,"byte_end":2969,"line_start":59,"line_end":59,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":2970,"byte_end":2973,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ [`TokenStream`]: proc_macro::TokenStream","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":2974,"byte_end":3018,"line_start":61,"line_end":61,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":3019,"byte_end":3022,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ ```toml","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":3023,"byte_end":3034,"line_start":63,"line_end":63,"column_start":1,"column_end":12}},{"value":"/ [dependencies]","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":3035,"byte_end":3053,"line_start":64,"line_end":64,"column_start":1,"column_end":19}},{"value":"/ syn = \"1.0\"","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":3054,"byte_end":3069,"line_start":65,"line_end":65,"column_start":1,"column_end":16}},{"value":"/ quote = \"1.0\"","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":3070,"byte_end":3087,"line_start":66,"line_end":66,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":3088,"byte_end":3091,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ [lib]","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":3092,"byte_end":3101,"line_start":68,"line_end":68,"column_start":1,"column_end":10}},{"value":"/ proc-macro = true","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":3102,"byte_end":3123,"line_start":69,"line_end":69,"column_start":1,"column_end":22}},{"value":"/ ```","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":3124,"byte_end":3131,"line_start":70,"line_end":70,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":3132,"byte_end":3135,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":3136,"byte_end":3143,"line_start":72,"line_end":72,"column_start":1,"column_end":8}},{"value":"/ # extern crate proc_macro;","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":3144,"byte_end":3174,"line_start":73,"line_end":73,"column_start":1,"column_end":31}},{"value":"/ #","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":3175,"byte_end":3180,"line_start":74,"line_end":74,"column_start":1,"column_end":6}},{"value":"/ use proc_macro::TokenStream;","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":3181,"byte_end":3213,"line_start":75,"line_end":75,"column_start":1,"column_end":33}},{"value":"/ use quote::quote;","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":3214,"byte_end":3235,"line_start":76,"line_end":76,"column_start":1,"column_end":22}},{"value":"/ use syn::{parse_macro_input, DeriveInput};","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":3236,"byte_end":3282,"line_start":77,"line_end":77,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":3283,"byte_end":3286,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ # const IGNORE_TOKENS: &str = stringify! {","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":3287,"byte_end":3333,"line_start":79,"line_end":79,"column_start":1,"column_end":47}},{"value":"/ #[proc_macro_derive(MyMacro)]","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":3334,"byte_end":3367,"line_start":80,"line_end":80,"column_start":1,"column_end":34}},{"value":"/ # };","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":3368,"byte_end":3376,"line_start":81,"line_end":81,"column_start":1,"column_end":9}},{"value":"/ pub fn my_macro(input: TokenStream) -> TokenStream {","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":3377,"byte_end":3433,"line_start":82,"line_end":82,"column_start":1,"column_end":57}},{"value":"/     // Parse the input tokens into a syntax tree","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":3434,"byte_end":3486,"line_start":83,"line_end":83,"column_start":1,"column_end":53}},{"value":"/     let input = parse_macro_input!(input as DeriveInput);","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":3487,"byte_end":3548,"line_start":84,"line_end":84,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":3549,"byte_end":3552,"line_start":85,"line_end":85,"column_start":1,"column_end":4}},{"value":"/     // Build the output, possibly using quasi-quotation","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":3553,"byte_end":3612,"line_start":86,"line_end":86,"column_start":1,"column_end":60}},{"value":"/     let expanded = quote! {","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":3613,"byte_end":3644,"line_start":87,"line_end":87,"column_start":1,"column_end":32}},{"value":"/         // ...","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":3645,"byte_end":3663,"line_start":88,"line_end":88,"column_start":1,"column_end":19}},{"value":"/     };","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":3664,"byte_end":3674,"line_start":89,"line_end":89,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":3675,"byte_end":3678,"line_start":90,"line_end":90,"column_start":1,"column_end":4}},{"value":"/     // Hand the output tokens back to the compiler","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":3679,"byte_end":3733,"line_start":91,"line_end":91,"column_start":1,"column_end":55}},{"value":"/     TokenStream::from(expanded)","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":3734,"byte_end":3769,"line_start":92,"line_end":92,"column_start":1,"column_end":36}},{"value":"/ }","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":3770,"byte_end":3775,"line_start":93,"line_end":93,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":3776,"byte_end":3783,"line_start":94,"line_end":94,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":3784,"byte_end":3787,"line_start":95,"line_end":95,"column_start":1,"column_end":4}},{"value":"/ The [`heapsize`] example directory shows a complete working implementation","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":3788,"byte_end":3866,"line_start":96,"line_end":96,"column_start":1,"column_end":79}},{"value":"/ of a derive macro. It works on any Rust compiler 1.31+. The example derives","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":3867,"byte_end":3946,"line_start":97,"line_end":97,"column_start":1,"column_end":80}},{"value":"/ a `HeapSize` trait which computes an estimate of the amount of heap memory","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":3947,"byte_end":4025,"line_start":98,"line_end":98,"column_start":1,"column_end":79}},{"value":"/ owned by a value.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":4026,"byte_end":4047,"line_start":99,"line_end":99,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":4048,"byte_end":4051,"line_start":100,"line_end":100,"column_start":1,"column_end":4}},{"value":"/ [`heapsize`]: https://github.com/dtolnay/syn/tree/master/examples/heapsize","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":4052,"byte_end":4130,"line_start":101,"line_end":101,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":4131,"byte_end":4134,"line_start":102,"line_end":102,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":4135,"byte_end":4142,"line_start":103,"line_end":103,"column_start":1,"column_end":8}},{"value":"/ pub trait HeapSize {","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":4143,"byte_end":4167,"line_start":104,"line_end":104,"column_start":1,"column_end":25}},{"value":"/     /// Total number of bytes of heap memory owned by `self`.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":4168,"byte_end":4233,"line_start":105,"line_end":105,"column_start":1,"column_end":66}},{"value":"/     fn heap_size_of_children(&self) -> usize;","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":4234,"byte_end":4283,"line_start":106,"line_end":106,"column_start":1,"column_end":50}},{"value":"/ }","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":4284,"byte_end":4289,"line_start":107,"line_end":107,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":4290,"byte_end":4297,"line_start":108,"line_end":108,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":4298,"byte_end":4301,"line_start":109,"line_end":109,"column_start":1,"column_end":4}},{"value":"/ The derive macro allows users to write `#[derive(HeapSize)]` on data","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":4302,"byte_end":4374,"line_start":110,"line_end":110,"column_start":1,"column_end":73}},{"value":"/ structures in their program.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":4375,"byte_end":4407,"line_start":111,"line_end":111,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":4408,"byte_end":4411,"line_start":112,"line_end":112,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":4412,"byte_end":4419,"line_start":113,"line_end":113,"column_start":1,"column_end":8}},{"value":"/ # const IGNORE_TOKENS: &str = stringify! {","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":4420,"byte_end":4466,"line_start":114,"line_end":114,"column_start":1,"column_end":47}},{"value":"/ #[derive(HeapSize)]","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":4467,"byte_end":4490,"line_start":115,"line_end":115,"column_start":1,"column_end":24}},{"value":"/ # };","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":4491,"byte_end":4499,"line_start":116,"line_end":116,"column_start":1,"column_end":9}},{"value":"/ struct Demo<'a, T: ?Sized> {","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":4500,"byte_end":4532,"line_start":117,"line_end":117,"column_start":1,"column_end":33}},{"value":"/     a: Box<T>,","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":4533,"byte_end":4551,"line_start":118,"line_end":118,"column_start":1,"column_end":19}},{"value":"/     b: u8,","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":4552,"byte_end":4566,"line_start":119,"line_end":119,"column_start":1,"column_end":15}},{"value":"/     c: &'a str,","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":4567,"byte_end":4586,"line_start":120,"line_end":120,"column_start":1,"column_end":20}},{"value":"/     d: String,","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":4587,"byte_end":4605,"line_start":121,"line_end":121,"column_start":1,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":4606,"byte_end":4611,"line_start":122,"line_end":122,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":4612,"byte_end":4619,"line_start":123,"line_end":123,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":4620,"byte_end":4623,"line_start":124,"line_end":124,"column_start":1,"column_end":4}},{"value":"/ <p><br></p>","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":4624,"byte_end":4639,"line_start":125,"line_end":125,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":4640,"byte_end":4643,"line_start":126,"line_end":126,"column_start":1,"column_end":4}},{"value":"/ # Spans and error reporting","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":4644,"byte_end":4675,"line_start":127,"line_end":127,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":4676,"byte_end":4679,"line_start":128,"line_end":128,"column_start":1,"column_end":4}},{"value":"/ The token-based procedural macro API provides great control over where the","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":4680,"byte_end":4758,"line_start":129,"line_end":129,"column_start":1,"column_end":79}},{"value":"/ compiler's error messages are displayed in user code. Consider the error the","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":4759,"byte_end":4839,"line_start":130,"line_end":130,"column_start":1,"column_end":81}},{"value":"/ user sees if one of their field types does not implement `HeapSize`.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":4840,"byte_end":4912,"line_start":131,"line_end":131,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":4913,"byte_end":4916,"line_start":132,"line_end":132,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":4917,"byte_end":4924,"line_start":133,"line_end":133,"column_start":1,"column_end":8}},{"value":"/ # const IGNORE_TOKENS: &str = stringify! {","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":4925,"byte_end":4971,"line_start":134,"line_end":134,"column_start":1,"column_end":47}},{"value":"/ #[derive(HeapSize)]","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":4972,"byte_end":4995,"line_start":135,"line_end":135,"column_start":1,"column_end":24}},{"value":"/ # };","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":4996,"byte_end":5004,"line_start":136,"line_end":136,"column_start":1,"column_end":9}},{"value":"/ struct Broken {","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":5005,"byte_end":5024,"line_start":137,"line_end":137,"column_start":1,"column_end":20}},{"value":"/     ok: String,","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":5025,"byte_end":5044,"line_start":138,"line_end":138,"column_start":1,"column_end":20}},{"value":"/     bad: std::thread::Thread,","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":5045,"byte_end":5078,"line_start":139,"line_end":139,"column_start":1,"column_end":34}},{"value":"/ }","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":5079,"byte_end":5084,"line_start":140,"line_end":140,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":5085,"byte_end":5092,"line_start":141,"line_end":141,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":5093,"byte_end":5096,"line_start":142,"line_end":142,"column_start":1,"column_end":4}},{"value":"/ By tracking span information all the way through the expansion of a","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":5097,"byte_end":5168,"line_start":143,"line_end":143,"column_start":1,"column_end":72}},{"value":"/ procedural macro as shown in the `heapsize` example, token-based macros in","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":5169,"byte_end":5247,"line_start":144,"line_end":144,"column_start":1,"column_end":79}},{"value":"/ Syn are able to trigger errors that directly pinpoint the source of the","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":5248,"byte_end":5323,"line_start":145,"line_end":145,"column_start":1,"column_end":76}},{"value":"/ problem.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":5324,"byte_end":5336,"line_start":146,"line_end":146,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":5337,"byte_end":5340,"line_start":147,"line_end":147,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":5341,"byte_end":5352,"line_start":148,"line_end":148,"column_start":1,"column_end":12}},{"value":"/ error[E0277]: the trait bound `std::thread::Thread: HeapSize` is not satisfied","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":5353,"byte_end":5435,"line_start":149,"line_end":149,"column_start":1,"column_end":83}},{"value":"/  --> src/main.rs:7:5","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":5436,"byte_end":5460,"line_start":150,"line_end":150,"column_start":1,"column_end":25}},{"value":"/   |","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":5461,"byte_end":5468,"line_start":151,"line_end":151,"column_start":1,"column_end":8}},{"value":"/ 7 |     bad: std::thread::Thread,","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":5469,"byte_end":5506,"line_start":152,"line_end":152,"column_start":1,"column_end":38}},{"value":"/   |     ^^^^^^^^^^^^^^^^^^^^^^^^ the trait `HeapSize` is not implemented for `Thread`","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":5507,"byte_end":5596,"line_start":153,"line_end":153,"column_start":1,"column_end":90}},{"value":"/ ```","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":5597,"byte_end":5604,"line_start":154,"line_end":154,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":5605,"byte_end":5608,"line_start":155,"line_end":155,"column_start":1,"column_end":4}},{"value":"/ <br>","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":5609,"byte_end":5617,"line_start":156,"line_end":156,"column_start":1,"column_end":9}},{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":5618,"byte_end":5621,"line_start":157,"line_end":157,"column_start":1,"column_end":4}},{"value":"/ # Parsing a custom syntax","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":5622,"byte_end":5651,"line_start":158,"line_end":158,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":5652,"byte_end":5655,"line_start":159,"line_end":159,"column_start":1,"column_end":4}},{"value":"/ The [`lazy-static`] example directory shows the implementation of a","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":5656,"byte_end":5727,"line_start":160,"line_end":160,"column_start":1,"column_end":72}},{"value":"/ `functionlike!(...)` procedural macro in which the input tokens are parsed","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":5728,"byte_end":5806,"line_start":161,"line_end":161,"column_start":1,"column_end":79}},{"value":"/ using Syn's parsing API.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":5807,"byte_end":5835,"line_start":162,"line_end":162,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":5836,"byte_end":5839,"line_start":163,"line_end":163,"column_start":1,"column_end":4}},{"value":"/ [`lazy-static`]: https://github.com/dtolnay/syn/tree/master/examples/lazy-static","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":5840,"byte_end":5924,"line_start":164,"line_end":164,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":5925,"byte_end":5928,"line_start":165,"line_end":165,"column_start":1,"column_end":4}},{"value":"/ The example reimplements the popular `lazy_static` crate from crates.io as a","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":5929,"byte_end":6009,"line_start":166,"line_end":166,"column_start":1,"column_end":81}},{"value":"/ procedural macro.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":6010,"byte_end":6031,"line_start":167,"line_end":167,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":6032,"byte_end":6035,"line_start":168,"line_end":168,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":6036,"byte_end":6043,"line_start":169,"line_end":169,"column_start":1,"column_end":8}},{"value":"/ # macro_rules! lazy_static {","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":6044,"byte_end":6076,"line_start":170,"line_end":170,"column_start":1,"column_end":33}},{"value":"/ #     ($($tt:tt)*) => {}","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":6077,"byte_end":6105,"line_start":171,"line_end":171,"column_start":1,"column_end":29}},{"value":"/ # }","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":6106,"byte_end":6113,"line_start":172,"line_end":172,"column_start":1,"column_end":8}},{"value":"/ #","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":6114,"byte_end":6119,"line_start":173,"line_end":173,"column_start":1,"column_end":6}},{"value":"/ lazy_static! {","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":6120,"byte_end":6138,"line_start":174,"line_end":174,"column_start":1,"column_end":19}},{"value":"/     static ref USERNAME: Regex = Regex::new(\"^[a-z0-9_-]{3,16}$\").unwrap();","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":6139,"byte_end":6218,"line_start":175,"line_end":175,"column_start":1,"column_end":80}},{"value":"/ }","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":6219,"byte_end":6224,"line_start":176,"line_end":176,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":6225,"byte_end":6232,"line_start":177,"line_end":177,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":6233,"byte_end":6236,"line_start":178,"line_end":178,"column_start":1,"column_end":4}},{"value":"/ The implementation shows how to trigger custom warnings and error messages","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":6237,"byte_end":6315,"line_start":179,"line_end":179,"column_start":1,"column_end":79}},{"value":"/ on the macro input.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":6316,"byte_end":6339,"line_start":180,"line_end":180,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":6340,"byte_end":6343,"line_start":181,"line_end":181,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":6344,"byte_end":6355,"line_start":182,"line_end":182,"column_start":1,"column_end":12}},{"value":"/ warning: come on, pick a more creative name","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":6356,"byte_end":6403,"line_start":183,"line_end":183,"column_start":1,"column_end":48}},{"value":"/   --> src/main.rs:10:16","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":6404,"byte_end":6431,"line_start":184,"line_end":184,"column_start":1,"column_end":28}},{"value":"/    |","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":6432,"byte_end":6440,"line_start":185,"line_end":185,"column_start":1,"column_end":9}},{"value":"/ 10 |     static ref FOO: String = \"lazy_static\".to_owned();","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":6441,"byte_end":6504,"line_start":186,"line_end":186,"column_start":1,"column_end":64}},{"value":"/    |                ^^^","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":6505,"byte_end":6532,"line_start":187,"line_end":187,"column_start":1,"column_end":28}},{"value":"/ ```","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":6533,"byte_end":6540,"line_start":188,"line_end":188,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":6541,"byte_end":6544,"line_start":189,"line_end":189,"column_start":1,"column_end":4}},{"value":"/ <br>","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":6545,"byte_end":6553,"line_start":190,"line_end":190,"column_start":1,"column_end":9}},{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":6554,"byte_end":6557,"line_start":191,"line_end":191,"column_start":1,"column_end":4}},{"value":"/ # Testing","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":6558,"byte_end":6571,"line_start":192,"line_end":192,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":6572,"byte_end":6575,"line_start":193,"line_end":193,"column_start":1,"column_end":4}},{"value":"/ When testing macros, we often care not just that the macro can be used","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":6576,"byte_end":6650,"line_start":194,"line_end":194,"column_start":1,"column_end":75}},{"value":"/ successfully but also that when the macro is provided with invalid input it","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":6651,"byte_end":6730,"line_start":195,"line_end":195,"column_start":1,"column_end":80}},{"value":"/ produces maximally helpful error messages. Consider using the [`trybuild`]","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":6731,"byte_end":6809,"line_start":196,"line_end":196,"column_start":1,"column_end":79}},{"value":"/ crate to write tests for errors that are emitted by your macro or errors","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":6810,"byte_end":6886,"line_start":197,"line_end":197,"column_start":1,"column_end":77}},{"value":"/ detected by the Rust compiler in the expanded code following misuse of the","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":6887,"byte_end":6965,"line_start":198,"line_end":198,"column_start":1,"column_end":79}},{"value":"/ macro. Such tests help avoid regressions from later refactors that","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":6966,"byte_end":7036,"line_start":199,"line_end":199,"column_start":1,"column_end":71}},{"value":"/ mistakenly make an error no longer trigger or be less helpful than it used","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":7037,"byte_end":7115,"line_start":200,"line_end":200,"column_start":1,"column_end":79}},{"value":"/ to be.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":7116,"byte_end":7126,"line_start":201,"line_end":201,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":7127,"byte_end":7130,"line_start":202,"line_end":202,"column_start":1,"column_end":4}},{"value":"/ [`trybuild`]: https://github.com/dtolnay/trybuild","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":7131,"byte_end":7184,"line_start":203,"line_end":203,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":7185,"byte_end":7188,"line_start":204,"line_end":204,"column_start":1,"column_end":4}},{"value":"/ <br>","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":7189,"byte_end":7197,"line_start":205,"line_end":205,"column_start":1,"column_end":9}},{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":7198,"byte_end":7201,"line_start":206,"line_end":206,"column_start":1,"column_end":4}},{"value":"/ # Debugging","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":7202,"byte_end":7217,"line_start":207,"line_end":207,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":7218,"byte_end":7221,"line_start":208,"line_end":208,"column_start":1,"column_end":4}},{"value":"/ When developing a procedural macro it can be helpful to look at what the","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":7222,"byte_end":7298,"line_start":209,"line_end":209,"column_start":1,"column_end":77}},{"value":"/ generated code looks like. Use `cargo rustc -- -Zunstable-options","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":7299,"byte_end":7368,"line_start":210,"line_end":210,"column_start":1,"column_end":70}},{"value":"/ --pretty=expanded` or the [`cargo expand`] subcommand.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":7369,"byte_end":7427,"line_start":211,"line_end":211,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":7428,"byte_end":7431,"line_start":212,"line_end":212,"column_start":1,"column_end":4}},{"value":"/ [`cargo expand`]: https://github.com/dtolnay/cargo-expand","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":7432,"byte_end":7493,"line_start":213,"line_end":213,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":7494,"byte_end":7497,"line_start":214,"line_end":214,"column_start":1,"column_end":4}},{"value":"/ To show the expanded code for some crate that uses your procedural macro,","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":7498,"byte_end":7575,"line_start":215,"line_end":215,"column_start":1,"column_end":78}},{"value":"/ run `cargo expand` from that crate. To show the expanded code for one of","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":7576,"byte_end":7652,"line_start":216,"line_end":216,"column_start":1,"column_end":77}},{"value":"/ your own test cases, run `cargo expand --test the_test_case` where the last","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":7653,"byte_end":7732,"line_start":217,"line_end":217,"column_start":1,"column_end":80}},{"value":"/ argument is the name of the test file without the `.rs` extension.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":7733,"byte_end":7803,"line_start":218,"line_end":218,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":7804,"byte_end":7807,"line_start":219,"line_end":219,"column_start":1,"column_end":4}},{"value":"/ This write-up by Brandon W Maister discusses debugging in more detail:","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":7808,"byte_end":7882,"line_start":220,"line_end":220,"column_start":1,"column_end":75}},{"value":"/ [Debugging Rust's new Custom Derive system][debugging].","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":7883,"byte_end":7942,"line_start":221,"line_end":221,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":7943,"byte_end":7946,"line_start":222,"line_end":222,"column_start":1,"column_end":4}},{"value":"/ [debugging]: https://quodlibetor.github.io/posts/debugging-rusts-new-custom-derive-system/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":7947,"byte_end":8041,"line_start":223,"line_end":223,"column_start":1,"column_end":95}},{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":8042,"byte_end":8045,"line_start":224,"line_end":224,"column_start":1,"column_end":4}},{"value":"/ <br>","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":8046,"byte_end":8054,"line_start":225,"line_end":225,"column_start":1,"column_end":9}},{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":8055,"byte_end":8058,"line_start":226,"line_end":226,"column_start":1,"column_end":4}},{"value":"/ # Optional features","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":8059,"byte_end":8082,"line_start":227,"line_end":227,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":8083,"byte_end":8086,"line_start":228,"line_end":228,"column_start":1,"column_end":4}},{"value":"/ Syn puts a lot of functionality behind optional features in order to","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":8087,"byte_end":8159,"line_start":229,"line_end":229,"column_start":1,"column_end":73}},{"value":"/ optimize compile time for the most common use cases. The following features","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":8160,"byte_end":8239,"line_start":230,"line_end":230,"column_start":1,"column_end":80}},{"value":"/ are available.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":8240,"byte_end":8258,"line_start":231,"line_end":231,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":8259,"byte_end":8262,"line_start":232,"line_end":232,"column_start":1,"column_end":4}},{"value":"/ - **`derive`** *(enabled by default)* — Data structures for representing the","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":8263,"byte_end":8345,"line_start":233,"line_end":233,"column_start":1,"column_end":81}},{"value":"/   possible input to a derive macro, including structs and enums and types.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":8346,"byte_end":8424,"line_start":234,"line_end":234,"column_start":1,"column_end":79}},{"value":"/ - **`full`** — Data structures for representing the syntax tree of all valid","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":8425,"byte_end":8507,"line_start":235,"line_end":235,"column_start":1,"column_end":81}},{"value":"/   Rust source code, including items and expressions.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":8508,"byte_end":8564,"line_start":236,"line_end":236,"column_start":1,"column_end":57}},{"value":"/ - **`parsing`** *(enabled by default)* — Ability to parse input tokens into","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":8565,"byte_end":8646,"line_start":237,"line_end":237,"column_start":1,"column_end":80}},{"value":"/   a syntax tree node of a chosen type.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":8647,"byte_end":8689,"line_start":238,"line_end":238,"column_start":1,"column_end":43}},{"value":"/ - **`printing`** *(enabled by default)* — Ability to print a syntax tree","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":8690,"byte_end":8768,"line_start":239,"line_end":239,"column_start":1,"column_end":77}},{"value":"/   node as tokens of Rust source code.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":8769,"byte_end":8810,"line_start":240,"line_end":240,"column_start":1,"column_end":42}},{"value":"/ - **`visit`** — Trait for traversing a syntax tree.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":8811,"byte_end":8868,"line_start":241,"line_end":241,"column_start":1,"column_end":56}},{"value":"/ - **`visit-mut`** — Trait for traversing and mutating in place a syntax","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":8869,"byte_end":8946,"line_start":242,"line_end":242,"column_start":1,"column_end":76}},{"value":"/   tree.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":8947,"byte_end":8958,"line_start":243,"line_end":243,"column_start":1,"column_end":12}},{"value":"/ - **`fold`** — Trait for transforming an owned syntax tree.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":8959,"byte_end":9024,"line_start":244,"line_end":244,"column_start":1,"column_end":64}},{"value":"/ - **`clone-impls`** *(enabled by default)* — Clone impls for all syntax tree","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":9025,"byte_end":9107,"line_start":245,"line_end":245,"column_start":1,"column_end":81}},{"value":"/   types.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":9108,"byte_end":9120,"line_start":246,"line_end":246,"column_start":1,"column_end":13}},{"value":"/ - **`extra-traits`** — Debug, Eq, PartialEq, Hash impls for all syntax tree","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":9121,"byte_end":9202,"line_start":247,"line_end":247,"column_start":1,"column_end":80}},{"value":"/   types.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":9203,"byte_end":9215,"line_start":248,"line_end":248,"column_start":1,"column_end":13}},{"value":"/ - **`proc-macro`** *(enabled by default)* — Runtime dependency on the","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":9216,"byte_end":9291,"line_start":249,"line_end":249,"column_start":1,"column_end":74}},{"value":"/   dynamic library libproc_macro from rustc toolchain.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":9292,"byte_end":9349,"line_start":250,"line_end":250,"column_start":1,"column_end":58}},{"value":"allow(non_camel_case_types)","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":9505,"byte_end":9536,"line_start":255,"line_end":255,"column_start":1,"column_end":32}},{"value":"allow(clippy :: cast_lossless, clippy :: cast_possible_truncation, clippy ::\ncast_ptr_alignment, clippy :: default_trait_access, clippy :: doc_markdown,\nclippy :: expl_impl_clone_on_copy, clippy :: explicit_auto_deref, clippy ::\nif_not_else, clippy :: inherent_to_string, clippy :: large_enum_variant,\nclippy :: let_underscore_drop, clippy :: manual_assert, clippy ::\nmatch_on_vec_items, clippy :: match_same_arms, clippy ::\nmatch_wildcard_for_single_variants, clippy :: missing_errors_doc, clippy ::\nmissing_panics_doc, clippy :: module_name_repetitions, clippy ::\nmust_use_candidate, clippy :: needless_doctest_main, clippy ::\nneedless_pass_by_value, clippy :: never_loop, clippy :: redundant_else, clippy\n:: return_self_not_must_use, clippy :: similar_names, clippy ::\nsingle_match_else, clippy :: too_many_arguments, clippy :: too_many_lines,\nclippy :: trivially_copy_pass_by_ref, clippy :: unnecessary_unwrap, clippy ::\nused_underscore_binding, clippy :: wildcard_imports)","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":9537,"byte_end":10652,"line_start":256,"line_end":289,"column_start":1,"column_end":3}}]},{"kind":"Mod","id":{"krate":0,"index":12},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"token","qualname":"::token","value":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","parent":null,"children":[{"krate":0,"index":13},{"krate":0,"index":16},{"krate":0,"index":19},{"krate":0,"index":22},{"krate":0,"index":23},{"krate":0,"index":26},{"krate":0,"index":29},{"krate":0,"index":35},{"krate":0,"index":36},{"krate":0,"index":37},{"krate":0,"index":38},{"krate":0,"index":39},{"krate":0,"index":40},{"krate":0,"index":41},{"krate":0,"index":1713},{"krate":0,"index":1716},{"krate":0,"index":1719},{"krate":0,"index":1722},{"krate":0,"index":1725},{"krate":0,"index":1727},{"krate":0,"index":1729},{"krate":0,"index":1732},{"krate":0,"index":1734},{"krate":0,"index":1736},{"krate":0,"index":1739},{"krate":0,"index":1741},{"krate":0,"index":1743},{"krate":0,"index":1746},{"krate":0,"index":1748},{"krate":0,"index":1750},{"krate":0,"index":1753},{"krate":0,"index":1755},{"krate":0,"index":1757},{"krate":0,"index":1760},{"krate":0,"index":1762},{"krate":0,"index":1764},{"krate":0,"index":1767},{"krate":0,"index":1769},{"krate":0,"index":1771},{"krate":0,"index":1774},{"krate":0,"index":1776},{"krate":0,"index":1778},{"krate":0,"index":1781},{"krate":0,"index":1783},{"krate":0,"index":1785},{"krate":0,"index":1788},{"krate":0,"index":1790},{"krate":0,"index":1792},{"krate":0,"index":1795},{"krate":0,"index":1797},{"krate":0,"index":1799},{"krate":0,"index":1802},{"krate":0,"index":1804},{"krate":0,"index":1806},{"krate":0,"index":1809},{"krate":0,"index":1811},{"krate":0,"index":1813},{"krate":0,"index":1816},{"krate":0,"index":1818},{"krate":0,"index":1820},{"krate":0,"index":1823},{"krate":0,"index":1825},{"krate":0,"index":1827},{"krate":0,"index":1830},{"krate":0,"index":1832},{"krate":0,"index":1834},{"krate":0,"index":1837},{"krate":0,"index":1839},{"krate":0,"index":1841},{"krate":0,"index":1844},{"krate":0,"index":1846},{"krate":0,"index":1848},{"krate":0,"index":1851},{"krate":0,"index":1853},{"krate":0,"index":1855},{"krate":0,"index":1858},{"krate":0,"index":1860},{"krate":0,"index":1862},{"krate":0,"index":1865},{"krate":0,"index":1867},{"krate":0,"index":1869},{"krate":0,"index":1872},{"krate":0,"index":1874},{"krate":0,"index":1876},{"krate":0,"index":1879},{"krate":0,"index":1881},{"krate":0,"index":1883},{"krate":0,"index":1886},{"krate":0,"index":1888},{"krate":0,"index":1890},{"krate":0,"index":1893},{"krate":0,"index":1895},{"krate":0,"index":1897},{"krate":0,"index":1900},{"krate":0,"index":1902},{"krate":0,"index":1904},{"krate":0,"index":1907},{"krate":0,"index":1909},{"krate":0,"index":1911},{"krate":0,"index":1914},{"krate":0,"index":1916},{"krate":0,"index":1918},{"krate":0,"index":1921},{"krate":0,"index":1923},{"krate":0,"index":1925},{"krate":0,"index":1928},{"krate":0,"index":1930},{"krate":0,"index":1932},{"krate":0,"index":1935},{"krate":0,"index":1937},{"krate":0,"index":1939},{"krate":0,"index":1942},{"krate":0,"index":1944},{"krate":0,"index":1946},{"krate":0,"index":1949},{"krate":0,"index":1951},{"krate":0,"index":1953},{"krate":0,"index":1956},{"krate":0,"index":1958},{"krate":0,"index":1960},{"krate":0,"index":1963},{"krate":0,"index":1965},{"krate":0,"index":1967},{"krate":0,"index":1970},{"krate":0,"index":1972},{"krate":0,"index":1974},{"krate":0,"index":1977},{"krate":0,"index":1979},{"krate":0,"index":1981},{"krate":0,"index":1984},{"krate":0,"index":1986},{"krate":0,"index":1988},{"krate":0,"index":1991},{"krate":0,"index":1993},{"krate":0,"index":1995},{"krate":0,"index":1998},{"krate":0,"index":2000},{"krate":0,"index":2002},{"krate":0,"index":2005},{"krate":0,"index":2007},{"krate":0,"index":2009},{"krate":0,"index":2012},{"krate":0,"index":2014},{"krate":0,"index":2016},{"krate":0,"index":2019},{"krate":0,"index":2021},{"krate":0,"index":2023},{"krate":0,"index":2026},{"krate":0,"index":2028},{"krate":0,"index":2030},{"krate":0,"index":2033},{"krate":0,"index":2035},{"krate":0,"index":2037},{"krate":0,"index":2040},{"krate":0,"index":2042},{"krate":0,"index":2044},{"krate":0,"index":2047},{"krate":0,"index":2049},{"krate":0,"index":2051},{"krate":0,"index":2054},{"krate":0,"index":2056},{"krate":0,"index":2058},{"krate":0,"index":2061},{"krate":0,"index":2063},{"krate":0,"index":2065},{"krate":0,"index":2068},{"krate":0,"index":2070},{"krate":0,"index":2072},{"krate":0,"index":2075},{"krate":0,"index":2077},{"krate":0,"index":2079},{"krate":0,"index":2082},{"krate":0,"index":2084},{"krate":0,"index":2086},{"krate":0,"index":2089},{"krate":0,"index":2091},{"krate":0,"index":2094},{"krate":0,"index":2097},{"krate":0,"index":2100},{"krate":0,"index":2103},{"krate":0,"index":2105},{"krate":0,"index":2108},{"krate":0,"index":2111},{"krate":0,"index":2114},{"krate":0,"index":2117},{"krate":0,"index":2120},{"krate":0,"index":2123},{"krate":0,"index":2126},{"krate":0,"index":2128},{"krate":0,"index":2131},{"krate":0,"index":2134},{"krate":0,"index":2137},{"krate":0,"index":2140},{"krate":0,"index":2143},{"krate":0,"index":2146},{"krate":0,"index":2149},{"krate":0,"index":2152},{"krate":0,"index":2155},{"krate":0,"index":2158},{"krate":0,"index":2160},{"krate":0,"index":2163},{"krate":0,"index":2166},{"krate":0,"index":2169},{"krate":0,"index":2172},{"krate":0,"index":2174},{"krate":0,"index":2177},{"krate":0,"index":2180},{"krate":0,"index":2183},{"krate":0,"index":2186},{"krate":0,"index":2188},{"krate":0,"index":2191},{"krate":0,"index":2194},{"krate":0,"index":2197},{"krate":0,"index":2200},{"krate":0,"index":2203},{"krate":0,"index":2206},{"krate":0,"index":2209},{"krate":0,"index":2211},{"krate":0,"index":2214},{"krate":0,"index":2217},{"krate":0,"index":2220},{"krate":0,"index":2223},{"krate":0,"index":2226},{"krate":0,"index":2229},{"krate":0,"index":2232},{"krate":0,"index":2234},{"krate":0,"index":2237},{"krate":0,"index":2240},{"krate":0,"index":2243},{"krate":0,"index":2246},{"krate":0,"index":2248},{"krate":0,"index":2251},{"krate":0,"index":2254},{"krate":0,"index":2257},{"krate":0,"index":2260},{"krate":0,"index":2263},{"krate":0,"index":2266},{"krate":0,"index":2269},{"krate":0,"index":2271},{"krate":0,"index":2274},{"krate":0,"index":2277},{"krate":0,"index":2280},{"krate":0,"index":2283},{"krate":0,"index":2285},{"krate":0,"index":2288},{"krate":0,"index":2291},{"krate":0,"index":2294},{"krate":0,"index":2297},{"krate":0,"index":2300},{"krate":0,"index":2303},{"krate":0,"index":2306},{"krate":0,"index":2309},{"krate":0,"index":2312},{"krate":0,"index":2315},{"krate":0,"index":2318},{"krate":0,"index":2321},{"krate":0,"index":2324},{"krate":0,"index":2326},{"krate":0,"index":2329},{"krate":0,"index":2332},{"krate":0,"index":2335},{"krate":0,"index":2338},{"krate":0,"index":2341},{"krate":0,"index":2344},{"krate":0,"index":2347},{"krate":0,"index":2350},{"krate":0,"index":2353},{"krate":0,"index":2356},{"krate":0,"index":2358},{"krate":0,"index":2361},{"krate":0,"index":2364},{"krate":0,"index":2367},{"krate":0,"index":2370},{"krate":0,"index":2373},{"krate":0,"index":2376},{"krate":0,"index":2379},{"krate":0,"index":2381},{"krate":0,"index":2384},{"krate":0,"index":2387},{"krate":0,"index":2390},{"krate":0,"index":2393},{"krate":0,"index":2396},{"krate":0,"index":2399},{"krate":0,"index":2402},{"krate":0,"index":2405},{"krate":0,"index":2408},{"krate":0,"index":2411},{"krate":0,"index":2413},{"krate":0,"index":2416},{"krate":0,"index":2419},{"krate":0,"index":2422},{"krate":0,"index":2425},{"krate":0,"index":2428},{"krate":0,"index":2431},{"krate":0,"index":2434},{"krate":0,"index":2437},{"krate":0,"index":2440},{"krate":0,"index":2443},{"krate":0,"index":2445},{"krate":0,"index":2448},{"krate":0,"index":2451},{"krate":0,"index":2454},{"krate":0,"index":2457},{"krate":0,"index":2459},{"krate":0,"index":2462},{"krate":0,"index":2465},{"krate":0,"index":2468},{"krate":0,"index":2471},{"krate":0,"index":2474},{"krate":0,"index":2477},{"krate":0,"index":2480},{"krate":0,"index":2483},{"krate":0,"index":2486},{"krate":0,"index":2489},{"krate":0,"index":2491},{"krate":0,"index":2494},{"krate":0,"index":2497},{"krate":0,"index":2500},{"krate":0,"index":2503},{"krate":0,"index":2506},{"krate":0,"index":2509},{"krate":0,"index":2512},{"krate":0,"index":2515},{"krate":0,"index":2518},{"krate":0,"index":2521},{"krate":0,"index":2523},{"krate":0,"index":2526},{"krate":0,"index":2529},{"krate":0,"index":2532},{"krate":0,"index":2535},{"krate":0,"index":2538},{"krate":0,"index":2541},{"krate":0,"index":2544},{"krate":0,"index":2547},{"krate":0,"index":2550},{"krate":0,"index":2553},{"krate":0,"index":2556},{"krate":0,"index":2559},{"krate":0,"index":2562},{"krate":0,"index":2565},{"krate":0,"index":2568},{"krate":0,"index":2571},{"krate":0,"index":2573},{"krate":0,"index":2576},{"krate":0,"index":2579},{"krate":0,"index":2582},{"krate":0,"index":2585},{"krate":0,"index":2587},{"krate":0,"index":2590},{"krate":0,"index":2593},{"krate":0,"index":2596},{"krate":0,"index":2599},{"krate":0,"index":2602},{"krate":0,"index":2605},{"krate":0,"index":2608},{"krate":0,"index":2610},{"krate":0,"index":2612},{"krate":0,"index":2615},{"krate":0,"index":2617},{"krate":0,"index":2618},{"krate":0,"index":2620},{"krate":0,"index":2623},{"krate":0,"index":2625},{"krate":0,"index":2626},{"krate":0,"index":2628},{"krate":0,"index":2631},{"krate":0,"index":2633},{"krate":0,"index":2634},{"krate":0,"index":2636},{"krate":0,"index":2639},{"krate":0,"index":2641},{"krate":0,"index":42},{"krate":0,"index":2642}],"decl_id":null,"docs":" Tokens representing Rust punctuation, keywords, and delimiters.","sig":null,"attributes":[{"value":"macro_use","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":10963,"byte_end":10975,"line_start":308,"line_end":308,"column_start":1,"column_end":13}},{"value":"/ Tokens representing Rust punctuation, keywords, and delimiters.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":37009,"byte_end":37076,"line_start":1,"line_end":1,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":37077,"byte_end":37080,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ The type names in this module can be difficult to keep straight, so we","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":37081,"byte_end":37155,"line_start":3,"line_end":3,"column_start":1,"column_end":75}},{"value":"/ prefer to use the [`Token!`] macro instead. This is a type-macro that","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":37156,"byte_end":37229,"line_start":4,"line_end":4,"column_start":1,"column_end":74}},{"value":"/ expands to the token type of the given token.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":37230,"byte_end":37279,"line_start":5,"line_end":5,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":37280,"byte_end":37283,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ [`Token!`]: crate::Token","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":37284,"byte_end":37312,"line_start":7,"line_end":7,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":37313,"byte_end":37316,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":37317,"byte_end":37330,"line_start":9,"line_end":9,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":37331,"byte_end":37334,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ The [`ItemStatic`] syntax tree node is defined like this.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":37335,"byte_end":37396,"line_start":11,"line_end":11,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":37397,"byte_end":37400,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ [`ItemStatic`]: crate::ItemStatic","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":37401,"byte_end":37438,"line_start":13,"line_end":13,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":37439,"byte_end":37442,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":37443,"byte_end":37450,"line_start":15,"line_end":15,"column_start":1,"column_end":8}},{"value":"/ # use syn::{Attribute, Expr, Ident, Token, Type, Visibility};","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":37451,"byte_end":37516,"line_start":16,"line_end":16,"column_start":1,"column_end":66}},{"value":"/ #","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":37517,"byte_end":37522,"line_start":17,"line_end":17,"column_start":1,"column_end":6}},{"value":"/ pub struct ItemStatic {","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":37523,"byte_end":37550,"line_start":18,"line_end":18,"column_start":1,"column_end":28}},{"value":"/     pub attrs: Vec<Attribute>,","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":37551,"byte_end":37585,"line_start":19,"line_end":19,"column_start":1,"column_end":35}},{"value":"/     pub vis: Visibility,","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":37586,"byte_end":37614,"line_start":20,"line_end":20,"column_start":1,"column_end":29}},{"value":"/     pub static_token: Token![static],","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":37615,"byte_end":37656,"line_start":21,"line_end":21,"column_start":1,"column_end":42}},{"value":"/     pub mutability: Option<Token![mut]>,","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":37657,"byte_end":37701,"line_start":22,"line_end":22,"column_start":1,"column_end":45}},{"value":"/     pub ident: Ident,","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":37702,"byte_end":37727,"line_start":23,"line_end":23,"column_start":1,"column_end":26}},{"value":"/     pub colon_token: Token![:],","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":37728,"byte_end":37763,"line_start":24,"line_end":24,"column_start":1,"column_end":36}},{"value":"/     pub ty: Box<Type>,","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":37764,"byte_end":37790,"line_start":25,"line_end":25,"column_start":1,"column_end":27}},{"value":"/     pub eq_token: Token![=],","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":37791,"byte_end":37823,"line_start":26,"line_end":26,"column_start":1,"column_end":33}},{"value":"/     pub expr: Box<Expr>,","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":37824,"byte_end":37852,"line_start":27,"line_end":27,"column_start":1,"column_end":29}},{"value":"/     pub semi_token: Token![;],","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":37853,"byte_end":37887,"line_start":28,"line_end":28,"column_start":1,"column_end":35}},{"value":"/ }","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":37888,"byte_end":37893,"line_start":29,"line_end":29,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":37894,"byte_end":37901,"line_start":30,"line_end":30,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":37902,"byte_end":37905,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ # Parsing","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":37906,"byte_end":37919,"line_start":32,"line_end":32,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":37920,"byte_end":37923,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ Keywords and punctuation can be parsed through the [`ParseStream::parse`]","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":37924,"byte_end":38001,"line_start":34,"line_end":34,"column_start":1,"column_end":78}},{"value":"/ method. Delimiter tokens are parsed using the [`parenthesized!`],","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":38002,"byte_end":38071,"line_start":35,"line_end":35,"column_start":1,"column_end":70}},{"value":"/ [`bracketed!`] and [`braced!`] macros.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":38072,"byte_end":38114,"line_start":36,"line_end":36,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":38115,"byte_end":38118,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ [`ParseStream::parse`]: crate::parse::ParseBuffer::parse()","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":38119,"byte_end":38181,"line_start":38,"line_end":38,"column_start":1,"column_end":63}},{"value":"/ [`parenthesized!`]: crate::parenthesized!","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":38182,"byte_end":38227,"line_start":39,"line_end":39,"column_start":1,"column_end":46}},{"value":"/ [`bracketed!`]: crate::bracketed!","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":38228,"byte_end":38265,"line_start":40,"line_end":40,"column_start":1,"column_end":38}},{"value":"/ [`braced!`]: crate::braced!","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":38266,"byte_end":38297,"line_start":41,"line_end":41,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":38298,"byte_end":38301,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":38302,"byte_end":38309,"line_start":43,"line_end":43,"column_start":1,"column_end":8}},{"value":"/ use syn::{Attribute, Result};","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":38310,"byte_end":38343,"line_start":44,"line_end":44,"column_start":1,"column_end":34}},{"value":"/ use syn::parse::{Parse, ParseStream};","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":38344,"byte_end":38385,"line_start":45,"line_end":45,"column_start":1,"column_end":42}},{"value":"/ #","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":38386,"byte_end":38391,"line_start":46,"line_end":46,"column_start":1,"column_end":6}},{"value":"/ # enum ItemStatic {}","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":38392,"byte_end":38416,"line_start":47,"line_end":47,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":38417,"byte_end":38420,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ // Parse the ItemStatic struct shown above.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":38421,"byte_end":38468,"line_start":49,"line_end":49,"column_start":1,"column_end":48}},{"value":"/ impl Parse for ItemStatic {","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":38469,"byte_end":38500,"line_start":50,"line_end":50,"column_start":1,"column_end":32}},{"value":"/     fn parse(input: ParseStream) -> Result<Self> {","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":38501,"byte_end":38555,"line_start":51,"line_end":51,"column_start":1,"column_end":55}},{"value":"/         # use syn::ItemStatic;","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":38556,"byte_end":38590,"line_start":52,"line_end":52,"column_start":1,"column_end":35}},{"value":"/         # fn parse(input: ParseStream) -> Result<ItemStatic> {","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":38591,"byte_end":38657,"line_start":53,"line_end":53,"column_start":1,"column_end":67}},{"value":"/         Ok(ItemStatic {","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":38658,"byte_end":38685,"line_start":54,"line_end":54,"column_start":1,"column_end":28}},{"value":"/             attrs: input.call(Attribute::parse_outer)?,","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":38686,"byte_end":38745,"line_start":55,"line_end":55,"column_start":1,"column_end":60}},{"value":"/             vis: input.parse()?,","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":38746,"byte_end":38782,"line_start":56,"line_end":56,"column_start":1,"column_end":37}},{"value":"/             static_token: input.parse()?,","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":38783,"byte_end":38828,"line_start":57,"line_end":57,"column_start":1,"column_end":46}},{"value":"/             mutability: input.parse()?,","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":38829,"byte_end":38872,"line_start":58,"line_end":58,"column_start":1,"column_end":44}},{"value":"/             ident: input.parse()?,","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":38873,"byte_end":38911,"line_start":59,"line_end":59,"column_start":1,"column_end":39}},{"value":"/             colon_token: input.parse()?,","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":38912,"byte_end":38956,"line_start":60,"line_end":60,"column_start":1,"column_end":45}},{"value":"/             ty: input.parse()?,","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":38957,"byte_end":38992,"line_start":61,"line_end":61,"column_start":1,"column_end":36}},{"value":"/             eq_token: input.parse()?,","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":38993,"byte_end":39034,"line_start":62,"line_end":62,"column_start":1,"column_end":42}},{"value":"/             expr: input.parse()?,","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":39035,"byte_end":39072,"line_start":63,"line_end":63,"column_start":1,"column_end":38}},{"value":"/             semi_token: input.parse()?,","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":39073,"byte_end":39116,"line_start":64,"line_end":64,"column_start":1,"column_end":44}},{"value":"/         })","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":39117,"byte_end":39131,"line_start":65,"line_end":65,"column_start":1,"column_end":15}},{"value":"/         # }","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":39132,"byte_end":39147,"line_start":66,"line_end":66,"column_start":1,"column_end":16}},{"value":"/         # unimplemented!()","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":39148,"byte_end":39178,"line_start":67,"line_end":67,"column_start":1,"column_end":31}},{"value":"/     }","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":39179,"byte_end":39188,"line_start":68,"line_end":68,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":39189,"byte_end":39194,"line_start":69,"line_end":69,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":39195,"byte_end":39202,"line_start":70,"line_end":70,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":39203,"byte_end":39206,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ # Other operations","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":39207,"byte_end":39229,"line_start":72,"line_end":72,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":39230,"byte_end":39233,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/ Every keyword and punctuation token supports the following operations.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":39234,"byte_end":39308,"line_start":74,"line_end":74,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":39309,"byte_end":39312,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ - [Peeking] — `input.peek(Token![...])`","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":39313,"byte_end":39358,"line_start":76,"line_end":76,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":39359,"byte_end":39362,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/ - [Parsing] — `input.parse::<Token![...]>()?`","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":39363,"byte_end":39414,"line_start":78,"line_end":78,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":39415,"byte_end":39418,"line_start":79,"line_end":79,"column_start":1,"column_end":4}},{"value":"/ - [Printing] — `quote!( ... #the_token ... )`","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":39419,"byte_end":39470,"line_start":80,"line_end":80,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":39471,"byte_end":39474,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"/ - Construction from a [`Span`] — `let the_token = Token![...](sp)`","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":39475,"byte_end":39547,"line_start":82,"line_end":82,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":39548,"byte_end":39551,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/ - Field access to its span — `let sp = the_token.span`","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":39552,"byte_end":39612,"line_start":84,"line_end":84,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":39613,"byte_end":39616,"line_start":85,"line_end":85,"column_start":1,"column_end":4}},{"value":"/ [Peeking]: crate::parse::ParseBuffer::peek()","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":39617,"byte_end":39665,"line_start":86,"line_end":86,"column_start":1,"column_end":49}},{"value":"/ [Parsing]: crate::parse::ParseBuffer::parse()","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":39666,"byte_end":39715,"line_start":87,"line_end":87,"column_start":1,"column_end":50}},{"value":"/ [Printing]: https://docs.rs/quote/1.0/quote/trait.ToTokens.html","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":39716,"byte_end":39783,"line_start":88,"line_end":88,"column_start":1,"column_end":68}},{"value":"/ [`Span`]: https://docs.rs/proc-macro2/1.0/proc_macro2/struct.Span.html","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":39784,"byte_end":39858,"line_start":89,"line_end":89,"column_start":1,"column_end":75}}]},{"kind":"Struct","id":{"krate":0,"index":33},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":41438,"byte_end":41446,"line_start":145,"line_end":145,"column_start":16,"column_end":24},"name":"WithSpan","qualname":"::token::private::WithSpan","value":"WithSpan { span }","parent":null,"children":[{"krate":0,"index":34}],"decl_id":null,"docs":" Support writing `token.span` rather than `token.spans[0]` on tokens that\n hold a single span.\n","sig":null,"attributes":[{"value":"/ Support writing `token.span` rather than `token.spans[0]` on tokens that","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":41303,"byte_end":41379,"line_start":142,"line_end":142,"column_start":5,"column_end":81}},{"value":"/ hold a single span.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":41384,"byte_end":41407,"line_start":143,"line_end":143,"column_start":5,"column_end":28}},{"value":"repr(C)","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":41412,"byte_end":41422,"line_start":144,"line_end":144,"column_start":5,"column_end":15}}]},{"kind":"Field","id":{"krate":0,"index":34},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":41461,"byte_end":41465,"line_start":146,"line_end":146,"column_start":13,"column_end":17},"name":"span","qualname":"::token::private::WithSpan::span","value":"proc_macro2::Span","parent":{"krate":0,"index":33},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1713},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":53847,"byte_end":53857,"line_start":557,"line_end":557,"column_start":20,"column_end":30},"name":"Underscore","qualname":"::token::Underscore","value":"Underscore { spans }","parent":null,"children":[{"krate":0,"index":1714}],"decl_id":null,"docs":" `_`","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":47840,"byte_end":47850,"line_start":366,"line_end":366,"column_start":13,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":47883,"byte_end":47886,"line_start":368,"line_end":368,"column_start":13,"column_end":16}},{"value":"/ Don't try to remember the name of this type &mdash; use the","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":47899,"byte_end":47962,"line_start":369,"line_end":369,"column_start":13,"column_end":76}},{"value":"/ [`Token!`] macro instead.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":47975,"byte_end":48004,"line_start":370,"line_end":370,"column_start":13,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":48017,"byte_end":48020,"line_start":371,"line_end":371,"column_start":13,"column_end":16}},{"value":"/ [`Token!`]: crate::token","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":48033,"byte_end":48061,"line_start":372,"line_end":372,"column_start":13,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":1716},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":53847,"byte_end":53857,"line_start":557,"line_end":557,"column_start":20,"column_end":30},"name":"Underscore","qualname":"::token::Underscore","value":"fn Underscore<S>(S) -> Underscore where S: IntoSpans<[Span; ]>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":48188,"byte_end":48212,"line_start":378,"line_end":378,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":1727},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":56132,"byte_end":56140,"line_start":653,"line_end":653,"column_start":30,"column_end":38},"name":"Abstract","qualname":"::token::Abstract","value":"Abstract { span }","parent":null,"children":[{"krate":0,"index":1728}],"decl_id":null,"docs":" `abstract`","sig":null,"attributes":[{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":44046,"byte_end":44049,"line_start":245,"line_end":245,"column_start":13,"column_end":16}},{"value":"/ Don't try to remember the name of this type &mdash; use the","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":44062,"byte_end":44125,"line_start":246,"line_end":246,"column_start":13,"column_end":76}},{"value":"/ [`Token!`] macro instead.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":44138,"byte_end":44167,"line_start":247,"line_end":247,"column_start":13,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":44180,"byte_end":44183,"line_start":248,"line_end":248,"column_start":13,"column_end":16}},{"value":"/ [`Token!`]: crate::token","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":44196,"byte_end":44224,"line_start":249,"line_end":249,"column_start":13,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":1729},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":56132,"byte_end":56140,"line_start":653,"line_end":653,"column_start":30,"column_end":38},"name":"Abstract","qualname":"::token::Abstract","value":"fn Abstract<S>(S) -> Abstract where S: IntoSpans<[Span; ]>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":44342,"byte_end":44366,"line_start":255,"line_end":255,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":1734},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":56189,"byte_end":56191,"line_start":654,"line_end":654,"column_start":30,"column_end":32},"name":"As","qualname":"::token::As","value":"As { span }","parent":null,"children":[{"krate":0,"index":1735}],"decl_id":null,"docs":" `as`","sig":null,"attributes":[{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":44046,"byte_end":44049,"line_start":245,"line_end":245,"column_start":13,"column_end":16}},{"value":"/ Don't try to remember the name of this type &mdash; use the","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":44062,"byte_end":44125,"line_start":246,"line_end":246,"column_start":13,"column_end":76}},{"value":"/ [`Token!`] macro instead.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":44138,"byte_end":44167,"line_start":247,"line_end":247,"column_start":13,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":44180,"byte_end":44183,"line_start":248,"line_end":248,"column_start":13,"column_end":16}},{"value":"/ [`Token!`]: crate::token","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":44196,"byte_end":44224,"line_start":249,"line_end":249,"column_start":13,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":1736},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":56189,"byte_end":56191,"line_start":654,"line_end":654,"column_start":30,"column_end":32},"name":"As","qualname":"::token::As","value":"fn As<S>(S) -> As where S: IntoSpans<[Span; ]>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":44342,"byte_end":44366,"line_start":255,"line_end":255,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":1741},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":56240,"byte_end":56245,"line_start":655,"line_end":655,"column_start":30,"column_end":35},"name":"Async","qualname":"::token::Async","value":"Async { span }","parent":null,"children":[{"krate":0,"index":1742}],"decl_id":null,"docs":" `async`","sig":null,"attributes":[{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":44046,"byte_end":44049,"line_start":245,"line_end":245,"column_start":13,"column_end":16}},{"value":"/ Don't try to remember the name of this type &mdash; use the","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":44062,"byte_end":44125,"line_start":246,"line_end":246,"column_start":13,"column_end":76}},{"value":"/ [`Token!`] macro instead.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":44138,"byte_end":44167,"line_start":247,"line_end":247,"column_start":13,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":44180,"byte_end":44183,"line_start":248,"line_end":248,"column_start":13,"column_end":16}},{"value":"/ [`Token!`]: crate::token","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":44196,"byte_end":44224,"line_start":249,"line_end":249,"column_start":13,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":1743},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":56240,"byte_end":56245,"line_start":655,"line_end":655,"column_start":30,"column_end":35},"name":"Async","qualname":"::token::Async","value":"fn Async<S>(S) -> Async where S: IntoSpans<[Span; ]>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":44342,"byte_end":44366,"line_start":255,"line_end":255,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":1748},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":56294,"byte_end":56298,"line_start":656,"line_end":656,"column_start":30,"column_end":34},"name":"Auto","qualname":"::token::Auto","value":"Auto { span }","parent":null,"children":[{"krate":0,"index":1749}],"decl_id":null,"docs":" `auto`","sig":null,"attributes":[{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":44046,"byte_end":44049,"line_start":245,"line_end":245,"column_start":13,"column_end":16}},{"value":"/ Don't try to remember the name of this type &mdash; use the","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":44062,"byte_end":44125,"line_start":246,"line_end":246,"column_start":13,"column_end":76}},{"value":"/ [`Token!`] macro instead.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":44138,"byte_end":44167,"line_start":247,"line_end":247,"column_start":13,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":44180,"byte_end":44183,"line_start":248,"line_end":248,"column_start":13,"column_end":16}},{"value":"/ [`Token!`]: crate::token","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":44196,"byte_end":44224,"line_start":249,"line_end":249,"column_start":13,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":1750},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":56294,"byte_end":56298,"line_start":656,"line_end":656,"column_start":30,"column_end":34},"name":"Auto","qualname":"::token::Auto","value":"fn Auto<S>(S) -> Auto where S: IntoSpans<[Span; ]>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":44342,"byte_end":44366,"line_start":255,"line_end":255,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":1755},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":56347,"byte_end":56352,"line_start":657,"line_end":657,"column_start":30,"column_end":35},"name":"Await","qualname":"::token::Await","value":"Await { span }","parent":null,"children":[{"krate":0,"index":1756}],"decl_id":null,"docs":" `await`","sig":null,"attributes":[{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":44046,"byte_end":44049,"line_start":245,"line_end":245,"column_start":13,"column_end":16}},{"value":"/ Don't try to remember the name of this type &mdash; use the","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":44062,"byte_end":44125,"line_start":246,"line_end":246,"column_start":13,"column_end":76}},{"value":"/ [`Token!`] macro instead.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":44138,"byte_end":44167,"line_start":247,"line_end":247,"column_start":13,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":44180,"byte_end":44183,"line_start":248,"line_end":248,"column_start":13,"column_end":16}},{"value":"/ [`Token!`]: crate::token","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":44196,"byte_end":44224,"line_start":249,"line_end":249,"column_start":13,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":1757},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":56347,"byte_end":56352,"line_start":657,"line_end":657,"column_start":30,"column_end":35},"name":"Await","qualname":"::token::Await","value":"fn Await<S>(S) -> Await where S: IntoSpans<[Span; ]>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":44342,"byte_end":44366,"line_start":255,"line_end":255,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":1762},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":56401,"byte_end":56407,"line_start":658,"line_end":658,"column_start":30,"column_end":36},"name":"Become","qualname":"::token::Become","value":"Become { span }","parent":null,"children":[{"krate":0,"index":1763}],"decl_id":null,"docs":" `become`","sig":null,"attributes":[{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":44046,"byte_end":44049,"line_start":245,"line_end":245,"column_start":13,"column_end":16}},{"value":"/ Don't try to remember the name of this type &mdash; use the","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":44062,"byte_end":44125,"line_start":246,"line_end":246,"column_start":13,"column_end":76}},{"value":"/ [`Token!`] macro instead.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":44138,"byte_end":44167,"line_start":247,"line_end":247,"column_start":13,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":44180,"byte_end":44183,"line_start":248,"line_end":248,"column_start":13,"column_end":16}},{"value":"/ [`Token!`]: crate::token","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":44196,"byte_end":44224,"line_start":249,"line_end":249,"column_start":13,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":1764},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":56401,"byte_end":56407,"line_start":658,"line_end":658,"column_start":30,"column_end":36},"name":"Become","qualname":"::token::Become","value":"fn Become<S>(S) -> Become where S: IntoSpans<[Span; ]>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":44342,"byte_end":44366,"line_start":255,"line_end":255,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":1769},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":56456,"byte_end":56459,"line_start":659,"line_end":659,"column_start":30,"column_end":33},"name":"Box","qualname":"::token::Box","value":"Box { span }","parent":null,"children":[{"krate":0,"index":1770}],"decl_id":null,"docs":" `box`","sig":null,"attributes":[{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":44046,"byte_end":44049,"line_start":245,"line_end":245,"column_start":13,"column_end":16}},{"value":"/ Don't try to remember the name of this type &mdash; use the","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":44062,"byte_end":44125,"line_start":246,"line_end":246,"column_start":13,"column_end":76}},{"value":"/ [`Token!`] macro instead.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":44138,"byte_end":44167,"line_start":247,"line_end":247,"column_start":13,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":44180,"byte_end":44183,"line_start":248,"line_end":248,"column_start":13,"column_end":16}},{"value":"/ [`Token!`]: crate::token","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":44196,"byte_end":44224,"line_start":249,"line_end":249,"column_start":13,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":1771},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":56456,"byte_end":56459,"line_start":659,"line_end":659,"column_start":30,"column_end":33},"name":"Box","qualname":"::token::Box","value":"fn Box<S>(S) -> Box where S: IntoSpans<[Span; ]>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":44342,"byte_end":44366,"line_start":255,"line_end":255,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":1776},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":56508,"byte_end":56513,"line_start":660,"line_end":660,"column_start":30,"column_end":35},"name":"Break","qualname":"::token::Break","value":"Break { span }","parent":null,"children":[{"krate":0,"index":1777}],"decl_id":null,"docs":" `break`","sig":null,"attributes":[{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":44046,"byte_end":44049,"line_start":245,"line_end":245,"column_start":13,"column_end":16}},{"value":"/ Don't try to remember the name of this type &mdash; use the","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":44062,"byte_end":44125,"line_start":246,"line_end":246,"column_start":13,"column_end":76}},{"value":"/ [`Token!`] macro instead.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":44138,"byte_end":44167,"line_start":247,"line_end":247,"column_start":13,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":44180,"byte_end":44183,"line_start":248,"line_end":248,"column_start":13,"column_end":16}},{"value":"/ [`Token!`]: crate::token","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":44196,"byte_end":44224,"line_start":249,"line_end":249,"column_start":13,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":1778},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":56508,"byte_end":56513,"line_start":660,"line_end":660,"column_start":30,"column_end":35},"name":"Break","qualname":"::token::Break","value":"fn Break<S>(S) -> Break where S: IntoSpans<[Span; ]>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":44342,"byte_end":44366,"line_start":255,"line_end":255,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":1783},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":56562,"byte_end":56567,"line_start":661,"line_end":661,"column_start":30,"column_end":35},"name":"Const","qualname":"::token::Const","value":"Const { span }","parent":null,"children":[{"krate":0,"index":1784}],"decl_id":null,"docs":" `const`","sig":null,"attributes":[{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":44046,"byte_end":44049,"line_start":245,"line_end":245,"column_start":13,"column_end":16}},{"value":"/ Don't try to remember the name of this type &mdash; use the","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":44062,"byte_end":44125,"line_start":246,"line_end":246,"column_start":13,"column_end":76}},{"value":"/ [`Token!`] macro instead.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":44138,"byte_end":44167,"line_start":247,"line_end":247,"column_start":13,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":44180,"byte_end":44183,"line_start":248,"line_end":248,"column_start":13,"column_end":16}},{"value":"/ [`Token!`]: crate::token","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":44196,"byte_end":44224,"line_start":249,"line_end":249,"column_start":13,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":1785},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":56562,"byte_end":56567,"line_start":661,"line_end":661,"column_start":30,"column_end":35},"name":"Const","qualname":"::token::Const","value":"fn Const<S>(S) -> Const where S: IntoSpans<[Span; ]>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":44342,"byte_end":44366,"line_start":255,"line_end":255,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":1790},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":56616,"byte_end":56624,"line_start":662,"line_end":662,"column_start":30,"column_end":38},"name":"Continue","qualname":"::token::Continue","value":"Continue { span }","parent":null,"children":[{"krate":0,"index":1791}],"decl_id":null,"docs":" `continue`","sig":null,"attributes":[{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":44046,"byte_end":44049,"line_start":245,"line_end":245,"column_start":13,"column_end":16}},{"value":"/ Don't try to remember the name of this type &mdash; use the","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":44062,"byte_end":44125,"line_start":246,"line_end":246,"column_start":13,"column_end":76}},{"value":"/ [`Token!`] macro instead.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":44138,"byte_end":44167,"line_start":247,"line_end":247,"column_start":13,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":44180,"byte_end":44183,"line_start":248,"line_end":248,"column_start":13,"column_end":16}},{"value":"/ [`Token!`]: crate::token","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":44196,"byte_end":44224,"line_start":249,"line_end":249,"column_start":13,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":1792},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":56616,"byte_end":56624,"line_start":662,"line_end":662,"column_start":30,"column_end":38},"name":"Continue","qualname":"::token::Continue","value":"fn Continue<S>(S) -> Continue where S: IntoSpans<[Span; ]>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":44342,"byte_end":44366,"line_start":255,"line_end":255,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":1797},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":56673,"byte_end":56678,"line_start":663,"line_end":663,"column_start":30,"column_end":35},"name":"Crate","qualname":"::token::Crate","value":"Crate { span }","parent":null,"children":[{"krate":0,"index":1798}],"decl_id":null,"docs":" `crate`","sig":null,"attributes":[{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":44046,"byte_end":44049,"line_start":245,"line_end":245,"column_start":13,"column_end":16}},{"value":"/ Don't try to remember the name of this type &mdash; use the","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":44062,"byte_end":44125,"line_start":246,"line_end":246,"column_start":13,"column_end":76}},{"value":"/ [`Token!`] macro instead.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":44138,"byte_end":44167,"line_start":247,"line_end":247,"column_start":13,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":44180,"byte_end":44183,"line_start":248,"line_end":248,"column_start":13,"column_end":16}},{"value":"/ [`Token!`]: crate::token","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":44196,"byte_end":44224,"line_start":249,"line_end":249,"column_start":13,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":1799},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":56673,"byte_end":56678,"line_start":663,"line_end":663,"column_start":30,"column_end":35},"name":"Crate","qualname":"::token::Crate","value":"fn Crate<S>(S) -> Crate where S: IntoSpans<[Span; ]>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":44342,"byte_end":44366,"line_start":255,"line_end":255,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":1804},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":56727,"byte_end":56734,"line_start":664,"line_end":664,"column_start":30,"column_end":37},"name":"Default","qualname":"::token::Default","value":"Default { span }","parent":null,"children":[{"krate":0,"index":1805}],"decl_id":null,"docs":" `default`","sig":null,"attributes":[{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":44046,"byte_end":44049,"line_start":245,"line_end":245,"column_start":13,"column_end":16}},{"value":"/ Don't try to remember the name of this type &mdash; use the","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":44062,"byte_end":44125,"line_start":246,"line_end":246,"column_start":13,"column_end":76}},{"value":"/ [`Token!`] macro instead.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":44138,"byte_end":44167,"line_start":247,"line_end":247,"column_start":13,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":44180,"byte_end":44183,"line_start":248,"line_end":248,"column_start":13,"column_end":16}},{"value":"/ [`Token!`]: crate::token","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":44196,"byte_end":44224,"line_start":249,"line_end":249,"column_start":13,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":1806},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":56727,"byte_end":56734,"line_start":664,"line_end":664,"column_start":30,"column_end":37},"name":"Default","qualname":"::token::Default","value":"fn Default<S>(S) -> Default where S: IntoSpans<[Span; ]>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":44342,"byte_end":44366,"line_start":255,"line_end":255,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":1811},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":56783,"byte_end":56785,"line_start":665,"line_end":665,"column_start":30,"column_end":32},"name":"Do","qualname":"::token::Do","value":"Do { span }","parent":null,"children":[{"krate":0,"index":1812}],"decl_id":null,"docs":" `do`","sig":null,"attributes":[{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":44046,"byte_end":44049,"line_start":245,"line_end":245,"column_start":13,"column_end":16}},{"value":"/ Don't try to remember the name of this type &mdash; use the","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":44062,"byte_end":44125,"line_start":246,"line_end":246,"column_start":13,"column_end":76}},{"value":"/ [`Token!`] macro instead.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":44138,"byte_end":44167,"line_start":247,"line_end":247,"column_start":13,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":44180,"byte_end":44183,"line_start":248,"line_end":248,"column_start":13,"column_end":16}},{"value":"/ [`Token!`]: crate::token","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":44196,"byte_end":44224,"line_start":249,"line_end":249,"column_start":13,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":1813},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":56783,"byte_end":56785,"line_start":665,"line_end":665,"column_start":30,"column_end":32},"name":"Do","qualname":"::token::Do","value":"fn Do<S>(S) -> Do where S: IntoSpans<[Span; ]>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":44342,"byte_end":44366,"line_start":255,"line_end":255,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":1818},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":56834,"byte_end":56837,"line_start":666,"line_end":666,"column_start":30,"column_end":33},"name":"Dyn","qualname":"::token::Dyn","value":"Dyn { span }","parent":null,"children":[{"krate":0,"index":1819}],"decl_id":null,"docs":" `dyn`","sig":null,"attributes":[{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":44046,"byte_end":44049,"line_start":245,"line_end":245,"column_start":13,"column_end":16}},{"value":"/ Don't try to remember the name of this type &mdash; use the","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":44062,"byte_end":44125,"line_start":246,"line_end":246,"column_start":13,"column_end":76}},{"value":"/ [`Token!`] macro instead.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":44138,"byte_end":44167,"line_start":247,"line_end":247,"column_start":13,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":44180,"byte_end":44183,"line_start":248,"line_end":248,"column_start":13,"column_end":16}},{"value":"/ [`Token!`]: crate::token","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":44196,"byte_end":44224,"line_start":249,"line_end":249,"column_start":13,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":1820},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":56834,"byte_end":56837,"line_start":666,"line_end":666,"column_start":30,"column_end":33},"name":"Dyn","qualname":"::token::Dyn","value":"fn Dyn<S>(S) -> Dyn where S: IntoSpans<[Span; ]>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":44342,"byte_end":44366,"line_start":255,"line_end":255,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":1825},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":56886,"byte_end":56890,"line_start":667,"line_end":667,"column_start":30,"column_end":34},"name":"Else","qualname":"::token::Else","value":"Else { span }","parent":null,"children":[{"krate":0,"index":1826}],"decl_id":null,"docs":" `else`","sig":null,"attributes":[{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":44046,"byte_end":44049,"line_start":245,"line_end":245,"column_start":13,"column_end":16}},{"value":"/ Don't try to remember the name of this type &mdash; use the","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":44062,"byte_end":44125,"line_start":246,"line_end":246,"column_start":13,"column_end":76}},{"value":"/ [`Token!`] macro instead.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":44138,"byte_end":44167,"line_start":247,"line_end":247,"column_start":13,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":44180,"byte_end":44183,"line_start":248,"line_end":248,"column_start":13,"column_end":16}},{"value":"/ [`Token!`]: crate::token","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":44196,"byte_end":44224,"line_start":249,"line_end":249,"column_start":13,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":1827},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":56886,"byte_end":56890,"line_start":667,"line_end":667,"column_start":30,"column_end":34},"name":"Else","qualname":"::token::Else","value":"fn Else<S>(S) -> Else where S: IntoSpans<[Span; ]>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":44342,"byte_end":44366,"line_start":255,"line_end":255,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":1832},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":56939,"byte_end":56943,"line_start":668,"line_end":668,"column_start":30,"column_end":34},"name":"Enum","qualname":"::token::Enum","value":"Enum { span }","parent":null,"children":[{"krate":0,"index":1833}],"decl_id":null,"docs":" `enum`","sig":null,"attributes":[{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":44046,"byte_end":44049,"line_start":245,"line_end":245,"column_start":13,"column_end":16}},{"value":"/ Don't try to remember the name of this type &mdash; use the","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":44062,"byte_end":44125,"line_start":246,"line_end":246,"column_start":13,"column_end":76}},{"value":"/ [`Token!`] macro instead.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":44138,"byte_end":44167,"line_start":247,"line_end":247,"column_start":13,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":44180,"byte_end":44183,"line_start":248,"line_end":248,"column_start":13,"column_end":16}},{"value":"/ [`Token!`]: crate::token","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":44196,"byte_end":44224,"line_start":249,"line_end":249,"column_start":13,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":1834},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":56939,"byte_end":56943,"line_start":668,"line_end":668,"column_start":30,"column_end":34},"name":"Enum","qualname":"::token::Enum","value":"fn Enum<S>(S) -> Enum where S: IntoSpans<[Span; ]>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":44342,"byte_end":44366,"line_start":255,"line_end":255,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":1839},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":56992,"byte_end":56998,"line_start":669,"line_end":669,"column_start":30,"column_end":36},"name":"Extern","qualname":"::token::Extern","value":"Extern { span }","parent":null,"children":[{"krate":0,"index":1840}],"decl_id":null,"docs":" `extern`","sig":null,"attributes":[{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":44046,"byte_end":44049,"line_start":245,"line_end":245,"column_start":13,"column_end":16}},{"value":"/ Don't try to remember the name of this type &mdash; use the","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":44062,"byte_end":44125,"line_start":246,"line_end":246,"column_start":13,"column_end":76}},{"value":"/ [`Token!`] macro instead.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":44138,"byte_end":44167,"line_start":247,"line_end":247,"column_start":13,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":44180,"byte_end":44183,"line_start":248,"line_end":248,"column_start":13,"column_end":16}},{"value":"/ [`Token!`]: crate::token","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":44196,"byte_end":44224,"line_start":249,"line_end":249,"column_start":13,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":1841},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":56992,"byte_end":56998,"line_start":669,"line_end":669,"column_start":30,"column_end":36},"name":"Extern","qualname":"::token::Extern","value":"fn Extern<S>(S) -> Extern where S: IntoSpans<[Span; ]>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":44342,"byte_end":44366,"line_start":255,"line_end":255,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":1846},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":57047,"byte_end":57052,"line_start":670,"line_end":670,"column_start":30,"column_end":35},"name":"Final","qualname":"::token::Final","value":"Final { span }","parent":null,"children":[{"krate":0,"index":1847}],"decl_id":null,"docs":" `final`","sig":null,"attributes":[{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":44046,"byte_end":44049,"line_start":245,"line_end":245,"column_start":13,"column_end":16}},{"value":"/ Don't try to remember the name of this type &mdash; use the","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":44062,"byte_end":44125,"line_start":246,"line_end":246,"column_start":13,"column_end":76}},{"value":"/ [`Token!`] macro instead.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":44138,"byte_end":44167,"line_start":247,"line_end":247,"column_start":13,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":44180,"byte_end":44183,"line_start":248,"line_end":248,"column_start":13,"column_end":16}},{"value":"/ [`Token!`]: crate::token","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":44196,"byte_end":44224,"line_start":249,"line_end":249,"column_start":13,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":1848},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":57047,"byte_end":57052,"line_start":670,"line_end":670,"column_start":30,"column_end":35},"name":"Final","qualname":"::token::Final","value":"fn Final<S>(S) -> Final where S: IntoSpans<[Span; ]>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":44342,"byte_end":44366,"line_start":255,"line_end":255,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":1853},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":57101,"byte_end":57103,"line_start":671,"line_end":671,"column_start":30,"column_end":32},"name":"Fn","qualname":"::token::Fn","value":"Fn { span }","parent":null,"children":[{"krate":0,"index":1854}],"decl_id":null,"docs":" `fn`","sig":null,"attributes":[{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":44046,"byte_end":44049,"line_start":245,"line_end":245,"column_start":13,"column_end":16}},{"value":"/ Don't try to remember the name of this type &mdash; use the","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":44062,"byte_end":44125,"line_start":246,"line_end":246,"column_start":13,"column_end":76}},{"value":"/ [`Token!`] macro instead.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":44138,"byte_end":44167,"line_start":247,"line_end":247,"column_start":13,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":44180,"byte_end":44183,"line_start":248,"line_end":248,"column_start":13,"column_end":16}},{"value":"/ [`Token!`]: crate::token","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":44196,"byte_end":44224,"line_start":249,"line_end":249,"column_start":13,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":1855},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":57101,"byte_end":57103,"line_start":671,"line_end":671,"column_start":30,"column_end":32},"name":"Fn","qualname":"::token::Fn","value":"fn Fn<S>(S) -> Fn where S: IntoSpans<[Span; ]>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":44342,"byte_end":44366,"line_start":255,"line_end":255,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":1860},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":57152,"byte_end":57155,"line_start":672,"line_end":672,"column_start":30,"column_end":33},"name":"For","qualname":"::token::For","value":"For { span }","parent":null,"children":[{"krate":0,"index":1861}],"decl_id":null,"docs":" `for`","sig":null,"attributes":[{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":44046,"byte_end":44049,"line_start":245,"line_end":245,"column_start":13,"column_end":16}},{"value":"/ Don't try to remember the name of this type &mdash; use the","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":44062,"byte_end":44125,"line_start":246,"line_end":246,"column_start":13,"column_end":76}},{"value":"/ [`Token!`] macro instead.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":44138,"byte_end":44167,"line_start":247,"line_end":247,"column_start":13,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":44180,"byte_end":44183,"line_start":248,"line_end":248,"column_start":13,"column_end":16}},{"value":"/ [`Token!`]: crate::token","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":44196,"byte_end":44224,"line_start":249,"line_end":249,"column_start":13,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":1862},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":57152,"byte_end":57155,"line_start":672,"line_end":672,"column_start":30,"column_end":33},"name":"For","qualname":"::token::For","value":"fn For<S>(S) -> For where S: IntoSpans<[Span; ]>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":44342,"byte_end":44366,"line_start":255,"line_end":255,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":1867},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":57204,"byte_end":57206,"line_start":673,"line_end":673,"column_start":30,"column_end":32},"name":"If","qualname":"::token::If","value":"If { span }","parent":null,"children":[{"krate":0,"index":1868}],"decl_id":null,"docs":" `if`","sig":null,"attributes":[{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":44046,"byte_end":44049,"line_start":245,"line_end":245,"column_start":13,"column_end":16}},{"value":"/ Don't try to remember the name of this type &mdash; use the","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":44062,"byte_end":44125,"line_start":246,"line_end":246,"column_start":13,"column_end":76}},{"value":"/ [`Token!`] macro instead.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":44138,"byte_end":44167,"line_start":247,"line_end":247,"column_start":13,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":44180,"byte_end":44183,"line_start":248,"line_end":248,"column_start":13,"column_end":16}},{"value":"/ [`Token!`]: crate::token","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":44196,"byte_end":44224,"line_start":249,"line_end":249,"column_start":13,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":1869},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":57204,"byte_end":57206,"line_start":673,"line_end":673,"column_start":30,"column_end":32},"name":"If","qualname":"::token::If","value":"fn If<S>(S) -> If where S: IntoSpans<[Span; ]>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":44342,"byte_end":44366,"line_start":255,"line_end":255,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":1874},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":57255,"byte_end":57259,"line_start":674,"line_end":674,"column_start":30,"column_end":34},"name":"Impl","qualname":"::token::Impl","value":"Impl { span }","parent":null,"children":[{"krate":0,"index":1875}],"decl_id":null,"docs":" `impl`","sig":null,"attributes":[{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":44046,"byte_end":44049,"line_start":245,"line_end":245,"column_start":13,"column_end":16}},{"value":"/ Don't try to remember the name of this type &mdash; use the","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":44062,"byte_end":44125,"line_start":246,"line_end":246,"column_start":13,"column_end":76}},{"value":"/ [`Token!`] macro instead.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":44138,"byte_end":44167,"line_start":247,"line_end":247,"column_start":13,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":44180,"byte_end":44183,"line_start":248,"line_end":248,"column_start":13,"column_end":16}},{"value":"/ [`Token!`]: crate::token","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":44196,"byte_end":44224,"line_start":249,"line_end":249,"column_start":13,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":1876},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":57255,"byte_end":57259,"line_start":674,"line_end":674,"column_start":30,"column_end":34},"name":"Impl","qualname":"::token::Impl","value":"fn Impl<S>(S) -> Impl where S: IntoSpans<[Span; ]>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":44342,"byte_end":44366,"line_start":255,"line_end":255,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":1881},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":57308,"byte_end":57310,"line_start":675,"line_end":675,"column_start":30,"column_end":32},"name":"In","qualname":"::token::In","value":"In { span }","parent":null,"children":[{"krate":0,"index":1882}],"decl_id":null,"docs":" `in`","sig":null,"attributes":[{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":44046,"byte_end":44049,"line_start":245,"line_end":245,"column_start":13,"column_end":16}},{"value":"/ Don't try to remember the name of this type &mdash; use the","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":44062,"byte_end":44125,"line_start":246,"line_end":246,"column_start":13,"column_end":76}},{"value":"/ [`Token!`] macro instead.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":44138,"byte_end":44167,"line_start":247,"line_end":247,"column_start":13,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":44180,"byte_end":44183,"line_start":248,"line_end":248,"column_start":13,"column_end":16}},{"value":"/ [`Token!`]: crate::token","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":44196,"byte_end":44224,"line_start":249,"line_end":249,"column_start":13,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":1883},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":57308,"byte_end":57310,"line_start":675,"line_end":675,"column_start":30,"column_end":32},"name":"In","qualname":"::token::In","value":"fn In<S>(S) -> In where S: IntoSpans<[Span; ]>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":44342,"byte_end":44366,"line_start":255,"line_end":255,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":1888},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":57359,"byte_end":57362,"line_start":676,"line_end":676,"column_start":30,"column_end":33},"name":"Let","qualname":"::token::Let","value":"Let { span }","parent":null,"children":[{"krate":0,"index":1889}],"decl_id":null,"docs":" `let`","sig":null,"attributes":[{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":44046,"byte_end":44049,"line_start":245,"line_end":245,"column_start":13,"column_end":16}},{"value":"/ Don't try to remember the name of this type &mdash; use the","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":44062,"byte_end":44125,"line_start":246,"line_end":246,"column_start":13,"column_end":76}},{"value":"/ [`Token!`] macro instead.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":44138,"byte_end":44167,"line_start":247,"line_end":247,"column_start":13,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":44180,"byte_end":44183,"line_start":248,"line_end":248,"column_start":13,"column_end":16}},{"value":"/ [`Token!`]: crate::token","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":44196,"byte_end":44224,"line_start":249,"line_end":249,"column_start":13,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":1890},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":57359,"byte_end":57362,"line_start":676,"line_end":676,"column_start":30,"column_end":33},"name":"Let","qualname":"::token::Let","value":"fn Let<S>(S) -> Let where S: IntoSpans<[Span; ]>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":44342,"byte_end":44366,"line_start":255,"line_end":255,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":1895},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":57411,"byte_end":57415,"line_start":677,"line_end":677,"column_start":30,"column_end":34},"name":"Loop","qualname":"::token::Loop","value":"Loop { span }","parent":null,"children":[{"krate":0,"index":1896}],"decl_id":null,"docs":" `loop`","sig":null,"attributes":[{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":44046,"byte_end":44049,"line_start":245,"line_end":245,"column_start":13,"column_end":16}},{"value":"/ Don't try to remember the name of this type &mdash; use the","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":44062,"byte_end":44125,"line_start":246,"line_end":246,"column_start":13,"column_end":76}},{"value":"/ [`Token!`] macro instead.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":44138,"byte_end":44167,"line_start":247,"line_end":247,"column_start":13,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":44180,"byte_end":44183,"line_start":248,"line_end":248,"column_start":13,"column_end":16}},{"value":"/ [`Token!`]: crate::token","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":44196,"byte_end":44224,"line_start":249,"line_end":249,"column_start":13,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":1897},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":57411,"byte_end":57415,"line_start":677,"line_end":677,"column_start":30,"column_end":34},"name":"Loop","qualname":"::token::Loop","value":"fn Loop<S>(S) -> Loop where S: IntoSpans<[Span; ]>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":44342,"byte_end":44366,"line_start":255,"line_end":255,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":1902},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":57464,"byte_end":57469,"line_start":678,"line_end":678,"column_start":30,"column_end":35},"name":"Macro","qualname":"::token::Macro","value":"Macro { span }","parent":null,"children":[{"krate":0,"index":1903}],"decl_id":null,"docs":" `macro`","sig":null,"attributes":[{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":44046,"byte_end":44049,"line_start":245,"line_end":245,"column_start":13,"column_end":16}},{"value":"/ Don't try to remember the name of this type &mdash; use the","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":44062,"byte_end":44125,"line_start":246,"line_end":246,"column_start":13,"column_end":76}},{"value":"/ [`Token!`] macro instead.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":44138,"byte_end":44167,"line_start":247,"line_end":247,"column_start":13,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":44180,"byte_end":44183,"line_start":248,"line_end":248,"column_start":13,"column_end":16}},{"value":"/ [`Token!`]: crate::token","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":44196,"byte_end":44224,"line_start":249,"line_end":249,"column_start":13,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":1904},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":57464,"byte_end":57469,"line_start":678,"line_end":678,"column_start":30,"column_end":35},"name":"Macro","qualname":"::token::Macro","value":"fn Macro<S>(S) -> Macro where S: IntoSpans<[Span; ]>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":44342,"byte_end":44366,"line_start":255,"line_end":255,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":1909},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":57518,"byte_end":57523,"line_start":679,"line_end":679,"column_start":30,"column_end":35},"name":"Match","qualname":"::token::Match","value":"Match { span }","parent":null,"children":[{"krate":0,"index":1910}],"decl_id":null,"docs":" `match`","sig":null,"attributes":[{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":44046,"byte_end":44049,"line_start":245,"line_end":245,"column_start":13,"column_end":16}},{"value":"/ Don't try to remember the name of this type &mdash; use the","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":44062,"byte_end":44125,"line_start":246,"line_end":246,"column_start":13,"column_end":76}},{"value":"/ [`Token!`] macro instead.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":44138,"byte_end":44167,"line_start":247,"line_end":247,"column_start":13,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":44180,"byte_end":44183,"line_start":248,"line_end":248,"column_start":13,"column_end":16}},{"value":"/ [`Token!`]: crate::token","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":44196,"byte_end":44224,"line_start":249,"line_end":249,"column_start":13,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":1911},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":57518,"byte_end":57523,"line_start":679,"line_end":679,"column_start":30,"column_end":35},"name":"Match","qualname":"::token::Match","value":"fn Match<S>(S) -> Match where S: IntoSpans<[Span; ]>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":44342,"byte_end":44366,"line_start":255,"line_end":255,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":1916},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":57572,"byte_end":57575,"line_start":680,"line_end":680,"column_start":30,"column_end":33},"name":"Mod","qualname":"::token::Mod","value":"Mod { span }","parent":null,"children":[{"krate":0,"index":1917}],"decl_id":null,"docs":" `mod`","sig":null,"attributes":[{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":44046,"byte_end":44049,"line_start":245,"line_end":245,"column_start":13,"column_end":16}},{"value":"/ Don't try to remember the name of this type &mdash; use the","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":44062,"byte_end":44125,"line_start":246,"line_end":246,"column_start":13,"column_end":76}},{"value":"/ [`Token!`] macro instead.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":44138,"byte_end":44167,"line_start":247,"line_end":247,"column_start":13,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":44180,"byte_end":44183,"line_start":248,"line_end":248,"column_start":13,"column_end":16}},{"value":"/ [`Token!`]: crate::token","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":44196,"byte_end":44224,"line_start":249,"line_end":249,"column_start":13,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":1918},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":57572,"byte_end":57575,"line_start":680,"line_end":680,"column_start":30,"column_end":33},"name":"Mod","qualname":"::token::Mod","value":"fn Mod<S>(S) -> Mod where S: IntoSpans<[Span; ]>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":44342,"byte_end":44366,"line_start":255,"line_end":255,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":1923},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":57624,"byte_end":57628,"line_start":681,"line_end":681,"column_start":30,"column_end":34},"name":"Move","qualname":"::token::Move","value":"Move { span }","parent":null,"children":[{"krate":0,"index":1924}],"decl_id":null,"docs":" `move`","sig":null,"attributes":[{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":44046,"byte_end":44049,"line_start":245,"line_end":245,"column_start":13,"column_end":16}},{"value":"/ Don't try to remember the name of this type &mdash; use the","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":44062,"byte_end":44125,"line_start":246,"line_end":246,"column_start":13,"column_end":76}},{"value":"/ [`Token!`] macro instead.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":44138,"byte_end":44167,"line_start":247,"line_end":247,"column_start":13,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":44180,"byte_end":44183,"line_start":248,"line_end":248,"column_start":13,"column_end":16}},{"value":"/ [`Token!`]: crate::token","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":44196,"byte_end":44224,"line_start":249,"line_end":249,"column_start":13,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":1925},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":57624,"byte_end":57628,"line_start":681,"line_end":681,"column_start":30,"column_end":34},"name":"Move","qualname":"::token::Move","value":"fn Move<S>(S) -> Move where S: IntoSpans<[Span; ]>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":44342,"byte_end":44366,"line_start":255,"line_end":255,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":1930},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":57677,"byte_end":57680,"line_start":682,"line_end":682,"column_start":30,"column_end":33},"name":"Mut","qualname":"::token::Mut","value":"Mut { span }","parent":null,"children":[{"krate":0,"index":1931}],"decl_id":null,"docs":" `mut`","sig":null,"attributes":[{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":44046,"byte_end":44049,"line_start":245,"line_end":245,"column_start":13,"column_end":16}},{"value":"/ Don't try to remember the name of this type &mdash; use the","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":44062,"byte_end":44125,"line_start":246,"line_end":246,"column_start":13,"column_end":76}},{"value":"/ [`Token!`] macro instead.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":44138,"byte_end":44167,"line_start":247,"line_end":247,"column_start":13,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":44180,"byte_end":44183,"line_start":248,"line_end":248,"column_start":13,"column_end":16}},{"value":"/ [`Token!`]: crate::token","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":44196,"byte_end":44224,"line_start":249,"line_end":249,"column_start":13,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":1932},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":57677,"byte_end":57680,"line_start":682,"line_end":682,"column_start":30,"column_end":33},"name":"Mut","qualname":"::token::Mut","value":"fn Mut<S>(S) -> Mut where S: IntoSpans<[Span; ]>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":44342,"byte_end":44366,"line_start":255,"line_end":255,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":1937},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":57729,"byte_end":57737,"line_start":683,"line_end":683,"column_start":30,"column_end":38},"name":"Override","qualname":"::token::Override","value":"Override { span }","parent":null,"children":[{"krate":0,"index":1938}],"decl_id":null,"docs":" `override`","sig":null,"attributes":[{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":44046,"byte_end":44049,"line_start":245,"line_end":245,"column_start":13,"column_end":16}},{"value":"/ Don't try to remember the name of this type &mdash; use the","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":44062,"byte_end":44125,"line_start":246,"line_end":246,"column_start":13,"column_end":76}},{"value":"/ [`Token!`] macro instead.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":44138,"byte_end":44167,"line_start":247,"line_end":247,"column_start":13,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":44180,"byte_end":44183,"line_start":248,"line_end":248,"column_start":13,"column_end":16}},{"value":"/ [`Token!`]: crate::token","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":44196,"byte_end":44224,"line_start":249,"line_end":249,"column_start":13,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":1939},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":57729,"byte_end":57737,"line_start":683,"line_end":683,"column_start":30,"column_end":38},"name":"Override","qualname":"::token::Override","value":"fn Override<S>(S) -> Override where S: IntoSpans<[Span; ]>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":44342,"byte_end":44366,"line_start":255,"line_end":255,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":1944},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":57786,"byte_end":57790,"line_start":684,"line_end":684,"column_start":30,"column_end":34},"name":"Priv","qualname":"::token::Priv","value":"Priv { span }","parent":null,"children":[{"krate":0,"index":1945}],"decl_id":null,"docs":" `priv`","sig":null,"attributes":[{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":44046,"byte_end":44049,"line_start":245,"line_end":245,"column_start":13,"column_end":16}},{"value":"/ Don't try to remember the name of this type &mdash; use the","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":44062,"byte_end":44125,"line_start":246,"line_end":246,"column_start":13,"column_end":76}},{"value":"/ [`Token!`] macro instead.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":44138,"byte_end":44167,"line_start":247,"line_end":247,"column_start":13,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":44180,"byte_end":44183,"line_start":248,"line_end":248,"column_start":13,"column_end":16}},{"value":"/ [`Token!`]: crate::token","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":44196,"byte_end":44224,"line_start":249,"line_end":249,"column_start":13,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":1946},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":57786,"byte_end":57790,"line_start":684,"line_end":684,"column_start":30,"column_end":34},"name":"Priv","qualname":"::token::Priv","value":"fn Priv<S>(S) -> Priv where S: IntoSpans<[Span; ]>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":44342,"byte_end":44366,"line_start":255,"line_end":255,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":1951},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":57839,"byte_end":57842,"line_start":685,"line_end":685,"column_start":30,"column_end":33},"name":"Pub","qualname":"::token::Pub","value":"Pub { span }","parent":null,"children":[{"krate":0,"index":1952}],"decl_id":null,"docs":" `pub`","sig":null,"attributes":[{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":44046,"byte_end":44049,"line_start":245,"line_end":245,"column_start":13,"column_end":16}},{"value":"/ Don't try to remember the name of this type &mdash; use the","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":44062,"byte_end":44125,"line_start":246,"line_end":246,"column_start":13,"column_end":76}},{"value":"/ [`Token!`] macro instead.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":44138,"byte_end":44167,"line_start":247,"line_end":247,"column_start":13,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":44180,"byte_end":44183,"line_start":248,"line_end":248,"column_start":13,"column_end":16}},{"value":"/ [`Token!`]: crate::token","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":44196,"byte_end":44224,"line_start":249,"line_end":249,"column_start":13,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":1953},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":57839,"byte_end":57842,"line_start":685,"line_end":685,"column_start":30,"column_end":33},"name":"Pub","qualname":"::token::Pub","value":"fn Pub<S>(S) -> Pub where S: IntoSpans<[Span; ]>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":44342,"byte_end":44366,"line_start":255,"line_end":255,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":1958},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":57891,"byte_end":57894,"line_start":686,"line_end":686,"column_start":30,"column_end":33},"name":"Ref","qualname":"::token::Ref","value":"Ref { span }","parent":null,"children":[{"krate":0,"index":1959}],"decl_id":null,"docs":" `ref`","sig":null,"attributes":[{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":44046,"byte_end":44049,"line_start":245,"line_end":245,"column_start":13,"column_end":16}},{"value":"/ Don't try to remember the name of this type &mdash; use the","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":44062,"byte_end":44125,"line_start":246,"line_end":246,"column_start":13,"column_end":76}},{"value":"/ [`Token!`] macro instead.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":44138,"byte_end":44167,"line_start":247,"line_end":247,"column_start":13,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":44180,"byte_end":44183,"line_start":248,"line_end":248,"column_start":13,"column_end":16}},{"value":"/ [`Token!`]: crate::token","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":44196,"byte_end":44224,"line_start":249,"line_end":249,"column_start":13,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":1960},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":57891,"byte_end":57894,"line_start":686,"line_end":686,"column_start":30,"column_end":33},"name":"Ref","qualname":"::token::Ref","value":"fn Ref<S>(S) -> Ref where S: IntoSpans<[Span; ]>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":44342,"byte_end":44366,"line_start":255,"line_end":255,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":1965},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":57943,"byte_end":57949,"line_start":687,"line_end":687,"column_start":30,"column_end":36},"name":"Return","qualname":"::token::Return","value":"Return { span }","parent":null,"children":[{"krate":0,"index":1966}],"decl_id":null,"docs":" `return`","sig":null,"attributes":[{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":44046,"byte_end":44049,"line_start":245,"line_end":245,"column_start":13,"column_end":16}},{"value":"/ Don't try to remember the name of this type &mdash; use the","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":44062,"byte_end":44125,"line_start":246,"line_end":246,"column_start":13,"column_end":76}},{"value":"/ [`Token!`] macro instead.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":44138,"byte_end":44167,"line_start":247,"line_end":247,"column_start":13,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":44180,"byte_end":44183,"line_start":248,"line_end":248,"column_start":13,"column_end":16}},{"value":"/ [`Token!`]: crate::token","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":44196,"byte_end":44224,"line_start":249,"line_end":249,"column_start":13,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":1967},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":57943,"byte_end":57949,"line_start":687,"line_end":687,"column_start":30,"column_end":36},"name":"Return","qualname":"::token::Return","value":"fn Return<S>(S) -> Return where S: IntoSpans<[Span; ]>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":44342,"byte_end":44366,"line_start":255,"line_end":255,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":1972},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":57998,"byte_end":58006,"line_start":688,"line_end":688,"column_start":30,"column_end":38},"name":"SelfType","qualname":"::token::SelfType","value":"SelfType { span }","parent":null,"children":[{"krate":0,"index":1973}],"decl_id":null,"docs":" `Self`","sig":null,"attributes":[{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":44046,"byte_end":44049,"line_start":245,"line_end":245,"column_start":13,"column_end":16}},{"value":"/ Don't try to remember the name of this type &mdash; use the","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":44062,"byte_end":44125,"line_start":246,"line_end":246,"column_start":13,"column_end":76}},{"value":"/ [`Token!`] macro instead.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":44138,"byte_end":44167,"line_start":247,"line_end":247,"column_start":13,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":44180,"byte_end":44183,"line_start":248,"line_end":248,"column_start":13,"column_end":16}},{"value":"/ [`Token!`]: crate::token","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":44196,"byte_end":44224,"line_start":249,"line_end":249,"column_start":13,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":1974},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":57998,"byte_end":58006,"line_start":688,"line_end":688,"column_start":30,"column_end":38},"name":"SelfType","qualname":"::token::SelfType","value":"fn SelfType<S>(S) -> SelfType where S: IntoSpans<[Span; ]>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":44342,"byte_end":44366,"line_start":255,"line_end":255,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":1979},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":58051,"byte_end":58060,"line_start":689,"line_end":689,"column_start":30,"column_end":39},"name":"SelfValue","qualname":"::token::SelfValue","value":"SelfValue { span }","parent":null,"children":[{"krate":0,"index":1980}],"decl_id":null,"docs":" `self`","sig":null,"attributes":[{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":44046,"byte_end":44049,"line_start":245,"line_end":245,"column_start":13,"column_end":16}},{"value":"/ Don't try to remember the name of this type &mdash; use the","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":44062,"byte_end":44125,"line_start":246,"line_end":246,"column_start":13,"column_end":76}},{"value":"/ [`Token!`] macro instead.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":44138,"byte_end":44167,"line_start":247,"line_end":247,"column_start":13,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":44180,"byte_end":44183,"line_start":248,"line_end":248,"column_start":13,"column_end":16}},{"value":"/ [`Token!`]: crate::token","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":44196,"byte_end":44224,"line_start":249,"line_end":249,"column_start":13,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":1981},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":58051,"byte_end":58060,"line_start":689,"line_end":689,"column_start":30,"column_end":39},"name":"SelfValue","qualname":"::token::SelfValue","value":"fn SelfValue<S>(S) -> SelfValue where S: IntoSpans<[Span; ]>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":44342,"byte_end":44366,"line_start":255,"line_end":255,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":1986},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":58104,"byte_end":58110,"line_start":690,"line_end":690,"column_start":30,"column_end":36},"name":"Static","qualname":"::token::Static","value":"Static { span }","parent":null,"children":[{"krate":0,"index":1987}],"decl_id":null,"docs":" `static`","sig":null,"attributes":[{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":44046,"byte_end":44049,"line_start":245,"line_end":245,"column_start":13,"column_end":16}},{"value":"/ Don't try to remember the name of this type &mdash; use the","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":44062,"byte_end":44125,"line_start":246,"line_end":246,"column_start":13,"column_end":76}},{"value":"/ [`Token!`] macro instead.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":44138,"byte_end":44167,"line_start":247,"line_end":247,"column_start":13,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":44180,"byte_end":44183,"line_start":248,"line_end":248,"column_start":13,"column_end":16}},{"value":"/ [`Token!`]: crate::token","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":44196,"byte_end":44224,"line_start":249,"line_end":249,"column_start":13,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":1988},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":58104,"byte_end":58110,"line_start":690,"line_end":690,"column_start":30,"column_end":36},"name":"Static","qualname":"::token::Static","value":"fn Static<S>(S) -> Static where S: IntoSpans<[Span; ]>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":44342,"byte_end":44366,"line_start":255,"line_end":255,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":1993},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":58159,"byte_end":58165,"line_start":691,"line_end":691,"column_start":30,"column_end":36},"name":"Struct","qualname":"::token::Struct","value":"Struct { span }","parent":null,"children":[{"krate":0,"index":1994}],"decl_id":null,"docs":" `struct`","sig":null,"attributes":[{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":44046,"byte_end":44049,"line_start":245,"line_end":245,"column_start":13,"column_end":16}},{"value":"/ Don't try to remember the name of this type &mdash; use the","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":44062,"byte_end":44125,"line_start":246,"line_end":246,"column_start":13,"column_end":76}},{"value":"/ [`Token!`] macro instead.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":44138,"byte_end":44167,"line_start":247,"line_end":247,"column_start":13,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":44180,"byte_end":44183,"line_start":248,"line_end":248,"column_start":13,"column_end":16}},{"value":"/ [`Token!`]: crate::token","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":44196,"byte_end":44224,"line_start":249,"line_end":249,"column_start":13,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":1995},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":58159,"byte_end":58165,"line_start":691,"line_end":691,"column_start":30,"column_end":36},"name":"Struct","qualname":"::token::Struct","value":"fn Struct<S>(S) -> Struct where S: IntoSpans<[Span; ]>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":44342,"byte_end":44366,"line_start":255,"line_end":255,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":2000},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":58214,"byte_end":58219,"line_start":692,"line_end":692,"column_start":30,"column_end":35},"name":"Super","qualname":"::token::Super","value":"Super { span }","parent":null,"children":[{"krate":0,"index":2001}],"decl_id":null,"docs":" `super`","sig":null,"attributes":[{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":44046,"byte_end":44049,"line_start":245,"line_end":245,"column_start":13,"column_end":16}},{"value":"/ Don't try to remember the name of this type &mdash; use the","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":44062,"byte_end":44125,"line_start":246,"line_end":246,"column_start":13,"column_end":76}},{"value":"/ [`Token!`] macro instead.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":44138,"byte_end":44167,"line_start":247,"line_end":247,"column_start":13,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":44180,"byte_end":44183,"line_start":248,"line_end":248,"column_start":13,"column_end":16}},{"value":"/ [`Token!`]: crate::token","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":44196,"byte_end":44224,"line_start":249,"line_end":249,"column_start":13,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":2002},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":58214,"byte_end":58219,"line_start":692,"line_end":692,"column_start":30,"column_end":35},"name":"Super","qualname":"::token::Super","value":"fn Super<S>(S) -> Super where S: IntoSpans<[Span; ]>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":44342,"byte_end":44366,"line_start":255,"line_end":255,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":2007},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":58268,"byte_end":58273,"line_start":693,"line_end":693,"column_start":30,"column_end":35},"name":"Trait","qualname":"::token::Trait","value":"Trait { span }","parent":null,"children":[{"krate":0,"index":2008}],"decl_id":null,"docs":" `trait`","sig":null,"attributes":[{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":44046,"byte_end":44049,"line_start":245,"line_end":245,"column_start":13,"column_end":16}},{"value":"/ Don't try to remember the name of this type &mdash; use the","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":44062,"byte_end":44125,"line_start":246,"line_end":246,"column_start":13,"column_end":76}},{"value":"/ [`Token!`] macro instead.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":44138,"byte_end":44167,"line_start":247,"line_end":247,"column_start":13,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":44180,"byte_end":44183,"line_start":248,"line_end":248,"column_start":13,"column_end":16}},{"value":"/ [`Token!`]: crate::token","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":44196,"byte_end":44224,"line_start":249,"line_end":249,"column_start":13,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":2009},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":58268,"byte_end":58273,"line_start":693,"line_end":693,"column_start":30,"column_end":35},"name":"Trait","qualname":"::token::Trait","value":"fn Trait<S>(S) -> Trait where S: IntoSpans<[Span; ]>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":44342,"byte_end":44366,"line_start":255,"line_end":255,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":2014},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":58322,"byte_end":58325,"line_start":694,"line_end":694,"column_start":30,"column_end":33},"name":"Try","qualname":"::token::Try","value":"Try { span }","parent":null,"children":[{"krate":0,"index":2015}],"decl_id":null,"docs":" `try`","sig":null,"attributes":[{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":44046,"byte_end":44049,"line_start":245,"line_end":245,"column_start":13,"column_end":16}},{"value":"/ Don't try to remember the name of this type &mdash; use the","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":44062,"byte_end":44125,"line_start":246,"line_end":246,"column_start":13,"column_end":76}},{"value":"/ [`Token!`] macro instead.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":44138,"byte_end":44167,"line_start":247,"line_end":247,"column_start":13,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":44180,"byte_end":44183,"line_start":248,"line_end":248,"column_start":13,"column_end":16}},{"value":"/ [`Token!`]: crate::token","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":44196,"byte_end":44224,"line_start":249,"line_end":249,"column_start":13,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":2016},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":58322,"byte_end":58325,"line_start":694,"line_end":694,"column_start":30,"column_end":33},"name":"Try","qualname":"::token::Try","value":"fn Try<S>(S) -> Try where S: IntoSpans<[Span; ]>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":44342,"byte_end":44366,"line_start":255,"line_end":255,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":2021},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":58374,"byte_end":58378,"line_start":695,"line_end":695,"column_start":30,"column_end":34},"name":"Type","qualname":"::token::Type","value":"Type { span }","parent":null,"children":[{"krate":0,"index":2022}],"decl_id":null,"docs":" `type`","sig":null,"attributes":[{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":44046,"byte_end":44049,"line_start":245,"line_end":245,"column_start":13,"column_end":16}},{"value":"/ Don't try to remember the name of this type &mdash; use the","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":44062,"byte_end":44125,"line_start":246,"line_end":246,"column_start":13,"column_end":76}},{"value":"/ [`Token!`] macro instead.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":44138,"byte_end":44167,"line_start":247,"line_end":247,"column_start":13,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":44180,"byte_end":44183,"line_start":248,"line_end":248,"column_start":13,"column_end":16}},{"value":"/ [`Token!`]: crate::token","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":44196,"byte_end":44224,"line_start":249,"line_end":249,"column_start":13,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":2023},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":58374,"byte_end":58378,"line_start":695,"line_end":695,"column_start":30,"column_end":34},"name":"Type","qualname":"::token::Type","value":"fn Type<S>(S) -> Type where S: IntoSpans<[Span; ]>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":44342,"byte_end":44366,"line_start":255,"line_end":255,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":2028},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":58427,"byte_end":58433,"line_start":696,"line_end":696,"column_start":30,"column_end":36},"name":"Typeof","qualname":"::token::Typeof","value":"Typeof { span }","parent":null,"children":[{"krate":0,"index":2029}],"decl_id":null,"docs":" `typeof`","sig":null,"attributes":[{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":44046,"byte_end":44049,"line_start":245,"line_end":245,"column_start":13,"column_end":16}},{"value":"/ Don't try to remember the name of this type &mdash; use the","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":44062,"byte_end":44125,"line_start":246,"line_end":246,"column_start":13,"column_end":76}},{"value":"/ [`Token!`] macro instead.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":44138,"byte_end":44167,"line_start":247,"line_end":247,"column_start":13,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":44180,"byte_end":44183,"line_start":248,"line_end":248,"column_start":13,"column_end":16}},{"value":"/ [`Token!`]: crate::token","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":44196,"byte_end":44224,"line_start":249,"line_end":249,"column_start":13,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":2030},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":58427,"byte_end":58433,"line_start":696,"line_end":696,"column_start":30,"column_end":36},"name":"Typeof","qualname":"::token::Typeof","value":"fn Typeof<S>(S) -> Typeof where S: IntoSpans<[Span; ]>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":44342,"byte_end":44366,"line_start":255,"line_end":255,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":2035},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":58482,"byte_end":58487,"line_start":697,"line_end":697,"column_start":30,"column_end":35},"name":"Union","qualname":"::token::Union","value":"Union { span }","parent":null,"children":[{"krate":0,"index":2036}],"decl_id":null,"docs":" `union`","sig":null,"attributes":[{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":44046,"byte_end":44049,"line_start":245,"line_end":245,"column_start":13,"column_end":16}},{"value":"/ Don't try to remember the name of this type &mdash; use the","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":44062,"byte_end":44125,"line_start":246,"line_end":246,"column_start":13,"column_end":76}},{"value":"/ [`Token!`] macro instead.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":44138,"byte_end":44167,"line_start":247,"line_end":247,"column_start":13,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":44180,"byte_end":44183,"line_start":248,"line_end":248,"column_start":13,"column_end":16}},{"value":"/ [`Token!`]: crate::token","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":44196,"byte_end":44224,"line_start":249,"line_end":249,"column_start":13,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":2037},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":58482,"byte_end":58487,"line_start":697,"line_end":697,"column_start":30,"column_end":35},"name":"Union","qualname":"::token::Union","value":"fn Union<S>(S) -> Union where S: IntoSpans<[Span; ]>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":44342,"byte_end":44366,"line_start":255,"line_end":255,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":2042},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":58536,"byte_end":58542,"line_start":698,"line_end":698,"column_start":30,"column_end":36},"name":"Unsafe","qualname":"::token::Unsafe","value":"Unsafe { span }","parent":null,"children":[{"krate":0,"index":2043}],"decl_id":null,"docs":" `unsafe`","sig":null,"attributes":[{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":44046,"byte_end":44049,"line_start":245,"line_end":245,"column_start":13,"column_end":16}},{"value":"/ Don't try to remember the name of this type &mdash; use the","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":44062,"byte_end":44125,"line_start":246,"line_end":246,"column_start":13,"column_end":76}},{"value":"/ [`Token!`] macro instead.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":44138,"byte_end":44167,"line_start":247,"line_end":247,"column_start":13,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":44180,"byte_end":44183,"line_start":248,"line_end":248,"column_start":13,"column_end":16}},{"value":"/ [`Token!`]: crate::token","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":44196,"byte_end":44224,"line_start":249,"line_end":249,"column_start":13,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":2044},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":58536,"byte_end":58542,"line_start":698,"line_end":698,"column_start":30,"column_end":36},"name":"Unsafe","qualname":"::token::Unsafe","value":"fn Unsafe<S>(S) -> Unsafe where S: IntoSpans<[Span; ]>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":44342,"byte_end":44366,"line_start":255,"line_end":255,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":2049},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":58591,"byte_end":58598,"line_start":699,"line_end":699,"column_start":30,"column_end":37},"name":"Unsized","qualname":"::token::Unsized","value":"Unsized { span }","parent":null,"children":[{"krate":0,"index":2050}],"decl_id":null,"docs":" `unsized`","sig":null,"attributes":[{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":44046,"byte_end":44049,"line_start":245,"line_end":245,"column_start":13,"column_end":16}},{"value":"/ Don't try to remember the name of this type &mdash; use the","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":44062,"byte_end":44125,"line_start":246,"line_end":246,"column_start":13,"column_end":76}},{"value":"/ [`Token!`] macro instead.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":44138,"byte_end":44167,"line_start":247,"line_end":247,"column_start":13,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":44180,"byte_end":44183,"line_start":248,"line_end":248,"column_start":13,"column_end":16}},{"value":"/ [`Token!`]: crate::token","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":44196,"byte_end":44224,"line_start":249,"line_end":249,"column_start":13,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":2051},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":58591,"byte_end":58598,"line_start":699,"line_end":699,"column_start":30,"column_end":37},"name":"Unsized","qualname":"::token::Unsized","value":"fn Unsized<S>(S) -> Unsized where S: IntoSpans<[Span; ]>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":44342,"byte_end":44366,"line_start":255,"line_end":255,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":2056},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":58647,"byte_end":58650,"line_start":700,"line_end":700,"column_start":30,"column_end":33},"name":"Use","qualname":"::token::Use","value":"Use { span }","parent":null,"children":[{"krate":0,"index":2057}],"decl_id":null,"docs":" `use`","sig":null,"attributes":[{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":44046,"byte_end":44049,"line_start":245,"line_end":245,"column_start":13,"column_end":16}},{"value":"/ Don't try to remember the name of this type &mdash; use the","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":44062,"byte_end":44125,"line_start":246,"line_end":246,"column_start":13,"column_end":76}},{"value":"/ [`Token!`] macro instead.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":44138,"byte_end":44167,"line_start":247,"line_end":247,"column_start":13,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":44180,"byte_end":44183,"line_start":248,"line_end":248,"column_start":13,"column_end":16}},{"value":"/ [`Token!`]: crate::token","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":44196,"byte_end":44224,"line_start":249,"line_end":249,"column_start":13,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":2058},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":58647,"byte_end":58650,"line_start":700,"line_end":700,"column_start":30,"column_end":33},"name":"Use","qualname":"::token::Use","value":"fn Use<S>(S) -> Use where S: IntoSpans<[Span; ]>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":44342,"byte_end":44366,"line_start":255,"line_end":255,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":2063},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":58699,"byte_end":58706,"line_start":701,"line_end":701,"column_start":30,"column_end":37},"name":"Virtual","qualname":"::token::Virtual","value":"Virtual { span }","parent":null,"children":[{"krate":0,"index":2064}],"decl_id":null,"docs":" `virtual`","sig":null,"attributes":[{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":44046,"byte_end":44049,"line_start":245,"line_end":245,"column_start":13,"column_end":16}},{"value":"/ Don't try to remember the name of this type &mdash; use the","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":44062,"byte_end":44125,"line_start":246,"line_end":246,"column_start":13,"column_end":76}},{"value":"/ [`Token!`] macro instead.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":44138,"byte_end":44167,"line_start":247,"line_end":247,"column_start":13,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":44180,"byte_end":44183,"line_start":248,"line_end":248,"column_start":13,"column_end":16}},{"value":"/ [`Token!`]: crate::token","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":44196,"byte_end":44224,"line_start":249,"line_end":249,"column_start":13,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":2065},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":58699,"byte_end":58706,"line_start":701,"line_end":701,"column_start":30,"column_end":37},"name":"Virtual","qualname":"::token::Virtual","value":"fn Virtual<S>(S) -> Virtual where S: IntoSpans<[Span; ]>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":44342,"byte_end":44366,"line_start":255,"line_end":255,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":2070},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":58755,"byte_end":58760,"line_start":702,"line_end":702,"column_start":30,"column_end":35},"name":"Where","qualname":"::token::Where","value":"Where { span }","parent":null,"children":[{"krate":0,"index":2071}],"decl_id":null,"docs":" `where`","sig":null,"attributes":[{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":44046,"byte_end":44049,"line_start":245,"line_end":245,"column_start":13,"column_end":16}},{"value":"/ Don't try to remember the name of this type &mdash; use the","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":44062,"byte_end":44125,"line_start":246,"line_end":246,"column_start":13,"column_end":76}},{"value":"/ [`Token!`] macro instead.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":44138,"byte_end":44167,"line_start":247,"line_end":247,"column_start":13,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":44180,"byte_end":44183,"line_start":248,"line_end":248,"column_start":13,"column_end":16}},{"value":"/ [`Token!`]: crate::token","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":44196,"byte_end":44224,"line_start":249,"line_end":249,"column_start":13,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":2072},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":58755,"byte_end":58760,"line_start":702,"line_end":702,"column_start":30,"column_end":35},"name":"Where","qualname":"::token::Where","value":"fn Where<S>(S) -> Where where S: IntoSpans<[Span; ]>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":44342,"byte_end":44366,"line_start":255,"line_end":255,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":2077},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":58809,"byte_end":58814,"line_start":703,"line_end":703,"column_start":30,"column_end":35},"name":"While","qualname":"::token::While","value":"While { span }","parent":null,"children":[{"krate":0,"index":2078}],"decl_id":null,"docs":" `while`","sig":null,"attributes":[{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":44046,"byte_end":44049,"line_start":245,"line_end":245,"column_start":13,"column_end":16}},{"value":"/ Don't try to remember the name of this type &mdash; use the","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":44062,"byte_end":44125,"line_start":246,"line_end":246,"column_start":13,"column_end":76}},{"value":"/ [`Token!`] macro instead.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":44138,"byte_end":44167,"line_start":247,"line_end":247,"column_start":13,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":44180,"byte_end":44183,"line_start":248,"line_end":248,"column_start":13,"column_end":16}},{"value":"/ [`Token!`]: crate::token","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":44196,"byte_end":44224,"line_start":249,"line_end":249,"column_start":13,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":2079},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":58809,"byte_end":58814,"line_start":703,"line_end":703,"column_start":30,"column_end":35},"name":"While","qualname":"::token::While","value":"fn While<S>(S) -> While where S: IntoSpans<[Span; ]>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":44342,"byte_end":44366,"line_start":255,"line_end":255,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":2084},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":58863,"byte_end":58868,"line_start":704,"line_end":704,"column_start":30,"column_end":35},"name":"Yield","qualname":"::token::Yield","value":"Yield { span }","parent":null,"children":[{"krate":0,"index":2085}],"decl_id":null,"docs":" `yield`","sig":null,"attributes":[{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":44046,"byte_end":44049,"line_start":245,"line_end":245,"column_start":13,"column_end":16}},{"value":"/ Don't try to remember the name of this type &mdash; use the","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":44062,"byte_end":44125,"line_start":246,"line_end":246,"column_start":13,"column_end":76}},{"value":"/ [`Token!`] macro instead.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":44138,"byte_end":44167,"line_start":247,"line_end":247,"column_start":13,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":44180,"byte_end":44183,"line_start":248,"line_end":248,"column_start":13,"column_end":16}},{"value":"/ [`Token!`]: crate::token","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":44196,"byte_end":44224,"line_start":249,"line_end":249,"column_start":13,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":2086},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":58863,"byte_end":58868,"line_start":704,"line_end":704,"column_start":30,"column_end":35},"name":"Yield","qualname":"::token::Yield","value":"fn Yield<S>(S) -> Yield where S: IntoSpans<[Span; ]>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":44342,"byte_end":44366,"line_start":255,"line_end":255,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":2091},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":58942,"byte_end":58945,"line_start":708,"line_end":708,"column_start":30,"column_end":33},"name":"Add","qualname":"::token::Add","value":"Add { spans }","parent":null,"children":[{"krate":0,"index":2092}],"decl_id":null,"docs":" `+`","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":47840,"byte_end":47850,"line_start":366,"line_end":366,"column_start":13,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":47883,"byte_end":47886,"line_start":368,"line_end":368,"column_start":13,"column_end":16}},{"value":"/ Don't try to remember the name of this type &mdash; use the","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":47899,"byte_end":47962,"line_start":369,"line_end":369,"column_start":13,"column_end":76}},{"value":"/ [`Token!`] macro instead.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":47975,"byte_end":48004,"line_start":370,"line_end":370,"column_start":13,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":48017,"byte_end":48020,"line_start":371,"line_end":371,"column_start":13,"column_end":16}},{"value":"/ [`Token!`]: crate::token","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":48033,"byte_end":48061,"line_start":372,"line_end":372,"column_start":13,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":2094},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":58942,"byte_end":58945,"line_start":708,"line_end":708,"column_start":30,"column_end":33},"name":"Add","qualname":"::token::Add","value":"fn Add<S>(S) -> Add where S: IntoSpans<[Span; ]>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":48188,"byte_end":48212,"line_start":378,"line_end":378,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":2105},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":58992,"byte_end":58997,"line_start":709,"line_end":709,"column_start":30,"column_end":35},"name":"AddEq","qualname":"::token::AddEq","value":"AddEq { spans }","parent":null,"children":[{"krate":0,"index":2106}],"decl_id":null,"docs":" `+=`","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":47840,"byte_end":47850,"line_start":366,"line_end":366,"column_start":13,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":47883,"byte_end":47886,"line_start":368,"line_end":368,"column_start":13,"column_end":16}},{"value":"/ Don't try to remember the name of this type &mdash; use the","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":47899,"byte_end":47962,"line_start":369,"line_end":369,"column_start":13,"column_end":76}},{"value":"/ [`Token!`] macro instead.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":47975,"byte_end":48004,"line_start":370,"line_end":370,"column_start":13,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":48017,"byte_end":48020,"line_start":371,"line_end":371,"column_start":13,"column_end":16}},{"value":"/ [`Token!`]: crate::token","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":48033,"byte_end":48061,"line_start":372,"line_end":372,"column_start":13,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":2108},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":58992,"byte_end":58997,"line_start":709,"line_end":709,"column_start":30,"column_end":35},"name":"AddEq","qualname":"::token::AddEq","value":"fn AddEq<S>(S) -> AddEq where S: IntoSpans<[Span; ]>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":48188,"byte_end":48212,"line_start":378,"line_end":378,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":2114},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":59043,"byte_end":59046,"line_start":710,"line_end":710,"column_start":30,"column_end":33},"name":"And","qualname":"::token::And","value":"And { spans }","parent":null,"children":[{"krate":0,"index":2115}],"decl_id":null,"docs":" `&`","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":47840,"byte_end":47850,"line_start":366,"line_end":366,"column_start":13,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":47883,"byte_end":47886,"line_start":368,"line_end":368,"column_start":13,"column_end":16}},{"value":"/ Don't try to remember the name of this type &mdash; use the","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":47899,"byte_end":47962,"line_start":369,"line_end":369,"column_start":13,"column_end":76}},{"value":"/ [`Token!`] macro instead.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":47975,"byte_end":48004,"line_start":370,"line_end":370,"column_start":13,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":48017,"byte_end":48020,"line_start":371,"line_end":371,"column_start":13,"column_end":16}},{"value":"/ [`Token!`]: crate::token","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":48033,"byte_end":48061,"line_start":372,"line_end":372,"column_start":13,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":2117},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":59043,"byte_end":59046,"line_start":710,"line_end":710,"column_start":30,"column_end":33},"name":"And","qualname":"::token::And","value":"fn And<S>(S) -> And where S: IntoSpans<[Span; ]>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":48188,"byte_end":48212,"line_start":378,"line_end":378,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":2128},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":59093,"byte_end":59099,"line_start":711,"line_end":711,"column_start":30,"column_end":36},"name":"AndAnd","qualname":"::token::AndAnd","value":"AndAnd { spans }","parent":null,"children":[{"krate":0,"index":2129}],"decl_id":null,"docs":" `&&`","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":47840,"byte_end":47850,"line_start":366,"line_end":366,"column_start":13,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":47883,"byte_end":47886,"line_start":368,"line_end":368,"column_start":13,"column_end":16}},{"value":"/ Don't try to remember the name of this type &mdash; use the","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":47899,"byte_end":47962,"line_start":369,"line_end":369,"column_start":13,"column_end":76}},{"value":"/ [`Token!`] macro instead.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":47975,"byte_end":48004,"line_start":370,"line_end":370,"column_start":13,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":48017,"byte_end":48020,"line_start":371,"line_end":371,"column_start":13,"column_end":16}},{"value":"/ [`Token!`]: crate::token","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":48033,"byte_end":48061,"line_start":372,"line_end":372,"column_start":13,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":2131},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":59093,"byte_end":59099,"line_start":711,"line_end":711,"column_start":30,"column_end":36},"name":"AndAnd","qualname":"::token::AndAnd","value":"fn AndAnd<S>(S) -> AndAnd where S: IntoSpans<[Span; ]>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":48188,"byte_end":48212,"line_start":378,"line_end":378,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":2137},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":59144,"byte_end":59149,"line_start":712,"line_end":712,"column_start":30,"column_end":35},"name":"AndEq","qualname":"::token::AndEq","value":"AndEq { spans }","parent":null,"children":[{"krate":0,"index":2138}],"decl_id":null,"docs":" `&=`","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":47840,"byte_end":47850,"line_start":366,"line_end":366,"column_start":13,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":47883,"byte_end":47886,"line_start":368,"line_end":368,"column_start":13,"column_end":16}},{"value":"/ Don't try to remember the name of this type &mdash; use the","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":47899,"byte_end":47962,"line_start":369,"line_end":369,"column_start":13,"column_end":76}},{"value":"/ [`Token!`] macro instead.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":47975,"byte_end":48004,"line_start":370,"line_end":370,"column_start":13,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":48017,"byte_end":48020,"line_start":371,"line_end":371,"column_start":13,"column_end":16}},{"value":"/ [`Token!`]: crate::token","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":48033,"byte_end":48061,"line_start":372,"line_end":372,"column_start":13,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":2140},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":59144,"byte_end":59149,"line_start":712,"line_end":712,"column_start":30,"column_end":35},"name":"AndEq","qualname":"::token::AndEq","value":"fn AndEq<S>(S) -> AndEq where S: IntoSpans<[Span; ]>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":48188,"byte_end":48212,"line_start":378,"line_end":378,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":2146},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":59195,"byte_end":59197,"line_start":713,"line_end":713,"column_start":30,"column_end":32},"name":"At","qualname":"::token::At","value":"At { spans }","parent":null,"children":[{"krate":0,"index":2147}],"decl_id":null,"docs":" `@`","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":47840,"byte_end":47850,"line_start":366,"line_end":366,"column_start":13,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":47883,"byte_end":47886,"line_start":368,"line_end":368,"column_start":13,"column_end":16}},{"value":"/ Don't try to remember the name of this type &mdash; use the","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":47899,"byte_end":47962,"line_start":369,"line_end":369,"column_start":13,"column_end":76}},{"value":"/ [`Token!`] macro instead.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":47975,"byte_end":48004,"line_start":370,"line_end":370,"column_start":13,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":48017,"byte_end":48020,"line_start":371,"line_end":371,"column_start":13,"column_end":16}},{"value":"/ [`Token!`]: crate::token","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":48033,"byte_end":48061,"line_start":372,"line_end":372,"column_start":13,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":2149},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":59195,"byte_end":59197,"line_start":713,"line_end":713,"column_start":30,"column_end":32},"name":"At","qualname":"::token::At","value":"fn At<S>(S) -> At where S: IntoSpans<[Span; ]>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":48188,"byte_end":48212,"line_start":378,"line_end":378,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":2160},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":59245,"byte_end":59249,"line_start":714,"line_end":714,"column_start":30,"column_end":34},"name":"Bang","qualname":"::token::Bang","value":"Bang { spans }","parent":null,"children":[{"krate":0,"index":2161}],"decl_id":null,"docs":" `!`","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":47840,"byte_end":47850,"line_start":366,"line_end":366,"column_start":13,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":47883,"byte_end":47886,"line_start":368,"line_end":368,"column_start":13,"column_end":16}},{"value":"/ Don't try to remember the name of this type &mdash; use the","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":47899,"byte_end":47962,"line_start":369,"line_end":369,"column_start":13,"column_end":76}},{"value":"/ [`Token!`] macro instead.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":47975,"byte_end":48004,"line_start":370,"line_end":370,"column_start":13,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":48017,"byte_end":48020,"line_start":371,"line_end":371,"column_start":13,"column_end":16}},{"value":"/ [`Token!`]: crate::token","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":48033,"byte_end":48061,"line_start":372,"line_end":372,"column_start":13,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":2163},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":59245,"byte_end":59249,"line_start":714,"line_end":714,"column_start":30,"column_end":34},"name":"Bang","qualname":"::token::Bang","value":"fn Bang<S>(S) -> Bang where S: IntoSpans<[Span; ]>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":48188,"byte_end":48212,"line_start":378,"line_end":378,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":2174},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":59295,"byte_end":59300,"line_start":715,"line_end":715,"column_start":30,"column_end":35},"name":"Caret","qualname":"::token::Caret","value":"Caret { spans }","parent":null,"children":[{"krate":0,"index":2175}],"decl_id":null,"docs":" `^`","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":47840,"byte_end":47850,"line_start":366,"line_end":366,"column_start":13,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":47883,"byte_end":47886,"line_start":368,"line_end":368,"column_start":13,"column_end":16}},{"value":"/ Don't try to remember the name of this type &mdash; use the","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":47899,"byte_end":47962,"line_start":369,"line_end":369,"column_start":13,"column_end":76}},{"value":"/ [`Token!`] macro instead.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":47975,"byte_end":48004,"line_start":370,"line_end":370,"column_start":13,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":48017,"byte_end":48020,"line_start":371,"line_end":371,"column_start":13,"column_end":16}},{"value":"/ [`Token!`]: crate::token","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":48033,"byte_end":48061,"line_start":372,"line_end":372,"column_start":13,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":2177},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":59295,"byte_end":59300,"line_start":715,"line_end":715,"column_start":30,"column_end":35},"name":"Caret","qualname":"::token::Caret","value":"fn Caret<S>(S) -> Caret where S: IntoSpans<[Span; ]>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":48188,"byte_end":48212,"line_start":378,"line_end":378,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":2188},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":59345,"byte_end":59352,"line_start":716,"line_end":716,"column_start":30,"column_end":37},"name":"CaretEq","qualname":"::token::CaretEq","value":"CaretEq { spans }","parent":null,"children":[{"krate":0,"index":2189}],"decl_id":null,"docs":" `^=`","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":47840,"byte_end":47850,"line_start":366,"line_end":366,"column_start":13,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":47883,"byte_end":47886,"line_start":368,"line_end":368,"column_start":13,"column_end":16}},{"value":"/ Don't try to remember the name of this type &mdash; use the","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":47899,"byte_end":47962,"line_start":369,"line_end":369,"column_start":13,"column_end":76}},{"value":"/ [`Token!`] macro instead.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":47975,"byte_end":48004,"line_start":370,"line_end":370,"column_start":13,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":48017,"byte_end":48020,"line_start":371,"line_end":371,"column_start":13,"column_end":16}},{"value":"/ [`Token!`]: crate::token","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":48033,"byte_end":48061,"line_start":372,"line_end":372,"column_start":13,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":2191},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":59345,"byte_end":59352,"line_start":716,"line_end":716,"column_start":30,"column_end":37},"name":"CaretEq","qualname":"::token::CaretEq","value":"fn CaretEq<S>(S) -> CaretEq where S: IntoSpans<[Span; ]>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":48188,"byte_end":48212,"line_start":378,"line_end":378,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":2197},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":59396,"byte_end":59401,"line_start":717,"line_end":717,"column_start":30,"column_end":35},"name":"Colon","qualname":"::token::Colon","value":"Colon { spans }","parent":null,"children":[{"krate":0,"index":2198}],"decl_id":null,"docs":" `:`","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":47840,"byte_end":47850,"line_start":366,"line_end":366,"column_start":13,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":47883,"byte_end":47886,"line_start":368,"line_end":368,"column_start":13,"column_end":16}},{"value":"/ Don't try to remember the name of this type &mdash; use the","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":47899,"byte_end":47962,"line_start":369,"line_end":369,"column_start":13,"column_end":76}},{"value":"/ [`Token!`] macro instead.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":47975,"byte_end":48004,"line_start":370,"line_end":370,"column_start":13,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":48017,"byte_end":48020,"line_start":371,"line_end":371,"column_start":13,"column_end":16}},{"value":"/ [`Token!`]: crate::token","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":48033,"byte_end":48061,"line_start":372,"line_end":372,"column_start":13,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":2200},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":59396,"byte_end":59401,"line_start":717,"line_end":717,"column_start":30,"column_end":35},"name":"Colon","qualname":"::token::Colon","value":"fn Colon<S>(S) -> Colon where S: IntoSpans<[Span; ]>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":48188,"byte_end":48212,"line_start":378,"line_end":378,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":2211},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":59446,"byte_end":59452,"line_start":718,"line_end":718,"column_start":30,"column_end":36},"name":"Colon2","qualname":"::token::Colon2","value":"Colon2 { spans }","parent":null,"children":[{"krate":0,"index":2212}],"decl_id":null,"docs":" `::`","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":47840,"byte_end":47850,"line_start":366,"line_end":366,"column_start":13,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":47883,"byte_end":47886,"line_start":368,"line_end":368,"column_start":13,"column_end":16}},{"value":"/ Don't try to remember the name of this type &mdash; use the","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":47899,"byte_end":47962,"line_start":369,"line_end":369,"column_start":13,"column_end":76}},{"value":"/ [`Token!`] macro instead.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":47975,"byte_end":48004,"line_start":370,"line_end":370,"column_start":13,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":48017,"byte_end":48020,"line_start":371,"line_end":371,"column_start":13,"column_end":16}},{"value":"/ [`Token!`]: crate::token","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":48033,"byte_end":48061,"line_start":372,"line_end":372,"column_start":13,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":2214},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":59446,"byte_end":59452,"line_start":718,"line_end":718,"column_start":30,"column_end":36},"name":"Colon2","qualname":"::token::Colon2","value":"fn Colon2<S>(S) -> Colon2 where S: IntoSpans<[Span; ]>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":48188,"byte_end":48212,"line_start":378,"line_end":378,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":2220},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":59497,"byte_end":59502,"line_start":719,"line_end":719,"column_start":30,"column_end":35},"name":"Comma","qualname":"::token::Comma","value":"Comma { spans }","parent":null,"children":[{"krate":0,"index":2221}],"decl_id":null,"docs":" `,`","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":47840,"byte_end":47850,"line_start":366,"line_end":366,"column_start":13,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":47883,"byte_end":47886,"line_start":368,"line_end":368,"column_start":13,"column_end":16}},{"value":"/ Don't try to remember the name of this type &mdash; use the","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":47899,"byte_end":47962,"line_start":369,"line_end":369,"column_start":13,"column_end":76}},{"value":"/ [`Token!`] macro instead.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":47975,"byte_end":48004,"line_start":370,"line_end":370,"column_start":13,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":48017,"byte_end":48020,"line_start":371,"line_end":371,"column_start":13,"column_end":16}},{"value":"/ [`Token!`]: crate::token","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":48033,"byte_end":48061,"line_start":372,"line_end":372,"column_start":13,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":2223},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":59497,"byte_end":59502,"line_start":719,"line_end":719,"column_start":30,"column_end":35},"name":"Comma","qualname":"::token::Comma","value":"fn Comma<S>(S) -> Comma where S: IntoSpans<[Span; ]>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":48188,"byte_end":48212,"line_start":378,"line_end":378,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":2234},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":59547,"byte_end":59550,"line_start":720,"line_end":720,"column_start":30,"column_end":33},"name":"Div","qualname":"::token::Div","value":"Div { spans }","parent":null,"children":[{"krate":0,"index":2235}],"decl_id":null,"docs":" `/`","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":47840,"byte_end":47850,"line_start":366,"line_end":366,"column_start":13,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":47883,"byte_end":47886,"line_start":368,"line_end":368,"column_start":13,"column_end":16}},{"value":"/ Don't try to remember the name of this type &mdash; use the","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":47899,"byte_end":47962,"line_start":369,"line_end":369,"column_start":13,"column_end":76}},{"value":"/ [`Token!`] macro instead.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":47975,"byte_end":48004,"line_start":370,"line_end":370,"column_start":13,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":48017,"byte_end":48020,"line_start":371,"line_end":371,"column_start":13,"column_end":16}},{"value":"/ [`Token!`]: crate::token","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":48033,"byte_end":48061,"line_start":372,"line_end":372,"column_start":13,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":2237},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":59547,"byte_end":59550,"line_start":720,"line_end":720,"column_start":30,"column_end":33},"name":"Div","qualname":"::token::Div","value":"fn Div<S>(S) -> Div where S: IntoSpans<[Span; ]>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":48188,"byte_end":48212,"line_start":378,"line_end":378,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":2248},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":59597,"byte_end":59602,"line_start":721,"line_end":721,"column_start":30,"column_end":35},"name":"DivEq","qualname":"::token::DivEq","value":"DivEq { spans }","parent":null,"children":[{"krate":0,"index":2249}],"decl_id":null,"docs":" `/=`","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":47840,"byte_end":47850,"line_start":366,"line_end":366,"column_start":13,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":47883,"byte_end":47886,"line_start":368,"line_end":368,"column_start":13,"column_end":16}},{"value":"/ Don't try to remember the name of this type &mdash; use the","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":47899,"byte_end":47962,"line_start":369,"line_end":369,"column_start":13,"column_end":76}},{"value":"/ [`Token!`] macro instead.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":47975,"byte_end":48004,"line_start":370,"line_end":370,"column_start":13,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":48017,"byte_end":48020,"line_start":371,"line_end":371,"column_start":13,"column_end":16}},{"value":"/ [`Token!`]: crate::token","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":48033,"byte_end":48061,"line_start":372,"line_end":372,"column_start":13,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":2251},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":59597,"byte_end":59602,"line_start":721,"line_end":721,"column_start":30,"column_end":35},"name":"DivEq","qualname":"::token::DivEq","value":"fn DivEq<S>(S) -> DivEq where S: IntoSpans<[Span; ]>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":48188,"byte_end":48212,"line_start":378,"line_end":378,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":2257},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":59648,"byte_end":59654,"line_start":722,"line_end":722,"column_start":30,"column_end":36},"name":"Dollar","qualname":"::token::Dollar","value":"Dollar { spans }","parent":null,"children":[{"krate":0,"index":2258}],"decl_id":null,"docs":" `$`","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":47840,"byte_end":47850,"line_start":366,"line_end":366,"column_start":13,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":47883,"byte_end":47886,"line_start":368,"line_end":368,"column_start":13,"column_end":16}},{"value":"/ Don't try to remember the name of this type &mdash; use the","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":47899,"byte_end":47962,"line_start":369,"line_end":369,"column_start":13,"column_end":76}},{"value":"/ [`Token!`] macro instead.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":47975,"byte_end":48004,"line_start":370,"line_end":370,"column_start":13,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":48017,"byte_end":48020,"line_start":371,"line_end":371,"column_start":13,"column_end":16}},{"value":"/ [`Token!`]: crate::token","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":48033,"byte_end":48061,"line_start":372,"line_end":372,"column_start":13,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":2260},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":59648,"byte_end":59654,"line_start":722,"line_end":722,"column_start":30,"column_end":36},"name":"Dollar","qualname":"::token::Dollar","value":"fn Dollar<S>(S) -> Dollar where S: IntoSpans<[Span; ]>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":48188,"byte_end":48212,"line_start":378,"line_end":378,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":2271},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":59698,"byte_end":59701,"line_start":723,"line_end":723,"column_start":30,"column_end":33},"name":"Dot","qualname":"::token::Dot","value":"Dot { spans }","parent":null,"children":[{"krate":0,"index":2272}],"decl_id":null,"docs":" `.`","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":47840,"byte_end":47850,"line_start":366,"line_end":366,"column_start":13,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":47883,"byte_end":47886,"line_start":368,"line_end":368,"column_start":13,"column_end":16}},{"value":"/ Don't try to remember the name of this type &mdash; use the","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":47899,"byte_end":47962,"line_start":369,"line_end":369,"column_start":13,"column_end":76}},{"value":"/ [`Token!`] macro instead.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":47975,"byte_end":48004,"line_start":370,"line_end":370,"column_start":13,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":48017,"byte_end":48020,"line_start":371,"line_end":371,"column_start":13,"column_end":16}},{"value":"/ [`Token!`]: crate::token","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":48033,"byte_end":48061,"line_start":372,"line_end":372,"column_start":13,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":2274},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":59698,"byte_end":59701,"line_start":723,"line_end":723,"column_start":30,"column_end":33},"name":"Dot","qualname":"::token::Dot","value":"fn Dot<S>(S) -> Dot where S: IntoSpans<[Span; ]>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":48188,"byte_end":48212,"line_start":378,"line_end":378,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":2285},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":59748,"byte_end":59752,"line_start":724,"line_end":724,"column_start":30,"column_end":34},"name":"Dot2","qualname":"::token::Dot2","value":"Dot2 { spans }","parent":null,"children":[{"krate":0,"index":2286}],"decl_id":null,"docs":" `..`","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":47840,"byte_end":47850,"line_start":366,"line_end":366,"column_start":13,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":47883,"byte_end":47886,"line_start":368,"line_end":368,"column_start":13,"column_end":16}},{"value":"/ Don't try to remember the name of this type &mdash; use the","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":47899,"byte_end":47962,"line_start":369,"line_end":369,"column_start":13,"column_end":76}},{"value":"/ [`Token!`] macro instead.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":47975,"byte_end":48004,"line_start":370,"line_end":370,"column_start":13,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":48017,"byte_end":48020,"line_start":371,"line_end":371,"column_start":13,"column_end":16}},{"value":"/ [`Token!`]: crate::token","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":48033,"byte_end":48061,"line_start":372,"line_end":372,"column_start":13,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":2288},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":59748,"byte_end":59752,"line_start":724,"line_end":724,"column_start":30,"column_end":34},"name":"Dot2","qualname":"::token::Dot2","value":"fn Dot2<S>(S) -> Dot2 where S: IntoSpans<[Span; ]>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":48188,"byte_end":48212,"line_start":378,"line_end":378,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":2294},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":59799,"byte_end":59803,"line_start":725,"line_end":725,"column_start":30,"column_end":34},"name":"Dot3","qualname":"::token::Dot3","value":"Dot3 { spans }","parent":null,"children":[{"krate":0,"index":2295}],"decl_id":null,"docs":" `...`","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":47840,"byte_end":47850,"line_start":366,"line_end":366,"column_start":13,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":47883,"byte_end":47886,"line_start":368,"line_end":368,"column_start":13,"column_end":16}},{"value":"/ Don't try to remember the name of this type &mdash; use the","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":47899,"byte_end":47962,"line_start":369,"line_end":369,"column_start":13,"column_end":76}},{"value":"/ [`Token!`] macro instead.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":47975,"byte_end":48004,"line_start":370,"line_end":370,"column_start":13,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":48017,"byte_end":48020,"line_start":371,"line_end":371,"column_start":13,"column_end":16}},{"value":"/ [`Token!`]: crate::token","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":48033,"byte_end":48061,"line_start":372,"line_end":372,"column_start":13,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":2297},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":59799,"byte_end":59803,"line_start":725,"line_end":725,"column_start":30,"column_end":34},"name":"Dot3","qualname":"::token::Dot3","value":"fn Dot3<S>(S) -> Dot3 where S: IntoSpans<[Span; ]>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":48188,"byte_end":48212,"line_start":378,"line_end":378,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":2303},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":59851,"byte_end":59859,"line_start":726,"line_end":726,"column_start":30,"column_end":38},"name":"DotDotEq","qualname":"::token::DotDotEq","value":"DotDotEq { spans }","parent":null,"children":[{"krate":0,"index":2304}],"decl_id":null,"docs":" `..=`","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":47840,"byte_end":47850,"line_start":366,"line_end":366,"column_start":13,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":47883,"byte_end":47886,"line_start":368,"line_end":368,"column_start":13,"column_end":16}},{"value":"/ Don't try to remember the name of this type &mdash; use the","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":47899,"byte_end":47962,"line_start":369,"line_end":369,"column_start":13,"column_end":76}},{"value":"/ [`Token!`] macro instead.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":47975,"byte_end":48004,"line_start":370,"line_end":370,"column_start":13,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":48017,"byte_end":48020,"line_start":371,"line_end":371,"column_start":13,"column_end":16}},{"value":"/ [`Token!`]: crate::token","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":48033,"byte_end":48061,"line_start":372,"line_end":372,"column_start":13,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":2306},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":59851,"byte_end":59859,"line_start":726,"line_end":726,"column_start":30,"column_end":38},"name":"DotDotEq","qualname":"::token::DotDotEq","value":"fn DotDotEq<S>(S) -> DotDotEq where S: IntoSpans<[Span; ]>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":48188,"byte_end":48212,"line_start":378,"line_end":378,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":2312},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":59903,"byte_end":59905,"line_start":727,"line_end":727,"column_start":30,"column_end":32},"name":"Eq","qualname":"::token::Eq","value":"Eq { spans }","parent":null,"children":[{"krate":0,"index":2313}],"decl_id":null,"docs":" `=`","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":47840,"byte_end":47850,"line_start":366,"line_end":366,"column_start":13,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":47883,"byte_end":47886,"line_start":368,"line_end":368,"column_start":13,"column_end":16}},{"value":"/ Don't try to remember the name of this type &mdash; use the","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":47899,"byte_end":47962,"line_start":369,"line_end":369,"column_start":13,"column_end":76}},{"value":"/ [`Token!`] macro instead.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":47975,"byte_end":48004,"line_start":370,"line_end":370,"column_start":13,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":48017,"byte_end":48020,"line_start":371,"line_end":371,"column_start":13,"column_end":16}},{"value":"/ [`Token!`]: crate::token","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":48033,"byte_end":48061,"line_start":372,"line_end":372,"column_start":13,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":2315},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":59903,"byte_end":59905,"line_start":727,"line_end":727,"column_start":30,"column_end":32},"name":"Eq","qualname":"::token::Eq","value":"fn Eq<S>(S) -> Eq where S: IntoSpans<[Span; ]>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":48188,"byte_end":48212,"line_start":378,"line_end":378,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":2326},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":59953,"byte_end":59957,"line_start":728,"line_end":728,"column_start":30,"column_end":34},"name":"EqEq","qualname":"::token::EqEq","value":"EqEq { spans }","parent":null,"children":[{"krate":0,"index":2327}],"decl_id":null,"docs":" `==`","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":47840,"byte_end":47850,"line_start":366,"line_end":366,"column_start":13,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":47883,"byte_end":47886,"line_start":368,"line_end":368,"column_start":13,"column_end":16}},{"value":"/ Don't try to remember the name of this type &mdash; use the","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":47899,"byte_end":47962,"line_start":369,"line_end":369,"column_start":13,"column_end":76}},{"value":"/ [`Token!`] macro instead.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":47975,"byte_end":48004,"line_start":370,"line_end":370,"column_start":13,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":48017,"byte_end":48020,"line_start":371,"line_end":371,"column_start":13,"column_end":16}},{"value":"/ [`Token!`]: crate::token","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":48033,"byte_end":48061,"line_start":372,"line_end":372,"column_start":13,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":2329},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":59953,"byte_end":59957,"line_start":728,"line_end":728,"column_start":30,"column_end":34},"name":"EqEq","qualname":"::token::EqEq","value":"fn EqEq<S>(S) -> EqEq where S: IntoSpans<[Span; ]>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":48188,"byte_end":48212,"line_start":378,"line_end":378,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":2335},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":60004,"byte_end":60006,"line_start":729,"line_end":729,"column_start":30,"column_end":32},"name":"Ge","qualname":"::token::Ge","value":"Ge { spans }","parent":null,"children":[{"krate":0,"index":2336}],"decl_id":null,"docs":" `>=`","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":47840,"byte_end":47850,"line_start":366,"line_end":366,"column_start":13,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":47883,"byte_end":47886,"line_start":368,"line_end":368,"column_start":13,"column_end":16}},{"value":"/ Don't try to remember the name of this type &mdash; use the","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":47899,"byte_end":47962,"line_start":369,"line_end":369,"column_start":13,"column_end":76}},{"value":"/ [`Token!`] macro instead.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":47975,"byte_end":48004,"line_start":370,"line_end":370,"column_start":13,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":48017,"byte_end":48020,"line_start":371,"line_end":371,"column_start":13,"column_end":16}},{"value":"/ [`Token!`]: crate::token","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":48033,"byte_end":48061,"line_start":372,"line_end":372,"column_start":13,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":2338},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":60004,"byte_end":60006,"line_start":729,"line_end":729,"column_start":30,"column_end":32},"name":"Ge","qualname":"::token::Ge","value":"fn Ge<S>(S) -> Ge where S: IntoSpans<[Span; ]>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":48188,"byte_end":48212,"line_start":378,"line_end":378,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":2344},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":60055,"byte_end":60057,"line_start":730,"line_end":730,"column_start":30,"column_end":32},"name":"Gt","qualname":"::token::Gt","value":"Gt { spans }","parent":null,"children":[{"krate":0,"index":2345}],"decl_id":null,"docs":" `>`","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":47840,"byte_end":47850,"line_start":366,"line_end":366,"column_start":13,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":47883,"byte_end":47886,"line_start":368,"line_end":368,"column_start":13,"column_end":16}},{"value":"/ Don't try to remember the name of this type &mdash; use the","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":47899,"byte_end":47962,"line_start":369,"line_end":369,"column_start":13,"column_end":76}},{"value":"/ [`Token!`] macro instead.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":47975,"byte_end":48004,"line_start":370,"line_end":370,"column_start":13,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":48017,"byte_end":48020,"line_start":371,"line_end":371,"column_start":13,"column_end":16}},{"value":"/ [`Token!`]: crate::token","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":48033,"byte_end":48061,"line_start":372,"line_end":372,"column_start":13,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":2347},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":60055,"byte_end":60057,"line_start":730,"line_end":730,"column_start":30,"column_end":32},"name":"Gt","qualname":"::token::Gt","value":"fn Gt<S>(S) -> Gt where S: IntoSpans<[Span; ]>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":48188,"byte_end":48212,"line_start":378,"line_end":378,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":2358},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":60105,"byte_end":60107,"line_start":731,"line_end":731,"column_start":30,"column_end":32},"name":"Le","qualname":"::token::Le","value":"Le { spans }","parent":null,"children":[{"krate":0,"index":2359}],"decl_id":null,"docs":" `<=`","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":47840,"byte_end":47850,"line_start":366,"line_end":366,"column_start":13,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":47883,"byte_end":47886,"line_start":368,"line_end":368,"column_start":13,"column_end":16}},{"value":"/ Don't try to remember the name of this type &mdash; use the","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":47899,"byte_end":47962,"line_start":369,"line_end":369,"column_start":13,"column_end":76}},{"value":"/ [`Token!`] macro instead.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":47975,"byte_end":48004,"line_start":370,"line_end":370,"column_start":13,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":48017,"byte_end":48020,"line_start":371,"line_end":371,"column_start":13,"column_end":16}},{"value":"/ [`Token!`]: crate::token","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":48033,"byte_end":48061,"line_start":372,"line_end":372,"column_start":13,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":2361},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":60105,"byte_end":60107,"line_start":731,"line_end":731,"column_start":30,"column_end":32},"name":"Le","qualname":"::token::Le","value":"fn Le<S>(S) -> Le where S: IntoSpans<[Span; ]>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":48188,"byte_end":48212,"line_start":378,"line_end":378,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":2367},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":60156,"byte_end":60158,"line_start":732,"line_end":732,"column_start":30,"column_end":32},"name":"Lt","qualname":"::token::Lt","value":"Lt { spans }","parent":null,"children":[{"krate":0,"index":2368}],"decl_id":null,"docs":" `<`","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":47840,"byte_end":47850,"line_start":366,"line_end":366,"column_start":13,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":47883,"byte_end":47886,"line_start":368,"line_end":368,"column_start":13,"column_end":16}},{"value":"/ Don't try to remember the name of this type &mdash; use the","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":47899,"byte_end":47962,"line_start":369,"line_end":369,"column_start":13,"column_end":76}},{"value":"/ [`Token!`] macro instead.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":47975,"byte_end":48004,"line_start":370,"line_end":370,"column_start":13,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":48017,"byte_end":48020,"line_start":371,"line_end":371,"column_start":13,"column_end":16}},{"value":"/ [`Token!`]: crate::token","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":48033,"byte_end":48061,"line_start":372,"line_end":372,"column_start":13,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":2370},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":60156,"byte_end":60158,"line_start":732,"line_end":732,"column_start":30,"column_end":32},"name":"Lt","qualname":"::token::Lt","value":"fn Lt<S>(S) -> Lt where S: IntoSpans<[Span; ]>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":48188,"byte_end":48212,"line_start":378,"line_end":378,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":2381},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":60206,"byte_end":60211,"line_start":733,"line_end":733,"column_start":30,"column_end":35},"name":"MulEq","qualname":"::token::MulEq","value":"MulEq { spans }","parent":null,"children":[{"krate":0,"index":2382}],"decl_id":null,"docs":" `*=`","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":47840,"byte_end":47850,"line_start":366,"line_end":366,"column_start":13,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":47883,"byte_end":47886,"line_start":368,"line_end":368,"column_start":13,"column_end":16}},{"value":"/ Don't try to remember the name of this type &mdash; use the","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":47899,"byte_end":47962,"line_start":369,"line_end":369,"column_start":13,"column_end":76}},{"value":"/ [`Token!`] macro instead.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":47975,"byte_end":48004,"line_start":370,"line_end":370,"column_start":13,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":48017,"byte_end":48020,"line_start":371,"line_end":371,"column_start":13,"column_end":16}},{"value":"/ [`Token!`]: crate::token","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":48033,"byte_end":48061,"line_start":372,"line_end":372,"column_start":13,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":2384},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":60206,"byte_end":60211,"line_start":733,"line_end":733,"column_start":30,"column_end":35},"name":"MulEq","qualname":"::token::MulEq","value":"fn MulEq<S>(S) -> MulEq where S: IntoSpans<[Span; ]>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":48188,"byte_end":48212,"line_start":378,"line_end":378,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":2390},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":60257,"byte_end":60259,"line_start":734,"line_end":734,"column_start":30,"column_end":32},"name":"Ne","qualname":"::token::Ne","value":"Ne { spans }","parent":null,"children":[{"krate":0,"index":2391}],"decl_id":null,"docs":" `!=`","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":47840,"byte_end":47850,"line_start":366,"line_end":366,"column_start":13,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":47883,"byte_end":47886,"line_start":368,"line_end":368,"column_start":13,"column_end":16}},{"value":"/ Don't try to remember the name of this type &mdash; use the","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":47899,"byte_end":47962,"line_start":369,"line_end":369,"column_start":13,"column_end":76}},{"value":"/ [`Token!`] macro instead.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":47975,"byte_end":48004,"line_start":370,"line_end":370,"column_start":13,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":48017,"byte_end":48020,"line_start":371,"line_end":371,"column_start":13,"column_end":16}},{"value":"/ [`Token!`]: crate::token","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":48033,"byte_end":48061,"line_start":372,"line_end":372,"column_start":13,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":2393},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":60257,"byte_end":60259,"line_start":734,"line_end":734,"column_start":30,"column_end":32},"name":"Ne","qualname":"::token::Ne","value":"fn Ne<S>(S) -> Ne where S: IntoSpans<[Span; ]>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":48188,"byte_end":48212,"line_start":378,"line_end":378,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":2399},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":60308,"byte_end":60310,"line_start":735,"line_end":735,"column_start":30,"column_end":32},"name":"Or","qualname":"::token::Or","value":"Or { spans }","parent":null,"children":[{"krate":0,"index":2400}],"decl_id":null,"docs":" `|`","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":47840,"byte_end":47850,"line_start":366,"line_end":366,"column_start":13,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":47883,"byte_end":47886,"line_start":368,"line_end":368,"column_start":13,"column_end":16}},{"value":"/ Don't try to remember the name of this type &mdash; use the","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":47899,"byte_end":47962,"line_start":369,"line_end":369,"column_start":13,"column_end":76}},{"value":"/ [`Token!`] macro instead.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":47975,"byte_end":48004,"line_start":370,"line_end":370,"column_start":13,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":48017,"byte_end":48020,"line_start":371,"line_end":371,"column_start":13,"column_end":16}},{"value":"/ [`Token!`]: crate::token","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":48033,"byte_end":48061,"line_start":372,"line_end":372,"column_start":13,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":2402},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":60308,"byte_end":60310,"line_start":735,"line_end":735,"column_start":30,"column_end":32},"name":"Or","qualname":"::token::Or","value":"fn Or<S>(S) -> Or where S: IntoSpans<[Span; ]>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":48188,"byte_end":48212,"line_start":378,"line_end":378,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":2413},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":60358,"byte_end":60362,"line_start":736,"line_end":736,"column_start":30,"column_end":34},"name":"OrEq","qualname":"::token::OrEq","value":"OrEq { spans }","parent":null,"children":[{"krate":0,"index":2414}],"decl_id":null,"docs":" `|=`","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":47840,"byte_end":47850,"line_start":366,"line_end":366,"column_start":13,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":47883,"byte_end":47886,"line_start":368,"line_end":368,"column_start":13,"column_end":16}},{"value":"/ Don't try to remember the name of this type &mdash; use the","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":47899,"byte_end":47962,"line_start":369,"line_end":369,"column_start":13,"column_end":76}},{"value":"/ [`Token!`] macro instead.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":47975,"byte_end":48004,"line_start":370,"line_end":370,"column_start":13,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":48017,"byte_end":48020,"line_start":371,"line_end":371,"column_start":13,"column_end":16}},{"value":"/ [`Token!`]: crate::token","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":48033,"byte_end":48061,"line_start":372,"line_end":372,"column_start":13,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":2416},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":60358,"byte_end":60362,"line_start":736,"line_end":736,"column_start":30,"column_end":34},"name":"OrEq","qualname":"::token::OrEq","value":"fn OrEq<S>(S) -> OrEq where S: IntoSpans<[Span; ]>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":48188,"byte_end":48212,"line_start":378,"line_end":378,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":2422},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":60409,"byte_end":60413,"line_start":737,"line_end":737,"column_start":30,"column_end":34},"name":"OrOr","qualname":"::token::OrOr","value":"OrOr { spans }","parent":null,"children":[{"krate":0,"index":2423}],"decl_id":null,"docs":" `||`","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":47840,"byte_end":47850,"line_start":366,"line_end":366,"column_start":13,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":47883,"byte_end":47886,"line_start":368,"line_end":368,"column_start":13,"column_end":16}},{"value":"/ Don't try to remember the name of this type &mdash; use the","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":47899,"byte_end":47962,"line_start":369,"line_end":369,"column_start":13,"column_end":76}},{"value":"/ [`Token!`] macro instead.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":47975,"byte_end":48004,"line_start":370,"line_end":370,"column_start":13,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":48017,"byte_end":48020,"line_start":371,"line_end":371,"column_start":13,"column_end":16}},{"value":"/ [`Token!`]: crate::token","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":48033,"byte_end":48061,"line_start":372,"line_end":372,"column_start":13,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":2425},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":60409,"byte_end":60413,"line_start":737,"line_end":737,"column_start":30,"column_end":34},"name":"OrOr","qualname":"::token::OrOr","value":"fn OrOr<S>(S) -> OrOr where S: IntoSpans<[Span; ]>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":48188,"byte_end":48212,"line_start":378,"line_end":378,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":2431},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":60460,"byte_end":60465,"line_start":738,"line_end":738,"column_start":30,"column_end":35},"name":"Pound","qualname":"::token::Pound","value":"Pound { spans }","parent":null,"children":[{"krate":0,"index":2432}],"decl_id":null,"docs":" `#`","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":47840,"byte_end":47850,"line_start":366,"line_end":366,"column_start":13,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":47883,"byte_end":47886,"line_start":368,"line_end":368,"column_start":13,"column_end":16}},{"value":"/ Don't try to remember the name of this type &mdash; use the","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":47899,"byte_end":47962,"line_start":369,"line_end":369,"column_start":13,"column_end":76}},{"value":"/ [`Token!`] macro instead.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":47975,"byte_end":48004,"line_start":370,"line_end":370,"column_start":13,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":48017,"byte_end":48020,"line_start":371,"line_end":371,"column_start":13,"column_end":16}},{"value":"/ [`Token!`]: crate::token","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":48033,"byte_end":48061,"line_start":372,"line_end":372,"column_start":13,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":2434},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":60460,"byte_end":60465,"line_start":738,"line_end":738,"column_start":30,"column_end":35},"name":"Pound","qualname":"::token::Pound","value":"fn Pound<S>(S) -> Pound where S: IntoSpans<[Span; ]>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":48188,"byte_end":48212,"line_start":378,"line_end":378,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":2445},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":60510,"byte_end":60518,"line_start":739,"line_end":739,"column_start":30,"column_end":38},"name":"Question","qualname":"::token::Question","value":"Question { spans }","parent":null,"children":[{"krate":0,"index":2446}],"decl_id":null,"docs":" `?`","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":47840,"byte_end":47850,"line_start":366,"line_end":366,"column_start":13,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":47883,"byte_end":47886,"line_start":368,"line_end":368,"column_start":13,"column_end":16}},{"value":"/ Don't try to remember the name of this type &mdash; use the","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":47899,"byte_end":47962,"line_start":369,"line_end":369,"column_start":13,"column_end":76}},{"value":"/ [`Token!`] macro instead.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":47975,"byte_end":48004,"line_start":370,"line_end":370,"column_start":13,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":48017,"byte_end":48020,"line_start":371,"line_end":371,"column_start":13,"column_end":16}},{"value":"/ [`Token!`]: crate::token","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":48033,"byte_end":48061,"line_start":372,"line_end":372,"column_start":13,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":2448},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":60510,"byte_end":60518,"line_start":739,"line_end":739,"column_start":30,"column_end":38},"name":"Question","qualname":"::token::Question","value":"fn Question<S>(S) -> Question where S: IntoSpans<[Span; ]>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":48188,"byte_end":48212,"line_start":378,"line_end":378,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":2459},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":60560,"byte_end":60566,"line_start":740,"line_end":740,"column_start":30,"column_end":36},"name":"RArrow","qualname":"::token::RArrow","value":"RArrow { spans }","parent":null,"children":[{"krate":0,"index":2460}],"decl_id":null,"docs":" `->`","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":47840,"byte_end":47850,"line_start":366,"line_end":366,"column_start":13,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":47883,"byte_end":47886,"line_start":368,"line_end":368,"column_start":13,"column_end":16}},{"value":"/ Don't try to remember the name of this type &mdash; use the","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":47899,"byte_end":47962,"line_start":369,"line_end":369,"column_start":13,"column_end":76}},{"value":"/ [`Token!`] macro instead.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":47975,"byte_end":48004,"line_start":370,"line_end":370,"column_start":13,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":48017,"byte_end":48020,"line_start":371,"line_end":371,"column_start":13,"column_end":16}},{"value":"/ [`Token!`]: crate::token","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":48033,"byte_end":48061,"line_start":372,"line_end":372,"column_start":13,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":2462},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":60560,"byte_end":60566,"line_start":740,"line_end":740,"column_start":30,"column_end":36},"name":"RArrow","qualname":"::token::RArrow","value":"fn RArrow<S>(S) -> RArrow where S: IntoSpans<[Span; ]>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":48188,"byte_end":48212,"line_start":378,"line_end":378,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":2468},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":60611,"byte_end":60617,"line_start":741,"line_end":741,"column_start":30,"column_end":36},"name":"LArrow","qualname":"::token::LArrow","value":"LArrow { spans }","parent":null,"children":[{"krate":0,"index":2469}],"decl_id":null,"docs":" `<-`","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":47840,"byte_end":47850,"line_start":366,"line_end":366,"column_start":13,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":47883,"byte_end":47886,"line_start":368,"line_end":368,"column_start":13,"column_end":16}},{"value":"/ Don't try to remember the name of this type &mdash; use the","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":47899,"byte_end":47962,"line_start":369,"line_end":369,"column_start":13,"column_end":76}},{"value":"/ [`Token!`] macro instead.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":47975,"byte_end":48004,"line_start":370,"line_end":370,"column_start":13,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":48017,"byte_end":48020,"line_start":371,"line_end":371,"column_start":13,"column_end":16}},{"value":"/ [`Token!`]: crate::token","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":48033,"byte_end":48061,"line_start":372,"line_end":372,"column_start":13,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":2471},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":60611,"byte_end":60617,"line_start":741,"line_end":741,"column_start":30,"column_end":36},"name":"LArrow","qualname":"::token::LArrow","value":"fn LArrow<S>(S) -> LArrow where S: IntoSpans<[Span; ]>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":48188,"byte_end":48212,"line_start":378,"line_end":378,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":2477},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":60662,"byte_end":60665,"line_start":742,"line_end":742,"column_start":30,"column_end":33},"name":"Rem","qualname":"::token::Rem","value":"Rem { spans }","parent":null,"children":[{"krate":0,"index":2478}],"decl_id":null,"docs":" `%`","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":47840,"byte_end":47850,"line_start":366,"line_end":366,"column_start":13,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":47883,"byte_end":47886,"line_start":368,"line_end":368,"column_start":13,"column_end":16}},{"value":"/ Don't try to remember the name of this type &mdash; use the","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":47899,"byte_end":47962,"line_start":369,"line_end":369,"column_start":13,"column_end":76}},{"value":"/ [`Token!`] macro instead.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":47975,"byte_end":48004,"line_start":370,"line_end":370,"column_start":13,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":48017,"byte_end":48020,"line_start":371,"line_end":371,"column_start":13,"column_end":16}},{"value":"/ [`Token!`]: crate::token","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":48033,"byte_end":48061,"line_start":372,"line_end":372,"column_start":13,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":2480},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":60662,"byte_end":60665,"line_start":742,"line_end":742,"column_start":30,"column_end":33},"name":"Rem","qualname":"::token::Rem","value":"fn Rem<S>(S) -> Rem where S: IntoSpans<[Span; ]>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":48188,"byte_end":48212,"line_start":378,"line_end":378,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":2491},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":60712,"byte_end":60717,"line_start":743,"line_end":743,"column_start":30,"column_end":35},"name":"RemEq","qualname":"::token::RemEq","value":"RemEq { spans }","parent":null,"children":[{"krate":0,"index":2492}],"decl_id":null,"docs":" `%=`","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":47840,"byte_end":47850,"line_start":366,"line_end":366,"column_start":13,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":47883,"byte_end":47886,"line_start":368,"line_end":368,"column_start":13,"column_end":16}},{"value":"/ Don't try to remember the name of this type &mdash; use the","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":47899,"byte_end":47962,"line_start":369,"line_end":369,"column_start":13,"column_end":76}},{"value":"/ [`Token!`] macro instead.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":47975,"byte_end":48004,"line_start":370,"line_end":370,"column_start":13,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":48017,"byte_end":48020,"line_start":371,"line_end":371,"column_start":13,"column_end":16}},{"value":"/ [`Token!`]: crate::token","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":48033,"byte_end":48061,"line_start":372,"line_end":372,"column_start":13,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":2494},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":60712,"byte_end":60717,"line_start":743,"line_end":743,"column_start":30,"column_end":35},"name":"RemEq","qualname":"::token::RemEq","value":"fn RemEq<S>(S) -> RemEq where S: IntoSpans<[Span; ]>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":48188,"byte_end":48212,"line_start":378,"line_end":378,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":2500},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":60763,"byte_end":60771,"line_start":744,"line_end":744,"column_start":30,"column_end":38},"name":"FatArrow","qualname":"::token::FatArrow","value":"FatArrow { spans }","parent":null,"children":[{"krate":0,"index":2501}],"decl_id":null,"docs":" `=>`","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":47840,"byte_end":47850,"line_start":366,"line_end":366,"column_start":13,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":47883,"byte_end":47886,"line_start":368,"line_end":368,"column_start":13,"column_end":16}},{"value":"/ Don't try to remember the name of this type &mdash; use the","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":47899,"byte_end":47962,"line_start":369,"line_end":369,"column_start":13,"column_end":76}},{"value":"/ [`Token!`] macro instead.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":47975,"byte_end":48004,"line_start":370,"line_end":370,"column_start":13,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":48017,"byte_end":48020,"line_start":371,"line_end":371,"column_start":13,"column_end":16}},{"value":"/ [`Token!`]: crate::token","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":48033,"byte_end":48061,"line_start":372,"line_end":372,"column_start":13,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":2503},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":60763,"byte_end":60771,"line_start":744,"line_end":744,"column_start":30,"column_end":38},"name":"FatArrow","qualname":"::token::FatArrow","value":"fn FatArrow<S>(S) -> FatArrow where S: IntoSpans<[Span; ]>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":48188,"byte_end":48212,"line_start":378,"line_end":378,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":2509},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":60814,"byte_end":60818,"line_start":745,"line_end":745,"column_start":30,"column_end":34},"name":"Semi","qualname":"::token::Semi","value":"Semi { spans }","parent":null,"children":[{"krate":0,"index":2510}],"decl_id":null,"docs":" `;`","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":47840,"byte_end":47850,"line_start":366,"line_end":366,"column_start":13,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":47883,"byte_end":47886,"line_start":368,"line_end":368,"column_start":13,"column_end":16}},{"value":"/ Don't try to remember the name of this type &mdash; use the","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":47899,"byte_end":47962,"line_start":369,"line_end":369,"column_start":13,"column_end":76}},{"value":"/ [`Token!`] macro instead.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":47975,"byte_end":48004,"line_start":370,"line_end":370,"column_start":13,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":48017,"byte_end":48020,"line_start":371,"line_end":371,"column_start":13,"column_end":16}},{"value":"/ [`Token!`]: crate::token","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":48033,"byte_end":48061,"line_start":372,"line_end":372,"column_start":13,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":2512},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":60814,"byte_end":60818,"line_start":745,"line_end":745,"column_start":30,"column_end":34},"name":"Semi","qualname":"::token::Semi","value":"fn Semi<S>(S) -> Semi where S: IntoSpans<[Span; ]>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":48188,"byte_end":48212,"line_start":378,"line_end":378,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":2523},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":60864,"byte_end":60867,"line_start":746,"line_end":746,"column_start":30,"column_end":33},"name":"Shl","qualname":"::token::Shl","value":"Shl { spans }","parent":null,"children":[{"krate":0,"index":2524}],"decl_id":null,"docs":" `<<`","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":47840,"byte_end":47850,"line_start":366,"line_end":366,"column_start":13,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":47883,"byte_end":47886,"line_start":368,"line_end":368,"column_start":13,"column_end":16}},{"value":"/ Don't try to remember the name of this type &mdash; use the","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":47899,"byte_end":47962,"line_start":369,"line_end":369,"column_start":13,"column_end":76}},{"value":"/ [`Token!`] macro instead.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":47975,"byte_end":48004,"line_start":370,"line_end":370,"column_start":13,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":48017,"byte_end":48020,"line_start":371,"line_end":371,"column_start":13,"column_end":16}},{"value":"/ [`Token!`]: crate::token","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":48033,"byte_end":48061,"line_start":372,"line_end":372,"column_start":13,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":2526},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":60864,"byte_end":60867,"line_start":746,"line_end":746,"column_start":30,"column_end":33},"name":"Shl","qualname":"::token::Shl","value":"fn Shl<S>(S) -> Shl where S: IntoSpans<[Span; ]>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":48188,"byte_end":48212,"line_start":378,"line_end":378,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":2532},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":60915,"byte_end":60920,"line_start":747,"line_end":747,"column_start":30,"column_end":35},"name":"ShlEq","qualname":"::token::ShlEq","value":"ShlEq { spans }","parent":null,"children":[{"krate":0,"index":2533}],"decl_id":null,"docs":" `<<=`","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":47840,"byte_end":47850,"line_start":366,"line_end":366,"column_start":13,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":47883,"byte_end":47886,"line_start":368,"line_end":368,"column_start":13,"column_end":16}},{"value":"/ Don't try to remember the name of this type &mdash; use the","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":47899,"byte_end":47962,"line_start":369,"line_end":369,"column_start":13,"column_end":76}},{"value":"/ [`Token!`] macro instead.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":47975,"byte_end":48004,"line_start":370,"line_end":370,"column_start":13,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":48017,"byte_end":48020,"line_start":371,"line_end":371,"column_start":13,"column_end":16}},{"value":"/ [`Token!`]: crate::token","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":48033,"byte_end":48061,"line_start":372,"line_end":372,"column_start":13,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":2535},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":60915,"byte_end":60920,"line_start":747,"line_end":747,"column_start":30,"column_end":35},"name":"ShlEq","qualname":"::token::ShlEq","value":"fn ShlEq<S>(S) -> ShlEq where S: IntoSpans<[Span; ]>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":48188,"byte_end":48212,"line_start":378,"line_end":378,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":2541},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":60967,"byte_end":60970,"line_start":748,"line_end":748,"column_start":30,"column_end":33},"name":"Shr","qualname":"::token::Shr","value":"Shr { spans }","parent":null,"children":[{"krate":0,"index":2542}],"decl_id":null,"docs":" `>>`","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":47840,"byte_end":47850,"line_start":366,"line_end":366,"column_start":13,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":47883,"byte_end":47886,"line_start":368,"line_end":368,"column_start":13,"column_end":16}},{"value":"/ Don't try to remember the name of this type &mdash; use the","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":47899,"byte_end":47962,"line_start":369,"line_end":369,"column_start":13,"column_end":76}},{"value":"/ [`Token!`] macro instead.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":47975,"byte_end":48004,"line_start":370,"line_end":370,"column_start":13,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":48017,"byte_end":48020,"line_start":371,"line_end":371,"column_start":13,"column_end":16}},{"value":"/ [`Token!`]: crate::token","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":48033,"byte_end":48061,"line_start":372,"line_end":372,"column_start":13,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":2544},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":60967,"byte_end":60970,"line_start":748,"line_end":748,"column_start":30,"column_end":33},"name":"Shr","qualname":"::token::Shr","value":"fn Shr<S>(S) -> Shr where S: IntoSpans<[Span; ]>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":48188,"byte_end":48212,"line_start":378,"line_end":378,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":2550},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":61018,"byte_end":61023,"line_start":749,"line_end":749,"column_start":30,"column_end":35},"name":"ShrEq","qualname":"::token::ShrEq","value":"ShrEq { spans }","parent":null,"children":[{"krate":0,"index":2551}],"decl_id":null,"docs":" `>>=`","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":47840,"byte_end":47850,"line_start":366,"line_end":366,"column_start":13,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":47883,"byte_end":47886,"line_start":368,"line_end":368,"column_start":13,"column_end":16}},{"value":"/ Don't try to remember the name of this type &mdash; use the","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":47899,"byte_end":47962,"line_start":369,"line_end":369,"column_start":13,"column_end":76}},{"value":"/ [`Token!`] macro instead.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":47975,"byte_end":48004,"line_start":370,"line_end":370,"column_start":13,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":48017,"byte_end":48020,"line_start":371,"line_end":371,"column_start":13,"column_end":16}},{"value":"/ [`Token!`]: crate::token","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":48033,"byte_end":48061,"line_start":372,"line_end":372,"column_start":13,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":2553},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":61018,"byte_end":61023,"line_start":749,"line_end":749,"column_start":30,"column_end":35},"name":"ShrEq","qualname":"::token::ShrEq","value":"fn ShrEq<S>(S) -> ShrEq where S: IntoSpans<[Span; ]>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":48188,"byte_end":48212,"line_start":378,"line_end":378,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":2559},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":61070,"byte_end":61074,"line_start":750,"line_end":750,"column_start":30,"column_end":34},"name":"Star","qualname":"::token::Star","value":"Star { spans }","parent":null,"children":[{"krate":0,"index":2560}],"decl_id":null,"docs":" `*`","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":47840,"byte_end":47850,"line_start":366,"line_end":366,"column_start":13,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":47883,"byte_end":47886,"line_start":368,"line_end":368,"column_start":13,"column_end":16}},{"value":"/ Don't try to remember the name of this type &mdash; use the","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":47899,"byte_end":47962,"line_start":369,"line_end":369,"column_start":13,"column_end":76}},{"value":"/ [`Token!`] macro instead.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":47975,"byte_end":48004,"line_start":370,"line_end":370,"column_start":13,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":48017,"byte_end":48020,"line_start":371,"line_end":371,"column_start":13,"column_end":16}},{"value":"/ [`Token!`]: crate::token","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":48033,"byte_end":48061,"line_start":372,"line_end":372,"column_start":13,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":2562},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":61070,"byte_end":61074,"line_start":750,"line_end":750,"column_start":30,"column_end":34},"name":"Star","qualname":"::token::Star","value":"fn Star<S>(S) -> Star where S: IntoSpans<[Span; ]>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":48188,"byte_end":48212,"line_start":378,"line_end":378,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":2573},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":61120,"byte_end":61123,"line_start":751,"line_end":751,"column_start":30,"column_end":33},"name":"Sub","qualname":"::token::Sub","value":"Sub { spans }","parent":null,"children":[{"krate":0,"index":2574}],"decl_id":null,"docs":" `-`","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":47840,"byte_end":47850,"line_start":366,"line_end":366,"column_start":13,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":47883,"byte_end":47886,"line_start":368,"line_end":368,"column_start":13,"column_end":16}},{"value":"/ Don't try to remember the name of this type &mdash; use the","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":47899,"byte_end":47962,"line_start":369,"line_end":369,"column_start":13,"column_end":76}},{"value":"/ [`Token!`] macro instead.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":47975,"byte_end":48004,"line_start":370,"line_end":370,"column_start":13,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":48017,"byte_end":48020,"line_start":371,"line_end":371,"column_start":13,"column_end":16}},{"value":"/ [`Token!`]: crate::token","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":48033,"byte_end":48061,"line_start":372,"line_end":372,"column_start":13,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":2576},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":61120,"byte_end":61123,"line_start":751,"line_end":751,"column_start":30,"column_end":33},"name":"Sub","qualname":"::token::Sub","value":"fn Sub<S>(S) -> Sub where S: IntoSpans<[Span; ]>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":48188,"byte_end":48212,"line_start":378,"line_end":378,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":2587},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":61170,"byte_end":61175,"line_start":752,"line_end":752,"column_start":30,"column_end":35},"name":"SubEq","qualname":"::token::SubEq","value":"SubEq { spans }","parent":null,"children":[{"krate":0,"index":2588}],"decl_id":null,"docs":" `-=`","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":47840,"byte_end":47850,"line_start":366,"line_end":366,"column_start":13,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":47883,"byte_end":47886,"line_start":368,"line_end":368,"column_start":13,"column_end":16}},{"value":"/ Don't try to remember the name of this type &mdash; use the","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":47899,"byte_end":47962,"line_start":369,"line_end":369,"column_start":13,"column_end":76}},{"value":"/ [`Token!`] macro instead.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":47975,"byte_end":48004,"line_start":370,"line_end":370,"column_start":13,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":48017,"byte_end":48020,"line_start":371,"line_end":371,"column_start":13,"column_end":16}},{"value":"/ [`Token!`]: crate::token","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":48033,"byte_end":48061,"line_start":372,"line_end":372,"column_start":13,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":2590},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":61170,"byte_end":61175,"line_start":752,"line_end":752,"column_start":30,"column_end":35},"name":"SubEq","qualname":"::token::SubEq","value":"fn SubEq<S>(S) -> SubEq where S: IntoSpans<[Span; ]>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":48188,"byte_end":48212,"line_start":378,"line_end":378,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":2596},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":61221,"byte_end":61226,"line_start":753,"line_end":753,"column_start":30,"column_end":35},"name":"Tilde","qualname":"::token::Tilde","value":"Tilde { spans }","parent":null,"children":[{"krate":0,"index":2597}],"decl_id":null,"docs":" `~`","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":47840,"byte_end":47850,"line_start":366,"line_end":366,"column_start":13,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":47883,"byte_end":47886,"line_start":368,"line_end":368,"column_start":13,"column_end":16}},{"value":"/ Don't try to remember the name of this type &mdash; use the","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":47899,"byte_end":47962,"line_start":369,"line_end":369,"column_start":13,"column_end":76}},{"value":"/ [`Token!`] macro instead.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":47975,"byte_end":48004,"line_start":370,"line_end":370,"column_start":13,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":48017,"byte_end":48020,"line_start":371,"line_end":371,"column_start":13,"column_end":16}},{"value":"/ [`Token!`]: crate::token","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":48033,"byte_end":48061,"line_start":372,"line_end":372,"column_start":13,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":2599},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":61221,"byte_end":61226,"line_start":753,"line_end":753,"column_start":30,"column_end":35},"name":"Tilde","qualname":"::token::Tilde","value":"fn Tilde<S>(S) -> Tilde where S: IntoSpans<[Span; ]>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":48188,"byte_end":48212,"line_start":378,"line_end":378,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":2610},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":61295,"byte_end":61300,"line_start":757,"line_end":757,"column_start":30,"column_end":35},"name":"Brace","qualname":"::token::Brace","value":"Brace { span }","parent":null,"children":[{"krate":0,"index":2611}],"decl_id":null,"docs":" `{...}`\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":2612},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":61295,"byte_end":61300,"line_start":757,"line_end":757,"column_start":30,"column_end":35},"name":"Brace","qualname":"::token::Brace","value":"fn Brace<S>(S) -> Brace where S: IntoSpans<[Span; ]>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":51593,"byte_end":51617,"line_start":487,"line_end":487,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":2618},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":61349,"byte_end":61356,"line_start":758,"line_end":758,"column_start":30,"column_end":37},"name":"Bracket","qualname":"::token::Bracket","value":"Bracket { span }","parent":null,"children":[{"krate":0,"index":2619}],"decl_id":null,"docs":" `[...]`\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":2620},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":61349,"byte_end":61356,"line_start":758,"line_end":758,"column_start":30,"column_end":37},"name":"Bracket","qualname":"::token::Bracket","value":"fn Bracket<S>(S) -> Bracket where S: IntoSpans<[Span; ]>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":51593,"byte_end":51617,"line_start":487,"line_end":487,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":2626},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":61403,"byte_end":61408,"line_start":759,"line_end":759,"column_start":30,"column_end":35},"name":"Paren","qualname":"::token::Paren","value":"Paren { span }","parent":null,"children":[{"krate":0,"index":2627}],"decl_id":null,"docs":" `(...)`\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":2628},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":61403,"byte_end":61408,"line_start":759,"line_end":759,"column_start":30,"column_end":35},"name":"Paren","qualname":"::token::Paren","value":"fn Paren<S>(S) -> Paren where S: IntoSpans<[Span; ]>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":51593,"byte_end":51617,"line_start":487,"line_end":487,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":2634},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":61457,"byte_end":61462,"line_start":760,"line_end":760,"column_start":30,"column_end":35},"name":"Group","qualname":"::token::Group","value":"Group { span }","parent":null,"children":[{"krate":0,"index":2635}],"decl_id":null,"docs":" None-delimited group\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":2636},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":61457,"byte_end":61462,"line_start":760,"line_end":760,"column_start":30,"column_end":35},"name":"Group","qualname":"::token::Group","value":"fn Group<S>(S) -> Group where S: IntoSpans<[Span; ]>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\token.rs","byte_start":51593,"byte_end":51617,"line_start":487,"line_end":487,"column_start":13,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":49},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\ident.rs","byte_start":74266,"byte_end":74270,"line_start":84,"line_end":84,"column_start":8,"column_end":12},"name":"from","qualname":"<Ident as std::convert::From>::from","value":"fn from(crate::token::Underscore) -> Ident","parent":{"krate":2,"index":3085},"children":[],"decl_id":{"krate":2,"index":3087},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2653},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\attr.rs","byte_start":80181,"byte_end":80190,"line_start":149,"line_end":149,"column_start":16,"column_end":25},"name":"Attribute","qualname":"::attr::Attribute","value":"Attribute { pound_token, style, bracket_token, path, tokens }","parent":null,"children":[{"krate":0,"index":2654},{"krate":0,"index":2655},{"krate":0,"index":2656},{"krate":0,"index":2657},{"krate":0,"index":2658}],"decl_id":null,"docs":" An attribute like `#[repr(transparent)]`.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2654},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\attr.rs","byte_start":80205,"byte_end":80216,"line_start":150,"line_end":150,"column_start":13,"column_end":24},"name":"pound_token","qualname":"::attr::Attribute::pound_token","value":"token::Pound","parent":{"krate":0,"index":2653},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2655},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\attr.rs","byte_start":80241,"byte_end":80246,"line_start":151,"line_end":151,"column_start":13,"column_end":18},"name":"style","qualname":"::attr::Attribute::style","value":"attr::AttrStyle","parent":{"krate":0,"index":2653},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2656},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\attr.rs","byte_start":80271,"byte_end":80284,"line_start":152,"line_end":152,"column_start":13,"column_end":26},"name":"bracket_token","qualname":"::attr::Attribute::bracket_token","value":"token::Bracket","parent":{"krate":0,"index":2653},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2657},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\attr.rs","byte_start":80314,"byte_end":80318,"line_start":153,"line_end":153,"column_start":13,"column_end":17},"name":"path","qualname":"::attr::Attribute::path","value":"path::Path","parent":{"krate":0,"index":2653},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2658},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\attr.rs","byte_start":80338,"byte_end":80344,"line_start":154,"line_end":154,"column_start":13,"column_end":19},"name":"tokens","qualname":"::attr::Attribute::tokens","value":"proc_macro2::TokenStream","parent":{"krate":0,"index":2653},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2660},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\attr.rs","byte_start":86152,"byte_end":86157,"line_start":331,"line_end":331,"column_start":9,"column_end":14},"name":"Outer","qualname":"::attr::AttrStyle::Outer","value":"AttrStyle::Outer","parent":{"krate":0,"index":2659},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2662},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\attr.rs","byte_start":86167,"byte_end":86172,"line_start":332,"line_end":332,"column_start":9,"column_end":14},"name":"Inner","qualname":"::attr::AttrStyle::Inner","value":"AttrStyle::Inner(crate::token::Bang)","parent":{"krate":0,"index":2659},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2664},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\attr.rs","byte_start":86173,"byte_end":86182,"line_start":332,"line_end":332,"column_start":15,"column_end":24},"name":"0","qualname":"::attr::AttrStyle::Inner::0","value":"token::Bang","parent":{"krate":0,"index":2662},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2659},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\attr.rs","byte_start":86132,"byte_end":86141,"line_start":330,"line_end":330,"column_start":14,"column_end":23},"name":"AttrStyle","qualname":"::attr::AttrStyle","value":"enum AttrStyle { Outer, Inner(crate::token::Bang), }","parent":null,"children":[{"krate":0,"index":2660},{"krate":0,"index":2662}],"decl_id":null,"docs":" Distinguishes between attributes that decorate an item and attributes\n that are contained within an item.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2666},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\attr.rs","byte_start":86952,"byte_end":86956,"line_start":362,"line_end":362,"column_start":9,"column_end":13},"name":"Path","qualname":"::attr::Meta::Path","value":"Meta::Path(Path)","parent":{"krate":0,"index":2665},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2668},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\attr.rs","byte_start":86957,"byte_end":86961,"line_start":362,"line_end":362,"column_start":14,"column_end":18},"name":"0","qualname":"::attr::Meta::Path::0","value":"path::Path","parent":{"krate":0,"index":2666},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2669},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\attr.rs","byte_start":87052,"byte_end":87056,"line_start":365,"line_end":365,"column_start":9,"column_end":13},"name":"List","qualname":"::attr::Meta::List","value":"Meta::List(MetaList)","parent":{"krate":0,"index":2665},"children":[],"decl_id":null,"docs":" A structured list within an attribute, like `derive(Copy, Clone)`.\n","sig":null,"attributes":[{"value":"/ A structured list within an attribute, like `derive(Copy, Clone)`.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\attr.rs","byte_start":86973,"byte_end":87043,"line_start":364,"line_end":364,"column_start":9,"column_end":79}}]},{"kind":"Field","id":{"krate":0,"index":2671},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\attr.rs","byte_start":87057,"byte_end":87065,"line_start":365,"line_end":365,"column_start":14,"column_end":22},"name":"0","qualname":"::attr::Meta::List::0","value":"attr::MetaList","parent":{"krate":0,"index":2669},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2672},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\attr.rs","byte_start":87156,"byte_end":87165,"line_start":368,"line_end":368,"column_start":9,"column_end":18},"name":"NameValue","qualname":"::attr::Meta::NameValue","value":"Meta::NameValue(MetaNameValue)","parent":{"krate":0,"index":2665},"children":[],"decl_id":null,"docs":" A name-value pair within an attribute, like `feature = \"nightly\"`.\n","sig":null,"attributes":[{"value":"/ A name-value pair within an attribute, like `feature = \"nightly\"`.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\attr.rs","byte_start":87077,"byte_end":87147,"line_start":367,"line_end":367,"column_start":9,"column_end":79}}]},{"kind":"Field","id":{"krate":0,"index":2674},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\attr.rs","byte_start":87166,"byte_end":87179,"line_start":368,"line_end":368,"column_start":19,"column_end":32},"name":"0","qualname":"::attr::Meta::NameValue::0","value":"attr::MetaNameValue","parent":{"krate":0,"index":2672},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2665},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\attr.rs","byte_start":86937,"byte_end":86941,"line_start":361,"line_end":361,"column_start":14,"column_end":18},"name":"Meta","qualname":"::attr::Meta","value":"enum Meta { Path(Path), List(MetaList), NameValue(MetaNameValue), }","parent":null,"children":[{"krate":0,"index":2666},{"krate":0,"index":2669},{"krate":0,"index":2672}],"decl_id":null,"docs":" Content of a compile-time structured attribute.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2681},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\attr.rs","byte_start":87484,"byte_end":87492,"line_start":378,"line_end":378,"column_start":16,"column_end":24},"name":"MetaList","qualname":"::attr::MetaList","value":"MetaList { path, paren_token, nested }","parent":null,"children":[{"krate":0,"index":2682},{"krate":0,"index":2683},{"krate":0,"index":2684}],"decl_id":null,"docs":" A structured list within an attribute, like `derive(Copy, Clone)`.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2682},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\attr.rs","byte_start":87507,"byte_end":87511,"line_start":379,"line_end":379,"column_start":13,"column_end":17},"name":"path","qualname":"::attr::MetaList::path","value":"path::Path","parent":{"krate":0,"index":2681},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2683},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\attr.rs","byte_start":87531,"byte_end":87542,"line_start":380,"line_end":380,"column_start":13,"column_end":24},"name":"paren_token","qualname":"::attr::MetaList::paren_token","value":"token::Paren","parent":{"krate":0,"index":2681},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2684},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\attr.rs","byte_start":87570,"byte_end":87576,"line_start":381,"line_end":381,"column_start":13,"column_end":19},"name":"nested","qualname":"::attr::MetaList::nested","value":"punctuated::Punctuated<attr::NestedMeta, token::Comma>","parent":{"krate":0,"index":2681},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2685},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\attr.rs","byte_start":87915,"byte_end":87928,"line_start":391,"line_end":391,"column_start":16,"column_end":29},"name":"MetaNameValue","qualname":"::attr::MetaNameValue","value":"MetaNameValue { path, eq_token, lit }","parent":null,"children":[{"krate":0,"index":2686},{"krate":0,"index":2687},{"krate":0,"index":2688}],"decl_id":null,"docs":" A name-value pair within an attribute, like `feature = \"nightly\"`.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2686},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\attr.rs","byte_start":87943,"byte_end":87947,"line_start":392,"line_end":392,"column_start":13,"column_end":17},"name":"path","qualname":"::attr::MetaNameValue::path","value":"path::Path","parent":{"krate":0,"index":2685},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2687},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\attr.rs","byte_start":87967,"byte_end":87975,"line_start":393,"line_end":393,"column_start":13,"column_end":21},"name":"eq_token","qualname":"::attr::MetaNameValue::eq_token","value":"token::Eq","parent":{"krate":0,"index":2685},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2688},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\attr.rs","byte_start":88000,"byte_end":88003,"line_start":394,"line_end":394,"column_start":13,"column_end":16},"name":"lit","qualname":"::attr::MetaNameValue::lit","value":"lit::Lit","parent":{"krate":0,"index":2685},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":70},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\attr.rs","byte_start":88274,"byte_end":88278,"line_start":403,"line_end":403,"column_start":12,"column_end":16},"name":"path","qualname":"<Meta>::path","value":"fn path(&Self) -> &Path","parent":null,"children":[],"decl_id":null,"docs":" Returns the identifier that begins this structured meta item.","sig":null,"attributes":[{"value":"/ Returns the identifier that begins this structured meta item.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\attr.rs","byte_start":88035,"byte_end":88100,"line_start":399,"line_end":399,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\attr.rs","byte_start":88105,"byte_end":88108,"line_start":400,"line_end":400,"column_start":5,"column_end":8}},{"value":"/ For example this would return the `test` in `#[test]`, the `derive` in","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\attr.rs","byte_start":88113,"byte_end":88187,"line_start":401,"line_end":401,"column_start":5,"column_end":79}},{"value":"/ `#[derive(Copy)]`, and the `path` in `#[path = \"sys/windows.rs\"]`.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\attr.rs","byte_start":88192,"byte_end":88262,"line_start":402,"line_end":402,"column_start":5,"column_end":75}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2690},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\attr.rs","byte_start":88887,"byte_end":88891,"line_start":421,"line_end":421,"column_start":9,"column_end":13},"name":"Meta","qualname":"::attr::NestedMeta::Meta","value":"NestedMeta::Meta(Meta)","parent":{"krate":0,"index":2689},"children":[],"decl_id":null,"docs":" A structured meta item, like the `Copy` in `#[derive(Copy)]` which\n would be a nested `Meta::Path`.\n","sig":null,"attributes":[{"value":"/ A structured meta item, like the `Copy` in `#[derive(Copy)]` which","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\attr.rs","byte_start":88764,"byte_end":88834,"line_start":419,"line_end":419,"column_start":9,"column_end":79}},{"value":"/ would be a nested `Meta::Path`.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\attr.rs","byte_start":88843,"byte_end":88878,"line_start":420,"line_end":420,"column_start":9,"column_end":44}}]},{"kind":"Field","id":{"krate":0,"index":2692},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\attr.rs","byte_start":88892,"byte_end":88896,"line_start":421,"line_end":421,"column_start":14,"column_end":18},"name":"0","qualname":"::attr::NestedMeta::Meta::0","value":"attr::Meta","parent":{"krate":0,"index":2690},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2693},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\attr.rs","byte_start":88986,"byte_end":88989,"line_start":424,"line_end":424,"column_start":9,"column_end":12},"name":"Lit","qualname":"::attr::NestedMeta::Lit","value":"NestedMeta::Lit(Lit)","parent":{"krate":0,"index":2689},"children":[],"decl_id":null,"docs":" A Rust literal, like the `\"new_name\"` in `#[rename(\"new_name\")]`.\n","sig":null,"attributes":[{"value":"/ A Rust literal, like the `\"new_name\"` in `#[rename(\"new_name\")]`.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\attr.rs","byte_start":88908,"byte_end":88977,"line_start":423,"line_end":423,"column_start":9,"column_end":78}}]},{"kind":"Field","id":{"krate":0,"index":2695},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\attr.rs","byte_start":88990,"byte_end":88993,"line_start":424,"line_end":424,"column_start":13,"column_end":16},"name":"0","qualname":"::attr::NestedMeta::Lit::0","value":"lit::Lit","parent":{"krate":0,"index":2693},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2689},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\attr.rs","byte_start":88743,"byte_end":88753,"line_start":418,"line_end":418,"column_start":14,"column_end":24},"name":"NestedMeta","qualname":"::attr::NestedMeta","value":"enum NestedMeta { Meta(Meta), Lit(Lit), }","parent":null,"children":[{"krate":0,"index":2690},{"krate":0,"index":2693}],"decl_id":null,"docs":" Element of a compile-time attribute list.","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":71},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\attr.rs","byte_start":90056,"byte_end":90069,"line_start":464,"line_end":464,"column_start":10,"column_end":23},"name":"AttributeArgs","qualname":"::attr::AttributeArgs","value":"Vec<NestedMeta>","parent":null,"children":[],"decl_id":null,"docs":" Conventional argument type associated with an invocation of an attribute\n macro.","sig":null,"attributes":[{"value":"/ Conventional argument type associated with an invocation of an attribute","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\attr.rs","byte_start":89005,"byte_end":89081,"line_start":428,"line_end":428,"column_start":1,"column_end":77}},{"value":"/ macro.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\attr.rs","byte_start":89082,"byte_end":89092,"line_start":429,"line_end":429,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\attr.rs","byte_start":89093,"byte_end":89096,"line_start":430,"line_end":430,"column_start":1,"column_end":4}},{"value":"/ For example if we are developing an attribute macro that is intended to be","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\attr.rs","byte_start":89097,"byte_end":89175,"line_start":431,"line_end":431,"column_start":1,"column_end":79}},{"value":"/ invoked on function items as follows:","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\attr.rs","byte_start":89176,"byte_end":89217,"line_start":432,"line_end":432,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\attr.rs","byte_start":89218,"byte_end":89221,"line_start":433,"line_end":433,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\attr.rs","byte_start":89222,"byte_end":89229,"line_start":434,"line_end":434,"column_start":1,"column_end":8}},{"value":"/ # const IGNORE: &str = stringify! {","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\attr.rs","byte_start":89230,"byte_end":89269,"line_start":435,"line_end":435,"column_start":1,"column_end":40}},{"value":"/ #[my_attribute(path = \"/v1/refresh\")]","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\attr.rs","byte_start":89270,"byte_end":89311,"line_start":436,"line_end":436,"column_start":1,"column_end":42}},{"value":"/ # };","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\attr.rs","byte_start":89312,"byte_end":89320,"line_start":437,"line_end":437,"column_start":1,"column_end":9}},{"value":"/ pub fn refresh() {","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\attr.rs","byte_start":89321,"byte_end":89343,"line_start":438,"line_end":438,"column_start":1,"column_end":23}},{"value":"/     /* ... */","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\attr.rs","byte_start":89344,"byte_end":89361,"line_start":439,"line_end":439,"column_start":1,"column_end":18}},{"value":"/ }","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\attr.rs","byte_start":89362,"byte_end":89367,"line_start":440,"line_end":440,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\attr.rs","byte_start":89368,"byte_end":89375,"line_start":441,"line_end":441,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\attr.rs","byte_start":89376,"byte_end":89379,"line_start":442,"line_end":442,"column_start":1,"column_end":4}},{"value":"/ The implementation of this macro would want to parse its attribute arguments","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\attr.rs","byte_start":89380,"byte_end":89460,"line_start":443,"line_end":443,"column_start":1,"column_end":81}},{"value":"/ as type `AttributeArgs`.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\attr.rs","byte_start":89461,"byte_end":89489,"line_start":444,"line_end":444,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\attr.rs","byte_start":89490,"byte_end":89493,"line_start":445,"line_end":445,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\attr.rs","byte_start":89494,"byte_end":89501,"line_start":446,"line_end":446,"column_start":1,"column_end":8}},{"value":"/ # extern crate proc_macro;","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\attr.rs","byte_start":89502,"byte_end":89532,"line_start":447,"line_end":447,"column_start":1,"column_end":31}},{"value":"/ #","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\attr.rs","byte_start":89533,"byte_end":89538,"line_start":448,"line_end":448,"column_start":1,"column_end":6}},{"value":"/ use proc_macro::TokenStream;","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\attr.rs","byte_start":89539,"byte_end":89571,"line_start":449,"line_end":449,"column_start":1,"column_end":33}},{"value":"/ use syn::{parse_macro_input, AttributeArgs, ItemFn};","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\attr.rs","byte_start":89572,"byte_end":89628,"line_start":450,"line_end":450,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\attr.rs","byte_start":89629,"byte_end":89632,"line_start":451,"line_end":451,"column_start":1,"column_end":4}},{"value":"/ # const IGNORE: &str = stringify! {","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\attr.rs","byte_start":89633,"byte_end":89672,"line_start":452,"line_end":452,"column_start":1,"column_end":40}},{"value":"/ #[proc_macro_attribute]","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\attr.rs","byte_start":89673,"byte_end":89700,"line_start":453,"line_end":453,"column_start":1,"column_end":28}},{"value":"/ # };","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\attr.rs","byte_start":89701,"byte_end":89709,"line_start":454,"line_end":454,"column_start":1,"column_end":9}},{"value":"/ pub fn my_attribute(args: TokenStream, input: TokenStream) -> TokenStream {","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\attr.rs","byte_start":89710,"byte_end":89789,"line_start":455,"line_end":455,"column_start":1,"column_end":80}},{"value":"/     let args = parse_macro_input!(args as AttributeArgs);","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\attr.rs","byte_start":89790,"byte_end":89851,"line_start":456,"line_end":456,"column_start":1,"column_end":62}},{"value":"/     let input = parse_macro_input!(input as ItemFn);","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\attr.rs","byte_start":89852,"byte_end":89908,"line_start":457,"line_end":457,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\attr.rs","byte_start":89909,"byte_end":89912,"line_start":458,"line_end":458,"column_start":1,"column_end":4}},{"value":"/     /* ... */","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\attr.rs","byte_start":89913,"byte_end":89930,"line_start":459,"line_end":459,"column_start":1,"column_end":18}},{"value":"/ #   \"\".parse().unwrap()","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\attr.rs","byte_start":89931,"byte_end":89958,"line_start":460,"line_end":460,"column_start":1,"column_end":28}},{"value":"/ }","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\attr.rs","byte_start":89959,"byte_end":89964,"line_start":461,"line_end":461,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\attr.rs","byte_start":89965,"byte_end":89972,"line_start":462,"line_end":462,"column_start":1,"column_end":8}}]},{"kind":"Type","id":{"krate":0,"index":74},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\attr.rs","byte_start":90127,"byte_end":90130,"line_start":467,"line_end":467,"column_start":10,"column_end":13},"name":"Ret","qualname":"::attr::FilterAttrs::Ret","value":"type Ret: Iterator<Item = &'a Attribute>;","parent":{"krate":0,"index":72},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2700},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\data.rs","byte_start":98403,"byte_end":98410,"line_start":10,"line_end":10,"column_start":16,"column_end":23},"name":"Variant","qualname":"::data::Variant","value":"Variant { attrs, ident, fields, discriminant }","parent":null,"children":[{"krate":0,"index":2701},{"krate":0,"index":2702},{"krate":0,"index":2703},{"krate":0,"index":2704}],"decl_id":null,"docs":" An enum variant.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2701},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\data.rs","byte_start":98471,"byte_end":98476,"line_start":12,"line_end":12,"column_start":13,"column_end":18},"name":"attrs","qualname":"::data::Variant::attrs","value":"std::vec::Vec<attr::Attribute>","parent":{"krate":0,"index":2700},"children":[],"decl_id":null,"docs":" Attributes tagged on the variant.\n","sig":null,"attributes":[{"value":"/ Attributes tagged on the variant.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\data.rs","byte_start":98421,"byte_end":98458,"line_start":11,"line_end":11,"column_start":9,"column_end":46}}]},{"kind":"Field","id":{"krate":0,"index":2702},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\data.rs","byte_start":98540,"byte_end":98545,"line_start":15,"line_end":15,"column_start":13,"column_end":18},"name":"ident","qualname":"::data::Variant::ident","value":"proc_macro2::Ident","parent":{"krate":0,"index":2700},"children":[],"decl_id":null,"docs":" Name of the variant.\n","sig":null,"attributes":[{"value":"/ Name of the variant.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\data.rs","byte_start":98503,"byte_end":98527,"line_start":14,"line_end":14,"column_start":9,"column_end":33}}]},{"kind":"Field","id":{"krate":0,"index":2703},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\data.rs","byte_start":98610,"byte_end":98616,"line_start":18,"line_end":18,"column_start":13,"column_end":19},"name":"fields","qualname":"::data::Variant::fields","value":"data::Fields","parent":{"krate":0,"index":2700},"children":[],"decl_id":null,"docs":" Content stored in the variant.\n","sig":null,"attributes":[{"value":"/ Content stored in the variant.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\data.rs","byte_start":98563,"byte_end":98597,"line_start":17,"line_end":17,"column_start":9,"column_end":43}}]},{"kind":"Field","id":{"krate":0,"index":2704},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\data.rs","byte_start":98688,"byte_end":98700,"line_start":21,"line_end":21,"column_start":13,"column_end":25},"name":"discriminant","qualname":"::data::Variant::discriminant","value":"std::option::Option<(token::Eq, expr::Expr)>","parent":{"krate":0,"index":2700},"children":[],"decl_id":null,"docs":" Explicit discriminant: `Variant = 1`\n","sig":null,"attributes":[{"value":"/ Explicit discriminant: `Variant = 1`","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\data.rs","byte_start":98635,"byte_end":98675,"line_start":20,"line_end":20,"column_start":9,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2706},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\data.rs","byte_start":99282,"byte_end":99287,"line_start":40,"line_end":40,"column_start":9,"column_end":14},"name":"Named","qualname":"::data::Fields::Named","value":"Fields::Named(FieldsNamed)","parent":{"krate":0,"index":2705},"children":[],"decl_id":null,"docs":" Named fields of a struct or struct variant such as `Point { x: f64,\n y: f64 }`.\n","sig":null,"attributes":[{"value":"/ Named fields of a struct or struct variant such as `Point { x: f64,","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\data.rs","byte_start":99179,"byte_end":99250,"line_start":38,"line_end":38,"column_start":9,"column_end":80}},{"value":"/ y: f64 }`.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\data.rs","byte_start":99259,"byte_end":99273,"line_start":39,"line_end":39,"column_start":9,"column_end":23}}]},{"kind":"Field","id":{"krate":0,"index":2708},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\data.rs","byte_start":99288,"byte_end":99299,"line_start":40,"line_end":40,"column_start":15,"column_end":26},"name":"0","qualname":"::data::Fields::Named::0","value":"data::FieldsNamed","parent":{"krate":0,"index":2706},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2709},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\data.rs","byte_start":99392,"byte_end":99399,"line_start":43,"line_end":43,"column_start":9,"column_end":16},"name":"Unnamed","qualname":"::data::Fields::Unnamed","value":"Fields::Unnamed(FieldsUnnamed)","parent":{"krate":0,"index":2705},"children":[],"decl_id":null,"docs":" Unnamed fields of a tuple struct or tuple variant such as `Some(T)`.\n","sig":null,"attributes":[{"value":"/ Unnamed fields of a tuple struct or tuple variant such as `Some(T)`.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\data.rs","byte_start":99311,"byte_end":99383,"line_start":42,"line_end":42,"column_start":9,"column_end":81}}]},{"kind":"Field","id":{"krate":0,"index":2711},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\data.rs","byte_start":99400,"byte_end":99413,"line_start":43,"line_end":43,"column_start":17,"column_end":30},"name":"0","qualname":"::data::Fields::Unnamed::0","value":"data::FieldsUnnamed","parent":{"krate":0,"index":2709},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2712},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\data.rs","byte_start":99481,"byte_end":99485,"line_start":46,"line_end":46,"column_start":9,"column_end":13},"name":"Unit","qualname":"::data::Fields::Unit","value":"Fields::Unit","parent":{"krate":0,"index":2705},"children":[],"decl_id":null,"docs":" Unit struct or unit variant such as `None`.\n","sig":null,"attributes":[{"value":"/ Unit struct or unit variant such as `None`.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\data.rs","byte_start":99425,"byte_end":99472,"line_start":45,"line_end":45,"column_start":9,"column_end":56}}]},{"kind":"Enum","id":{"krate":0,"index":2705},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\data.rs","byte_start":99162,"byte_end":99168,"line_start":37,"line_end":37,"column_start":14,"column_end":20},"name":"Fields","qualname":"::data::Fields","value":"enum Fields { Named(FieldsNamed), Unnamed(FieldsUnnamed), Unit, }","parent":null,"children":[{"krate":0,"index":2706},{"krate":0,"index":2709},{"krate":0,"index":2712}],"decl_id":null,"docs":" Data stored within an enum variant or struct.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2718},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\data.rs","byte_start":99809,"byte_end":99820,"line_start":57,"line_end":57,"column_start":16,"column_end":27},"name":"FieldsNamed","qualname":"::data::FieldsNamed","value":"FieldsNamed { brace_token, named }","parent":null,"children":[{"krate":0,"index":2719},{"krate":0,"index":2720}],"decl_id":null,"docs":" Named fields of a struct or struct variant such as `Point { x: f64,\n y: f64 }`.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2719},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\data.rs","byte_start":99835,"byte_end":99846,"line_start":58,"line_end":58,"column_start":13,"column_end":24},"name":"brace_token","qualname":"::data::FieldsNamed::brace_token","value":"token::Brace","parent":{"krate":0,"index":2718},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2720},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\data.rs","byte_start":99874,"byte_end":99879,"line_start":59,"line_end":59,"column_start":13,"column_end":18},"name":"named","qualname":"::data::FieldsNamed::named","value":"punctuated::Punctuated<data::Field, token::Comma>","parent":{"krate":0,"index":2718},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2721},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\data.rs","byte_start":100215,"byte_end":100228,"line_start":69,"line_end":69,"column_start":16,"column_end":29},"name":"FieldsUnnamed","qualname":"::data::FieldsUnnamed","value":"FieldsUnnamed { paren_token, unnamed }","parent":null,"children":[{"krate":0,"index":2722},{"krate":0,"index":2723}],"decl_id":null,"docs":" Unnamed fields of a tuple struct or tuple variant such as `Some(T)`.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2722},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\data.rs","byte_start":100243,"byte_end":100254,"line_start":70,"line_end":70,"column_start":13,"column_end":24},"name":"paren_token","qualname":"::data::FieldsUnnamed::paren_token","value":"token::Paren","parent":{"krate":0,"index":2721},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2723},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\data.rs","byte_start":100282,"byte_end":100289,"line_start":71,"line_end":71,"column_start":13,"column_end":20},"name":"unnamed","qualname":"::data::FieldsUnnamed::unnamed","value":"punctuated::Punctuated<data::Field, token::Comma>","parent":{"krate":0,"index":2721},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":130},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\data.rs","byte_start":100544,"byte_end":100548,"line_start":79,"line_end":79,"column_start":12,"column_end":16},"name":"iter","qualname":"<Fields>::iter","value":"fn iter(&Self) -> punctuated::Iter<, Field>","parent":null,"children":[],"decl_id":null,"docs":" Get an iterator over the borrowed [`Field`] items in this object. This\n iterator can be used to iterate over a named or unnamed struct or\n variant's fields uniformly.\n","sig":null,"attributes":[{"value":"/ Get an iterator over the borrowed [`Field`] items in this object. This","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\data.rs","byte_start":100348,"byte_end":100422,"line_start":76,"line_end":76,"column_start":5,"column_end":79}},{"value":"/ iterator can be used to iterate over a named or unnamed struct or","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\data.rs","byte_start":100427,"byte_end":100496,"line_start":77,"line_end":77,"column_start":5,"column_end":74}},{"value":"/ variant's fields uniformly.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\data.rs","byte_start":100501,"byte_end":100532,"line_start":78,"line_end":78,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":131},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\data.rs","byte_start":101003,"byte_end":101011,"line_start":90,"line_end":90,"column_start":12,"column_end":20},"name":"iter_mut","qualname":"<Fields>::iter_mut","value":"fn iter_mut(&mut Self) -> punctuated::IterMut<, Field>","parent":null,"children":[],"decl_id":null,"docs":" Get an iterator over the mutably borrowed [`Field`] items in this\n object. This iterator can be used to iterate over a named or unnamed\n struct or variant's fields uniformly.\n","sig":null,"attributes":[{"value":"/ Get an iterator over the mutably borrowed [`Field`] items in this","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\data.rs","byte_start":100799,"byte_end":100868,"line_start":87,"line_end":87,"column_start":5,"column_end":74}},{"value":"/ object. This iterator can be used to iterate over a named or unnamed","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\data.rs","byte_start":100873,"byte_end":100945,"line_start":88,"line_end":88,"column_start":5,"column_end":77}},{"value":"/ struct or variant's fields uniformly.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\data.rs","byte_start":100950,"byte_end":100991,"line_start":89,"line_end":89,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":132},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\data.rs","byte_start":101326,"byte_end":101329,"line_start":99,"line_end":99,"column_start":12,"column_end":15},"name":"len","qualname":"<Fields>::len","value":"fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of fields.\n","sig":null,"attributes":[{"value":"/ Returns the number of fields.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\data.rs","byte_start":101281,"byte_end":101314,"line_start":98,"line_end":98,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":133},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\data.rs","byte_start":101575,"byte_end":101583,"line_start":108,"line_end":108,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<Fields>::is_empty","value":"fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if there are zero fields.\n","sig":null,"attributes":[{"value":"/ Returns `true` if there are zero fields.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\data.rs","byte_start":101519,"byte_end":101563,"line_start":107,"line_end":107,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":137},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\data.rs","byte_start":101894,"byte_end":101903,"line_start":121,"line_end":121,"column_start":8,"column_end":17},"name":"into_iter","qualname":"<Fields as std::iter::IntoIterator>::into_iter","value":"fn into_iter(Self) -> Self::IntoIter","parent":{"krate":2,"index":8286},"children":[],"decl_id":{"krate":2,"index":8289},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":142},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\data.rs","byte_start":102275,"byte_end":102284,"line_start":134,"line_end":134,"column_start":8,"column_end":17},"name":"into_iter","qualname":"<&'a Fields as std::iter::IntoIterator>::into_iter","value":"fn into_iter(Self) -> Self::IntoIter","parent":{"krate":2,"index":8286},"children":[],"decl_id":{"krate":2,"index":8289},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":147},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\data.rs","byte_start":102474,"byte_end":102483,"line_start":143,"line_end":143,"column_start":8,"column_end":17},"name":"into_iter","qualname":"<&'a mut Fields as std::iter::IntoIterator>::into_iter","value":"fn into_iter(Self) -> Self::IntoIter","parent":{"krate":2,"index":8286},"children":[],"decl_id":{"krate":2,"index":8289},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2724},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\data.rs","byte_start":102806,"byte_end":102811,"line_start":154,"line_end":154,"column_start":16,"column_end":21},"name":"Field","qualname":"::data::Field","value":"Field { attrs, vis, ident, colon_token, ty }","parent":null,"children":[{"krate":0,"index":2725},{"krate":0,"index":2726},{"krate":0,"index":2727},{"krate":0,"index":2728},{"krate":0,"index":2729}],"decl_id":null,"docs":" A field of a struct or enum variant.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2725},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\data.rs","byte_start":102870,"byte_end":102875,"line_start":156,"line_end":156,"column_start":13,"column_end":18},"name":"attrs","qualname":"::data::Field::attrs","value":"std::vec::Vec<attr::Attribute>","parent":{"krate":0,"index":2724},"children":[],"decl_id":null,"docs":" Attributes tagged on the field.\n","sig":null,"attributes":[{"value":"/ Attributes tagged on the field.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\data.rs","byte_start":102822,"byte_end":102857,"line_start":155,"line_end":155,"column_start":9,"column_end":44}}]},{"kind":"Field","id":{"krate":0,"index":2726},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\data.rs","byte_start":102943,"byte_end":102946,"line_start":159,"line_end":159,"column_start":13,"column_end":16},"name":"vis","qualname":"::data::Field::vis","value":"data::Visibility","parent":{"krate":0,"index":2724},"children":[],"decl_id":null,"docs":" Visibility of the field.\n","sig":null,"attributes":[{"value":"/ Visibility of the field.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\data.rs","byte_start":102902,"byte_end":102930,"line_start":158,"line_end":158,"column_start":9,"column_end":37}}]},{"kind":"Field","id":{"krate":0,"index":2727},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\data.rs","byte_start":103075,"byte_end":103080,"line_start":164,"line_end":164,"column_start":13,"column_end":18},"name":"ident","qualname":"::data::Field::ident","value":"std::option::Option<proc_macro2::Ident>","parent":{"krate":0,"index":2724},"children":[],"decl_id":null,"docs":" Name of the field, if any.","sig":null,"attributes":[{"value":"/ Name of the field, if any.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\data.rs","byte_start":102969,"byte_end":102999,"line_start":161,"line_end":161,"column_start":9,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\data.rs","byte_start":103008,"byte_end":103011,"line_start":162,"line_end":162,"column_start":9,"column_end":12}},{"value":"/ Fields of tuple structs have no names.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\data.rs","byte_start":103020,"byte_end":103062,"line_start":163,"line_end":163,"column_start":9,"column_end":51}}]},{"kind":"Field","id":{"krate":0,"index":2728},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\data.rs","byte_start":103110,"byte_end":103121,"line_start":166,"line_end":166,"column_start":13,"column_end":24},"name":"colon_token","qualname":"::data::Field::colon_token","value":"std::option::Option<token::Colon>","parent":{"krate":0,"index":2724},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2729},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\data.rs","byte_start":103186,"byte_end":103188,"line_start":169,"line_end":169,"column_start":13,"column_end":15},"name":"ty","qualname":"::data::Field::ty","value":"ty::Type","parent":{"krate":0,"index":2724},"children":[],"decl_id":null,"docs":" Type of the field.\n","sig":null,"attributes":[{"value":"/ Type of the field.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\data.rs","byte_start":103151,"byte_end":103173,"line_start":168,"line_end":168,"column_start":9,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2731},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\data.rs","byte_start":103732,"byte_end":103738,"line_start":188,"line_end":188,"column_start":9,"column_end":15},"name":"Public","qualname":"::data::Visibility::Public","value":"Visibility::Public(VisPublic)","parent":{"krate":0,"index":2730},"children":[],"decl_id":null,"docs":" A public visibility level: `pub`.\n","sig":null,"attributes":[{"value":"/ A public visibility level: `pub`.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\data.rs","byte_start":103686,"byte_end":103723,"line_start":187,"line_end":187,"column_start":9,"column_end":46}}]},{"kind":"Field","id":{"krate":0,"index":2733},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\data.rs","byte_start":103739,"byte_end":103748,"line_start":188,"line_end":188,"column_start":16,"column_end":25},"name":"0","qualname":"::data::Visibility::Public::0","value":"data::VisPublic","parent":{"krate":0,"index":2731},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2734},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\data.rs","byte_start":103807,"byte_end":103812,"line_start":191,"line_end":191,"column_start":9,"column_end":14},"name":"Crate","qualname":"::data::Visibility::Crate","value":"Visibility::Crate(VisCrate)","parent":{"krate":0,"index":2730},"children":[],"decl_id":null,"docs":" A crate-level visibility: `crate`.\n","sig":null,"attributes":[{"value":"/ A crate-level visibility: `crate`.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\data.rs","byte_start":103760,"byte_end":103798,"line_start":190,"line_end":190,"column_start":9,"column_end":47}}]},{"kind":"Field","id":{"krate":0,"index":2736},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\data.rs","byte_start":103813,"byte_end":103821,"line_start":191,"line_end":191,"column_start":15,"column_end":23},"name":"0","qualname":"::data::Visibility::Crate::0","value":"data::VisCrate","parent":{"krate":0,"index":2734},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2737},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\data.rs","byte_start":103972,"byte_end":103982,"line_start":195,"line_end":195,"column_start":9,"column_end":19},"name":"Restricted","qualname":"::data::Visibility::Restricted","value":"Visibility::Restricted(VisRestricted)","parent":{"krate":0,"index":2730},"children":[],"decl_id":null,"docs":" A visibility level restricted to some path: `pub(self)` or\n `pub(super)` or `pub(crate)` or `pub(in some::module)`.\n","sig":null,"attributes":[{"value":"/ A visibility level restricted to some path: `pub(self)` or","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\data.rs","byte_start":103833,"byte_end":103895,"line_start":193,"line_end":193,"column_start":9,"column_end":71}},{"value":"/ `pub(super)` or `pub(crate)` or `pub(in some::module)`.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\data.rs","byte_start":103904,"byte_end":103963,"line_start":194,"line_end":194,"column_start":9,"column_end":68}}]},{"kind":"Field","id":{"krate":0,"index":2739},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\data.rs","byte_start":103983,"byte_end":103996,"line_start":195,"line_end":195,"column_start":20,"column_end":33},"name":"0","qualname":"::data::Visibility::Restricted::0","value":"data::VisRestricted","parent":{"krate":0,"index":2737},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2740},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\data.rs","byte_start":104074,"byte_end":104083,"line_start":198,"line_end":198,"column_start":9,"column_end":18},"name":"Inherited","qualname":"::data::Visibility::Inherited","value":"Visibility::Inherited","parent":{"krate":0,"index":2730},"children":[],"decl_id":null,"docs":" An inherited visibility, which usually means private.\n","sig":null,"attributes":[{"value":"/ An inherited visibility, which usually means private.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\data.rs","byte_start":104008,"byte_end":104065,"line_start":197,"line_end":197,"column_start":9,"column_end":66}}]},{"kind":"Enum","id":{"krate":0,"index":2730},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\data.rs","byte_start":103665,"byte_end":103675,"line_start":186,"line_end":186,"column_start":14,"column_end":24},"name":"Visibility","qualname":"::data::Visibility","value":"enum Visibility {\n    Public(VisPublic),\n    Crate(VisCrate),\n    Restricted(VisRestricted),\n    Inherited,\n}","parent":null,"children":[{"krate":0,"index":2731},{"krate":0,"index":2734},{"krate":0,"index":2737},{"krate":0,"index":2740}],"decl_id":null,"docs":" The visibility level of an item: inherited or `pub` or\n `pub(restricted)`.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2748},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\data.rs","byte_start":104354,"byte_end":104363,"line_start":208,"line_end":208,"column_start":16,"column_end":25},"name":"VisPublic","qualname":"::data::VisPublic","value":"VisPublic { pub_token }","parent":null,"children":[{"krate":0,"index":2749}],"decl_id":null,"docs":" A public visibility level: `pub`.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2749},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\data.rs","byte_start":104378,"byte_end":104387,"line_start":209,"line_end":209,"column_start":13,"column_end":22},"name":"pub_token","qualname":"::data::VisPublic::pub_token","value":"token::Pub","parent":{"krate":0,"index":2748},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2750},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\data.rs","byte_start":104672,"byte_end":104680,"line_start":219,"line_end":219,"column_start":16,"column_end":24},"name":"VisCrate","qualname":"::data::VisCrate","value":"VisCrate { crate_token }","parent":null,"children":[{"krate":0,"index":2751}],"decl_id":null,"docs":" A crate-level visibility: `crate`.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2751},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\data.rs","byte_start":104695,"byte_end":104706,"line_start":220,"line_end":220,"column_start":13,"column_end":24},"name":"crate_token","qualname":"::data::VisCrate::crate_token","value":"token::Crate","parent":{"krate":0,"index":2750},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2752},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\data.rs","byte_start":105081,"byte_end":105094,"line_start":231,"line_end":231,"column_start":16,"column_end":29},"name":"VisRestricted","qualname":"::data::VisRestricted","value":"VisRestricted { pub_token, paren_token, in_token, path }","parent":null,"children":[{"krate":0,"index":2753},{"krate":0,"index":2754},{"krate":0,"index":2755},{"krate":0,"index":2756}],"decl_id":null,"docs":" A visibility level restricted to some path: `pub(self)` or\n `pub(super)` or `pub(crate)` or `pub(in some::module)`.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2753},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\data.rs","byte_start":105109,"byte_end":105118,"line_start":232,"line_end":232,"column_start":13,"column_end":22},"name":"pub_token","qualname":"::data::VisRestricted::pub_token","value":"token::Pub","parent":{"krate":0,"index":2752},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2754},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\data.rs","byte_start":105145,"byte_end":105156,"line_start":233,"line_end":233,"column_start":13,"column_end":24},"name":"paren_token","qualname":"::data::VisRestricted::paren_token","value":"token::Paren","parent":{"krate":0,"index":2752},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2755},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\data.rs","byte_start":105184,"byte_end":105192,"line_start":234,"line_end":234,"column_start":13,"column_end":21},"name":"in_token","qualname":"::data::VisRestricted::in_token","value":"std::option::Option<token::In>","parent":{"krate":0,"index":2752},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2756},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\data.rs","byte_start":105226,"byte_end":105230,"line_start":235,"line_end":235,"column_start":13,"column_end":17},"name":"path","qualname":"::data::VisRestricted::path","value":"std::boxed::Box<path::Path>","parent":{"krate":0,"index":2752},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2758},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":117235,"byte_end":117240,"line_start":93,"line_end":93,"column_start":9,"column_end":14},"name":"Array","qualname":"::expr::Expr::Array","value":"Expr::Array(ExprArray)","parent":{"krate":0,"index":2757},"children":[],"decl_id":null,"docs":" A slice literal expression: `[a, b, c, d]`.\n","sig":null,"attributes":[{"value":"/ A slice literal expression: `[a, b, c, d]`.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":117179,"byte_end":117226,"line_start":92,"line_end":92,"column_start":9,"column_end":56}}]},{"kind":"Field","id":{"krate":0,"index":2760},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":117241,"byte_end":117250,"line_start":93,"line_end":93,"column_start":15,"column_end":24},"name":"0","qualname":"::expr::Expr::Array::0","value":"expr::ExprArray","parent":{"krate":0,"index":2758},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2761},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":117317,"byte_end":117323,"line_start":96,"line_end":96,"column_start":9,"column_end":15},"name":"Assign","qualname":"::expr::Expr::Assign","value":"Expr::Assign(ExprAssign)","parent":{"krate":0,"index":2757},"children":[],"decl_id":null,"docs":" An assignment expression: `a = compute()`.\n","sig":null,"attributes":[{"value":"/ An assignment expression: `a = compute()`.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":117262,"byte_end":117308,"line_start":95,"line_end":95,"column_start":9,"column_end":55}}]},{"kind":"Field","id":{"krate":0,"index":2763},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":117324,"byte_end":117334,"line_start":96,"line_end":96,"column_start":16,"column_end":26},"name":"0","qualname":"::expr::Expr::Assign::0","value":"expr::ExprAssign","parent":{"krate":0,"index":2761},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2764},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":117408,"byte_end":117416,"line_start":99,"line_end":99,"column_start":9,"column_end":17},"name":"AssignOp","qualname":"::expr::Expr::AssignOp","value":"Expr::AssignOp(ExprAssignOp)","parent":{"krate":0,"index":2757},"children":[],"decl_id":null,"docs":" A compound assignment expression: `counter += 1`.\n","sig":null,"attributes":[{"value":"/ A compound assignment expression: `counter += 1`.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":117346,"byte_end":117399,"line_start":98,"line_end":98,"column_start":9,"column_end":62}}]},{"kind":"Field","id":{"krate":0,"index":2766},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":117417,"byte_end":117429,"line_start":99,"line_end":99,"column_start":18,"column_end":30},"name":"0","qualname":"::expr::Expr::AssignOp::0","value":"expr::ExprAssignOp","parent":{"krate":0,"index":2764},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2767},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":117486,"byte_end":117491,"line_start":102,"line_end":102,"column_start":9,"column_end":14},"name":"Async","qualname":"::expr::Expr::Async","value":"Expr::Async(ExprAsync)","parent":{"krate":0,"index":2757},"children":[],"decl_id":null,"docs":" An async block: `async { ... }`.\n","sig":null,"attributes":[{"value":"/ An async block: `async { ... }`.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":117441,"byte_end":117477,"line_start":101,"line_end":101,"column_start":9,"column_end":45}}]},{"kind":"Field","id":{"krate":0,"index":2769},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":117492,"byte_end":117501,"line_start":102,"line_end":102,"column_start":15,"column_end":24},"name":"0","qualname":"::expr::Expr::Async::0","value":"expr::ExprAsync","parent":{"krate":0,"index":2767},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2770},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":117559,"byte_end":117564,"line_start":105,"line_end":105,"column_start":9,"column_end":14},"name":"Await","qualname":"::expr::Expr::Await","value":"Expr::Await(ExprAwait)","parent":{"krate":0,"index":2757},"children":[],"decl_id":null,"docs":" An await expression: `fut.await`.\n","sig":null,"attributes":[{"value":"/ An await expression: `fut.await`.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":117513,"byte_end":117550,"line_start":104,"line_end":104,"column_start":9,"column_end":46}}]},{"kind":"Field","id":{"krate":0,"index":2772},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":117565,"byte_end":117574,"line_start":105,"line_end":105,"column_start":15,"column_end":24},"name":"0","qualname":"::expr::Expr::Await::0","value":"expr::ExprAwait","parent":{"krate":0,"index":2770},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2773},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":117636,"byte_end":117642,"line_start":108,"line_end":108,"column_start":9,"column_end":15},"name":"Binary","qualname":"::expr::Expr::Binary","value":"Expr::Binary(ExprBinary)","parent":{"krate":0,"index":2757},"children":[],"decl_id":null,"docs":" A binary operation: `a + b`, `a * b`.\n","sig":null,"attributes":[{"value":"/ A binary operation: `a + b`, `a * b`.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":117586,"byte_end":117627,"line_start":107,"line_end":107,"column_start":9,"column_end":50}}]},{"kind":"Field","id":{"krate":0,"index":2775},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":117643,"byte_end":117653,"line_start":108,"line_end":108,"column_start":16,"column_end":26},"name":"0","qualname":"::expr::Expr::Binary::0","value":"expr::ExprBinary","parent":{"krate":0,"index":2773},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2776},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":117705,"byte_end":117710,"line_start":111,"line_end":111,"column_start":9,"column_end":14},"name":"Block","qualname":"::expr::Expr::Block","value":"Expr::Block(ExprBlock)","parent":{"krate":0,"index":2757},"children":[],"decl_id":null,"docs":" A blocked scope: `{ ... }`.\n","sig":null,"attributes":[{"value":"/ A blocked scope: `{ ... }`.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":117665,"byte_end":117696,"line_start":110,"line_end":110,"column_start":9,"column_end":40}}]},{"kind":"Field","id":{"krate":0,"index":2778},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":117711,"byte_end":117720,"line_start":111,"line_end":111,"column_start":15,"column_end":24},"name":"0","qualname":"::expr::Expr::Block::0","value":"expr::ExprBlock","parent":{"krate":0,"index":2776},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2779},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":117771,"byte_end":117774,"line_start":114,"line_end":114,"column_start":9,"column_end":12},"name":"Box","qualname":"::expr::Expr::Box","value":"Expr::Box(ExprBox)","parent":{"krate":0,"index":2757},"children":[],"decl_id":null,"docs":" A box expression: `box f`.\n","sig":null,"attributes":[{"value":"/ A box expression: `box f`.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":117732,"byte_end":117762,"line_start":113,"line_end":113,"column_start":9,"column_end":39}}]},{"kind":"Field","id":{"krate":0,"index":2781},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":117775,"byte_end":117782,"line_start":114,"line_end":114,"column_start":13,"column_end":20},"name":"0","qualname":"::expr::Expr::Box::0","value":"expr::ExprBox","parent":{"krate":0,"index":2779},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2782},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":117889,"byte_end":117894,"line_start":118,"line_end":118,"column_start":9,"column_end":14},"name":"Break","qualname":"::expr::Expr::Break","value":"Expr::Break(ExprBreak)","parent":{"krate":0,"index":2757},"children":[],"decl_id":null,"docs":" A `break`, with an optional label to break and an optional\n expression.\n","sig":null,"attributes":[{"value":"/ A `break`, with an optional label to break and an optional","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":117794,"byte_end":117856,"line_start":116,"line_end":116,"column_start":9,"column_end":71}},{"value":"/ expression.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":117865,"byte_end":117880,"line_start":117,"line_end":117,"column_start":9,"column_end":24}}]},{"kind":"Field","id":{"krate":0,"index":2784},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":117895,"byte_end":117904,"line_start":118,"line_end":118,"column_start":15,"column_end":24},"name":"0","qualname":"::expr::Expr::Break::0","value":"expr::ExprBreak","parent":{"krate":0,"index":2782},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2785},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":117972,"byte_end":117976,"line_start":121,"line_end":121,"column_start":9,"column_end":13},"name":"Call","qualname":"::expr::Expr::Call","value":"Expr::Call(ExprCall)","parent":{"krate":0,"index":2757},"children":[],"decl_id":null,"docs":" A function call expression: `invoke(a, b)`.\n","sig":null,"attributes":[{"value":"/ A function call expression: `invoke(a, b)`.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":117916,"byte_end":117963,"line_start":120,"line_end":120,"column_start":9,"column_end":56}}]},{"kind":"Field","id":{"krate":0,"index":2787},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":117977,"byte_end":117985,"line_start":121,"line_end":121,"column_start":14,"column_end":22},"name":"0","qualname":"::expr::Expr::Call::0","value":"expr::ExprCall","parent":{"krate":0,"index":2785},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2788},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":118042,"byte_end":118046,"line_start":124,"line_end":124,"column_start":9,"column_end":13},"name":"Cast","qualname":"::expr::Expr::Cast","value":"Expr::Cast(ExprCast)","parent":{"krate":0,"index":2757},"children":[],"decl_id":null,"docs":" A cast expression: `foo as f64`.\n","sig":null,"attributes":[{"value":"/ A cast expression: `foo as f64`.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":117997,"byte_end":118033,"line_start":123,"line_end":123,"column_start":9,"column_end":45}}]},{"kind":"Field","id":{"krate":0,"index":2790},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":118047,"byte_end":118055,"line_start":124,"line_end":124,"column_start":14,"column_end":22},"name":"0","qualname":"::expr::Expr::Cast::0","value":"expr::ExprCast","parent":{"krate":0,"index":2788},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2791},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":118117,"byte_end":118124,"line_start":127,"line_end":127,"column_start":9,"column_end":16},"name":"Closure","qualname":"::expr::Expr::Closure","value":"Expr::Closure(ExprClosure)","parent":{"krate":0,"index":2757},"children":[],"decl_id":null,"docs":" A closure expression: `|a, b| a + b`.\n","sig":null,"attributes":[{"value":"/ A closure expression: `|a, b| a + b`.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":118067,"byte_end":118108,"line_start":126,"line_end":126,"column_start":9,"column_end":50}}]},{"kind":"Field","id":{"krate":0,"index":2793},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":118125,"byte_end":118136,"line_start":127,"line_end":127,"column_start":17,"column_end":28},"name":"0","qualname":"::expr::Expr::Closure::0","value":"expr::ExprClosure","parent":{"krate":0,"index":2791},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2794},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":118198,"byte_end":118206,"line_start":130,"line_end":130,"column_start":9,"column_end":17},"name":"Continue","qualname":"::expr::Expr::Continue","value":"Expr::Continue(ExprContinue)","parent":{"krate":0,"index":2757},"children":[],"decl_id":null,"docs":" A `continue`, with an optional label.\n","sig":null,"attributes":[{"value":"/ A `continue`, with an optional label.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":118148,"byte_end":118189,"line_start":129,"line_end":129,"column_start":9,"column_end":50}}]},{"kind":"Field","id":{"krate":0,"index":2796},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":118207,"byte_end":118219,"line_start":130,"line_end":130,"column_start":18,"column_end":30},"name":"0","qualname":"::expr::Expr::Continue::0","value":"expr::ExprContinue","parent":{"krate":0,"index":2794},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2797},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":118337,"byte_end":118342,"line_start":134,"line_end":134,"column_start":9,"column_end":14},"name":"Field","qualname":"::expr::Expr::Field","value":"Expr::Field(ExprField)","parent":{"krate":0,"index":2757},"children":[],"decl_id":null,"docs":" Access of a named struct field (`obj.k`) or unnamed tuple struct\n field (`obj.0`).\n","sig":null,"attributes":[{"value":"/ Access of a named struct field (`obj.k`) or unnamed tuple struct","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":118231,"byte_end":118299,"line_start":132,"line_end":132,"column_start":9,"column_end":77}},{"value":"/ field (`obj.0`).","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":118308,"byte_end":118328,"line_start":133,"line_end":133,"column_start":9,"column_end":29}}]},{"kind":"Field","id":{"krate":0,"index":2799},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":118343,"byte_end":118352,"line_start":134,"line_end":134,"column_start":15,"column_end":24},"name":"0","qualname":"::expr::Expr::Field::0","value":"expr::ExprField","parent":{"krate":0,"index":2797},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2800},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":118415,"byte_end":118422,"line_start":137,"line_end":137,"column_start":9,"column_end":16},"name":"ForLoop","qualname":"::expr::Expr::ForLoop","value":"Expr::ForLoop(ExprForLoop)","parent":{"krate":0,"index":2757},"children":[],"decl_id":null,"docs":" A for loop: `for pat in expr { ... }`.\n","sig":null,"attributes":[{"value":"/ A for loop: `for pat in expr { ... }`.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":118364,"byte_end":118406,"line_start":136,"line_end":136,"column_start":9,"column_end":51}}]},{"kind":"Field","id":{"krate":0,"index":2802},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":118423,"byte_end":118434,"line_start":137,"line_end":137,"column_start":17,"column_end":28},"name":"0","qualname":"::expr::Expr::ForLoop::0","value":"expr::ExprForLoop","parent":{"krate":0,"index":2800},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2803},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":118704,"byte_end":118709,"line_start":144,"line_end":144,"column_start":9,"column_end":14},"name":"Group","qualname":"::expr::Expr::Group","value":"Expr::Group(ExprGroup)","parent":{"krate":0,"index":2757},"children":[],"decl_id":null,"docs":" An expression contained within invisible delimiters.","sig":null,"attributes":[{"value":"/ An expression contained within invisible delimiters.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":118446,"byte_end":118502,"line_start":139,"line_end":139,"column_start":9,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":118511,"byte_end":118514,"line_start":140,"line_end":140,"column_start":9,"column_end":12}},{"value":"/ This variant is important for faithfully representing the precedence","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":118523,"byte_end":118595,"line_start":141,"line_end":141,"column_start":9,"column_end":81}},{"value":"/ of expressions and is related to `None`-delimited spans in a","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":118604,"byte_end":118668,"line_start":142,"line_end":142,"column_start":9,"column_end":73}},{"value":"/ `TokenStream`.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":118677,"byte_end":118695,"line_start":143,"line_end":143,"column_start":9,"column_end":27}}]},{"kind":"Field","id":{"krate":0,"index":2805},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":118710,"byte_end":118719,"line_start":144,"line_end":144,"column_start":15,"column_end":24},"name":"0","qualname":"::expr::Expr::Group::0","value":"expr::ExprGroup","parent":{"krate":0,"index":2803},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2806},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":118987,"byte_end":118989,"line_start":151,"line_end":151,"column_start":9,"column_end":11},"name":"If","qualname":"::expr::Expr::If","value":"Expr::If(ExprIf)","parent":{"krate":0,"index":2757},"children":[],"decl_id":null,"docs":" An `if` expression with an optional `else` block: `if expr { ... }\n else { ... }`.","sig":null,"attributes":[{"value":"/ An `if` expression with an optional `else` block: `if expr { ... }","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":118731,"byte_end":118801,"line_start":146,"line_end":146,"column_start":9,"column_end":79}},{"value":"/ else { ... }`.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":118810,"byte_end":118828,"line_start":147,"line_end":147,"column_start":9,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":118837,"byte_end":118840,"line_start":148,"line_end":148,"column_start":9,"column_end":12}},{"value":"/ The `else` branch expression may only be an `If` or `Block`","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":118849,"byte_end":118912,"line_start":149,"line_end":149,"column_start":9,"column_end":72}},{"value":"/ expression, not any of the other types of expression.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":118921,"byte_end":118978,"line_start":150,"line_end":150,"column_start":9,"column_end":66}}]},{"kind":"Field","id":{"krate":0,"index":2808},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":118990,"byte_end":118996,"line_start":151,"line_end":151,"column_start":12,"column_end":18},"name":"0","qualname":"::expr::Expr::If::0","value":"expr::ExprIf","parent":{"krate":0,"index":2806},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2809},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":119073,"byte_end":119078,"line_start":154,"line_end":154,"column_start":9,"column_end":14},"name":"Index","qualname":"::expr::Expr::Index","value":"Expr::Index(ExprIndex)","parent":{"krate":0,"index":2757},"children":[],"decl_id":null,"docs":" A square bracketed indexing expression: `vector[2]`.\n","sig":null,"attributes":[{"value":"/ A square bracketed indexing expression: `vector[2]`.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":119008,"byte_end":119064,"line_start":153,"line_end":153,"column_start":9,"column_end":65}}]},{"kind":"Field","id":{"krate":0,"index":2811},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":119079,"byte_end":119088,"line_start":154,"line_end":154,"column_start":15,"column_end":24},"name":"0","qualname":"::expr::Expr::Index::0","value":"expr::ExprIndex","parent":{"krate":0,"index":2809},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2812},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":119148,"byte_end":119151,"line_start":157,"line_end":157,"column_start":9,"column_end":12},"name":"Let","qualname":"::expr::Expr::Let","value":"Expr::Let(ExprLet)","parent":{"krate":0,"index":2757},"children":[],"decl_id":null,"docs":" A `let` guard: `let Some(x) = opt`.\n","sig":null,"attributes":[{"value":"/ A `let` guard: `let Some(x) = opt`.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":119100,"byte_end":119139,"line_start":156,"line_end":156,"column_start":9,"column_end":48}}]},{"kind":"Field","id":{"krate":0,"index":2814},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":119152,"byte_end":119159,"line_start":157,"line_end":157,"column_start":13,"column_end":20},"name":"0","qualname":"::expr::Expr::Let::0","value":"expr::ExprLet","parent":{"krate":0,"index":2812},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2815},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":119234,"byte_end":119237,"line_start":160,"line_end":160,"column_start":9,"column_end":12},"name":"Lit","qualname":"::expr::Expr::Lit","value":"Expr::Lit(ExprLit)","parent":{"krate":0,"index":2757},"children":[],"decl_id":null,"docs":" A literal in place of an expression: `1`, `\"foo\"`.\n","sig":null,"attributes":[{"value":"/ A literal in place of an expression: `1`, `\"foo\"`.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":119171,"byte_end":119225,"line_start":159,"line_end":159,"column_start":9,"column_end":63}}]},{"kind":"Field","id":{"krate":0,"index":2817},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":119238,"byte_end":119245,"line_start":160,"line_end":160,"column_start":13,"column_end":20},"name":"0","qualname":"::expr::Expr::Lit::0","value":"expr::ExprLit","parent":{"krate":0,"index":2815},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2818},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":119305,"byte_end":119309,"line_start":163,"line_end":163,"column_start":9,"column_end":13},"name":"Loop","qualname":"::expr::Expr::Loop","value":"Expr::Loop(ExprLoop)","parent":{"krate":0,"index":2757},"children":[],"decl_id":null,"docs":" Conditionless loop: `loop { ... }`.\n","sig":null,"attributes":[{"value":"/ Conditionless loop: `loop { ... }`.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":119257,"byte_end":119296,"line_start":162,"line_end":162,"column_start":9,"column_end":48}}]},{"kind":"Field","id":{"krate":0,"index":2820},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":119310,"byte_end":119318,"line_start":163,"line_end":163,"column_start":14,"column_end":22},"name":"0","qualname":"::expr::Expr::Loop::0","value":"expr::ExprLoop","parent":{"krate":0,"index":2818},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2821},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":119393,"byte_end":119398,"line_start":166,"line_end":166,"column_start":9,"column_end":14},"name":"Macro","qualname":"::expr::Expr::Macro","value":"Expr::Macro(ExprMacro)","parent":{"krate":0,"index":2757},"children":[],"decl_id":null,"docs":" A macro invocation expression: `format!(\"{}\", q)`.\n","sig":null,"attributes":[{"value":"/ A macro invocation expression: `format!(\"{}\", q)`.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":119330,"byte_end":119384,"line_start":165,"line_end":165,"column_start":9,"column_end":63}}]},{"kind":"Field","id":{"krate":0,"index":2823},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":119399,"byte_end":119408,"line_start":166,"line_end":166,"column_start":15,"column_end":24},"name":"0","qualname":"::expr::Expr::Macro::0","value":"expr::ExprMacro","parent":{"krate":0,"index":2821},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2824},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":119495,"byte_end":119500,"line_start":169,"line_end":169,"column_start":9,"column_end":14},"name":"Match","qualname":"::expr::Expr::Match","value":"Expr::Match(ExprMatch)","parent":{"krate":0,"index":2757},"children":[],"decl_id":null,"docs":" A `match` expression: `match n { Some(n) => {}, None => {} }`.\n","sig":null,"attributes":[{"value":"/ A `match` expression: `match n { Some(n) => {}, None => {} }`.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":119420,"byte_end":119486,"line_start":168,"line_end":168,"column_start":9,"column_end":75}}]},{"kind":"Field","id":{"krate":0,"index":2826},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":119501,"byte_end":119510,"line_start":169,"line_end":169,"column_start":15,"column_end":24},"name":"0","qualname":"::expr::Expr::Match::0","value":"expr::ExprMatch","parent":{"krate":0,"index":2824},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2827},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":119580,"byte_end":119590,"line_start":172,"line_end":172,"column_start":9,"column_end":19},"name":"MethodCall","qualname":"::expr::Expr::MethodCall","value":"Expr::MethodCall(ExprMethodCall)","parent":{"krate":0,"index":2757},"children":[],"decl_id":null,"docs":" A method call expression: `x.foo::<T>(a, b)`.\n","sig":null,"attributes":[{"value":"/ A method call expression: `x.foo::<T>(a, b)`.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":119522,"byte_end":119571,"line_start":171,"line_end":171,"column_start":9,"column_end":58}}]},{"kind":"Field","id":{"krate":0,"index":2829},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":119591,"byte_end":119605,"line_start":172,"line_end":172,"column_start":20,"column_end":34},"name":"0","qualname":"::expr::Expr::MethodCall::0","value":"expr::ExprMethodCall","parent":{"krate":0,"index":2827},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2830},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":119668,"byte_end":119673,"line_start":175,"line_end":175,"column_start":9,"column_end":14},"name":"Paren","qualname":"::expr::Expr::Paren","value":"Expr::Paren(ExprParen)","parent":{"krate":0,"index":2757},"children":[],"decl_id":null,"docs":" A parenthesized expression: `(a + b)`.\n","sig":null,"attributes":[{"value":"/ A parenthesized expression: `(a + b)`.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":119617,"byte_end":119659,"line_start":174,"line_end":174,"column_start":9,"column_end":51}}]},{"kind":"Field","id":{"krate":0,"index":2832},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":119674,"byte_end":119683,"line_start":175,"line_end":175,"column_start":15,"column_end":24},"name":"0","qualname":"::expr::Expr::Paren::0","value":"expr::ExprParen","parent":{"krate":0,"index":2830},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2833},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":119892,"byte_end":119896,"line_start":181,"line_end":181,"column_start":9,"column_end":13},"name":"Path","qualname":"::expr::Expr::Path","value":"Expr::Path(ExprPath)","parent":{"krate":0,"index":2757},"children":[],"decl_id":null,"docs":" A path like `std::mem::replace` possibly containing generic\n parameters and a qualified self-type.","sig":null,"attributes":[{"value":"/ A path like `std::mem::replace` possibly containing generic","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":119695,"byte_end":119758,"line_start":177,"line_end":177,"column_start":9,"column_end":72}},{"value":"/ parameters and a qualified self-type.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":119767,"byte_end":119808,"line_start":178,"line_end":178,"column_start":9,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":119817,"byte_end":119820,"line_start":179,"line_end":179,"column_start":9,"column_end":12}},{"value":"/ A plain identifier like `x` is a path of length 1.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":119829,"byte_end":119883,"line_start":180,"line_end":180,"column_start":9,"column_end":63}}]},{"kind":"Field","id":{"krate":0,"index":2835},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":119897,"byte_end":119905,"line_start":181,"line_end":181,"column_start":14,"column_end":22},"name":"0","qualname":"::expr::Expr::Path::0","value":"expr::ExprPath","parent":{"krate":0,"index":2833},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2836},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":119988,"byte_end":119993,"line_start":184,"line_end":184,"column_start":9,"column_end":14},"name":"Range","qualname":"::expr::Expr::Range","value":"Expr::Range(ExprRange)","parent":{"krate":0,"index":2757},"children":[],"decl_id":null,"docs":" A range expression: `1..2`, `1..`, `..2`, `1..=2`, `..=2`.\n","sig":null,"attributes":[{"value":"/ A range expression: `1..2`, `1..`, `..2`, `1..=2`, `..=2`.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":119917,"byte_end":119979,"line_start":183,"line_end":183,"column_start":9,"column_end":71}}]},{"kind":"Field","id":{"krate":0,"index":2838},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":119994,"byte_end":120003,"line_start":184,"line_end":184,"column_start":15,"column_end":24},"name":"0","qualname":"::expr::Expr::Range::0","value":"expr::ExprRange","parent":{"krate":0,"index":2836},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2839},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":120070,"byte_end":120079,"line_start":187,"line_end":187,"column_start":9,"column_end":18},"name":"Reference","qualname":"::expr::Expr::Reference","value":"Expr::Reference(ExprReference)","parent":{"krate":0,"index":2757},"children":[],"decl_id":null,"docs":" A referencing operation: `&a` or `&mut a`.\n","sig":null,"attributes":[{"value":"/ A referencing operation: `&a` or `&mut a`.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":120015,"byte_end":120061,"line_start":186,"line_end":186,"column_start":9,"column_end":55}}]},{"kind":"Field","id":{"krate":0,"index":2841},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":120080,"byte_end":120093,"line_start":187,"line_end":187,"column_start":19,"column_end":32},"name":"0","qualname":"::expr::Expr::Reference::0","value":"expr::ExprReference","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2842},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":120185,"byte_end":120191,"line_start":190,"line_end":190,"column_start":9,"column_end":15},"name":"Repeat","qualname":"::expr::Expr::Repeat","value":"Expr::Repeat(ExprRepeat)","parent":{"krate":0,"index":2757},"children":[],"decl_id":null,"docs":" An array literal constructed from one repeated element: `[0u8; N]`.\n","sig":null,"attributes":[{"value":"/ An array literal constructed from one repeated element: `[0u8; N]`.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":120105,"byte_end":120176,"line_start":189,"line_end":189,"column_start":9,"column_end":80}}]},{"kind":"Field","id":{"krate":0,"index":2844},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":120192,"byte_end":120202,"line_start":190,"line_end":190,"column_start":16,"column_end":26},"name":"0","qualname":"::expr::Expr::Repeat::0","value":"expr::ExprRepeat","parent":{"krate":0,"index":2842},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2845},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":120277,"byte_end":120283,"line_start":193,"line_end":193,"column_start":9,"column_end":15},"name":"Return","qualname":"::expr::Expr::Return","value":"Expr::Return(ExprReturn)","parent":{"krate":0,"index":2757},"children":[],"decl_id":null,"docs":" A `return`, with an optional value to be returned.\n","sig":null,"attributes":[{"value":"/ A `return`, with an optional value to be returned.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":120214,"byte_end":120268,"line_start":192,"line_end":192,"column_start":9,"column_end":63}}]},{"kind":"Field","id":{"krate":0,"index":2847},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":120284,"byte_end":120294,"line_start":193,"line_end":193,"column_start":16,"column_end":26},"name":"0","qualname":"::expr::Expr::Return::0","value":"expr::ExprReturn","parent":{"krate":0,"index":2845},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2848},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":120495,"byte_end":120501,"line_start":199,"line_end":199,"column_start":9,"column_end":15},"name":"Struct","qualname":"::expr::Expr::Struct","value":"Expr::Struct(ExprStruct)","parent":{"krate":0,"index":2757},"children":[],"decl_id":null,"docs":" A struct literal expression: `Point { x: 1, y: 1 }`.","sig":null,"attributes":[{"value":"/ A struct literal expression: `Point { x: 1, y: 1 }`.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":120306,"byte_end":120362,"line_start":195,"line_end":195,"column_start":9,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":120371,"byte_end":120374,"line_start":196,"line_end":196,"column_start":9,"column_end":12}},{"value":"/ The `rest` provides the value of the remaining fields as in `S { a:","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":120383,"byte_end":120454,"line_start":197,"line_end":197,"column_start":9,"column_end":80}},{"value":"/ 1, b: 1, ..rest }`.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":120463,"byte_end":120486,"line_start":198,"line_end":198,"column_start":9,"column_end":32}}]},{"kind":"Field","id":{"krate":0,"index":2850},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":120502,"byte_end":120512,"line_start":199,"line_end":199,"column_start":16,"column_end":26},"name":"0","qualname":"::expr::Expr::Struct::0","value":"expr::ExprStruct","parent":{"krate":0,"index":2848},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2851},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":120563,"byte_end":120566,"line_start":202,"line_end":202,"column_start":9,"column_end":12},"name":"Try","qualname":"::expr::Expr::Try","value":"Expr::Try(ExprTry)","parent":{"krate":0,"index":2757},"children":[],"decl_id":null,"docs":" A try-expression: `expr?`.\n","sig":null,"attributes":[{"value":"/ A try-expression: `expr?`.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":120524,"byte_end":120554,"line_start":201,"line_end":201,"column_start":9,"column_end":39}}]},{"kind":"Field","id":{"krate":0,"index":2853},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":120567,"byte_end":120574,"line_start":202,"line_end":202,"column_start":13,"column_end":20},"name":"0","qualname":"::expr::Expr::Try::0","value":"expr::ExprTry","parent":{"krate":0,"index":2851},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2854},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":120626,"byte_end":120634,"line_start":205,"line_end":205,"column_start":9,"column_end":17},"name":"TryBlock","qualname":"::expr::Expr::TryBlock","value":"Expr::TryBlock(ExprTryBlock)","parent":{"krate":0,"index":2757},"children":[],"decl_id":null,"docs":" A try block: `try { ... }`.\n","sig":null,"attributes":[{"value":"/ A try block: `try { ... }`.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":120586,"byte_end":120617,"line_start":204,"line_end":204,"column_start":9,"column_end":40}}]},{"kind":"Field","id":{"krate":0,"index":2856},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":120635,"byte_end":120647,"line_start":205,"line_end":205,"column_start":18,"column_end":30},"name":"0","qualname":"::expr::Expr::TryBlock::0","value":"expr::ExprTryBlock","parent":{"krate":0,"index":2854},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2857},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":120707,"byte_end":120712,"line_start":208,"line_end":208,"column_start":9,"column_end":14},"name":"Tuple","qualname":"::expr::Expr::Tuple","value":"Expr::Tuple(ExprTuple)","parent":{"krate":0,"index":2757},"children":[],"decl_id":null,"docs":" A tuple expression: `(a, b, c, d)`.\n","sig":null,"attributes":[{"value":"/ A tuple expression: `(a, b, c, d)`.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":120659,"byte_end":120698,"line_start":207,"line_end":207,"column_start":9,"column_end":48}}]},{"kind":"Field","id":{"krate":0,"index":2859},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":120713,"byte_end":120722,"line_start":208,"line_end":208,"column_start":15,"column_end":24},"name":"0","qualname":"::expr::Expr::Tuple::0","value":"expr::ExprTuple","parent":{"krate":0,"index":2857},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2860},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":120788,"byte_end":120792,"line_start":211,"line_end":211,"column_start":9,"column_end":13},"name":"Type","qualname":"::expr::Expr::Type","value":"Expr::Type(ExprType)","parent":{"krate":0,"index":2757},"children":[],"decl_id":null,"docs":" A type ascription expression: `foo: f64`.\n","sig":null,"attributes":[{"value":"/ A type ascription expression: `foo: f64`.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":120734,"byte_end":120779,"line_start":210,"line_end":210,"column_start":9,"column_end":54}}]},{"kind":"Field","id":{"krate":0,"index":2862},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":120793,"byte_end":120801,"line_start":211,"line_end":211,"column_start":14,"column_end":22},"name":"0","qualname":"::expr::Expr::Type::0","value":"expr::ExprType","parent":{"krate":0,"index":2860},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2863},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":120856,"byte_end":120861,"line_start":214,"line_end":214,"column_start":9,"column_end":14},"name":"Unary","qualname":"::expr::Expr::Unary","value":"Expr::Unary(ExprUnary)","parent":{"krate":0,"index":2757},"children":[],"decl_id":null,"docs":" A unary operation: `!x`, `*x`.\n","sig":null,"attributes":[{"value":"/ A unary operation: `!x`, `*x`.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":120813,"byte_end":120847,"line_start":213,"line_end":213,"column_start":9,"column_end":43}}]},{"kind":"Field","id":{"krate":0,"index":2865},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":120862,"byte_end":120871,"line_start":214,"line_end":214,"column_start":15,"column_end":24},"name":"0","qualname":"::expr::Expr::Unary::0","value":"expr::ExprUnary","parent":{"krate":0,"index":2863},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2866},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":120930,"byte_end":120936,"line_start":217,"line_end":217,"column_start":9,"column_end":15},"name":"Unsafe","qualname":"::expr::Expr::Unsafe","value":"Expr::Unsafe(ExprUnsafe)","parent":{"krate":0,"index":2757},"children":[],"decl_id":null,"docs":" An unsafe block: `unsafe { ... }`.\n","sig":null,"attributes":[{"value":"/ An unsafe block: `unsafe { ... }`.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":120883,"byte_end":120921,"line_start":216,"line_end":216,"column_start":9,"column_end":47}}]},{"kind":"Field","id":{"krate":0,"index":2868},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":120937,"byte_end":120947,"line_start":217,"line_end":217,"column_start":16,"column_end":26},"name":"0","qualname":"::expr::Expr::Unsafe::0","value":"expr::ExprUnsafe","parent":{"krate":0,"index":2866},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2869},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":121025,"byte_end":121033,"line_start":220,"line_end":220,"column_start":9,"column_end":17},"name":"Verbatim","qualname":"::expr::Expr::Verbatim","value":"Expr::Verbatim(TokenStream)","parent":{"krate":0,"index":2757},"children":[],"decl_id":null,"docs":" Tokens in expression position not interpreted by Syn.\n","sig":null,"attributes":[{"value":"/ Tokens in expression position not interpreted by Syn.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":120959,"byte_end":121016,"line_start":219,"line_end":219,"column_start":9,"column_end":66}}]},{"kind":"Field","id":{"krate":0,"index":2871},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":121034,"byte_end":121045,"line_start":220,"line_end":220,"column_start":18,"column_end":29},"name":"0","qualname":"::expr::Expr::Verbatim::0","value":"proc_macro2::TokenStream","parent":{"krate":0,"index":2869},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2872},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":121105,"byte_end":121110,"line_start":223,"line_end":223,"column_start":9,"column_end":14},"name":"While","qualname":"::expr::Expr::While","value":"Expr::While(ExprWhile)","parent":{"krate":0,"index":2757},"children":[],"decl_id":null,"docs":" A while loop: `while expr { ... }`.\n","sig":null,"attributes":[{"value":"/ A while loop: `while expr { ... }`.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":121057,"byte_end":121096,"line_start":222,"line_end":222,"column_start":9,"column_end":48}}]},{"kind":"Field","id":{"krate":0,"index":2874},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":121111,"byte_end":121120,"line_start":223,"line_end":223,"column_start":15,"column_end":24},"name":"0","qualname":"::expr::Expr::While::0","value":"expr::ExprWhile","parent":{"krate":0,"index":2872},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2875},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":121178,"byte_end":121183,"line_start":226,"line_end":226,"column_start":9,"column_end":14},"name":"Yield","qualname":"::expr::Expr::Yield","value":"Expr::Yield(ExprYield)","parent":{"krate":0,"index":2757},"children":[],"decl_id":null,"docs":" A yield expression: `yield expr`.\n","sig":null,"attributes":[{"value":"/ A yield expression: `yield expr`.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":121132,"byte_end":121169,"line_start":225,"line_end":225,"column_start":9,"column_end":46}}]},{"kind":"Field","id":{"krate":0,"index":2877},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":121184,"byte_end":121193,"line_start":226,"line_end":226,"column_start":15,"column_end":24},"name":"0","qualname":"::expr::Expr::Yield::0","value":"expr::ExprYield","parent":{"krate":0,"index":2875},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2757},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":117164,"byte_end":117168,"line_start":91,"line_end":91,"column_start":14,"column_end":18},"name":"Expr","qualname":"::expr::Expr","value":"enum Expr {\n    Array(ExprArray),\n    Assign(ExprAssign),\n    AssignOp(ExprAssignOp),\n    Async(ExprAsync),\n    Await(ExprAwait),\n    Binary(ExprBinary),\n    Block(ExprBlock),\n    Box(ExprBox),\n    Break(ExprBreak),\n    Call(ExprCall),\n    Cast(ExprCast),\n    Closure(ExprClosure),\n    Continue(ExprContinue),\n    Field(ExprField),\n    ForLoop(ExprForLoop),\n    Group(ExprGroup),\n    If(ExprIf),\n    Index(ExprIndex),\n    Let(ExprLet),\n    Lit(ExprLit),\n    Loop(ExprLoop),\n    Macro(ExprMacro),\n    Match(ExprMatch),\n    MethodCall(ExprMethodCall),\n    Paren(ExprParen),\n    Path(ExprPath),\n    Range(ExprRange),\n    Reference(ExprReference),\n    Repeat(ExprRepeat),\n    Return(ExprReturn),\n    Struct(ExprStruct),\n    Try(ExprTry),\n    TryBlock(ExprTryBlock),\n    Tuple(ExprTuple),\n    Type(ExprType),\n    Unary(ExprUnary),\n    Unsafe(ExprUnsafe),\n    Verbatim(TokenStream),\n    While(ExprWhile),\n    Yield(ExprYield),\n}","parent":null,"children":[{"krate":0,"index":2758},{"krate":0,"index":2761},{"krate":0,"index":2764},{"krate":0,"index":2767},{"krate":0,"index":2770},{"krate":0,"index":2773},{"krate":0,"index":2776},{"krate":0,"index":2779},{"krate":0,"index":2782},{"krate":0,"index":2785},{"krate":0,"index":2788},{"krate":0,"index":2791},{"krate":0,"index":2794},{"krate":0,"index":2797},{"krate":0,"index":2800},{"krate":0,"index":2803},{"krate":0,"index":2806},{"krate":0,"index":2809},{"krate":0,"index":2812},{"krate":0,"index":2815},{"krate":0,"index":2818},{"krate":0,"index":2821},{"krate":0,"index":2824},{"krate":0,"index":2827},{"krate":0,"index":2830},{"krate":0,"index":2833},{"krate":0,"index":2836},{"krate":0,"index":2839},{"krate":0,"index":2842},{"krate":0,"index":2845},{"krate":0,"index":2848},{"krate":0,"index":2851},{"krate":0,"index":2854},{"krate":0,"index":2857},{"krate":0,"index":2860},{"krate":0,"index":2863},{"krate":0,"index":2866},{"krate":0,"index":2869},{"krate":0,"index":2872},{"krate":0,"index":2875}],"decl_id":null,"docs":" A Rust expression.","sig":null,"attributes":[{"value":"non_exhaustive","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":117134,"byte_end":117148,"line_start":90,"line_end":90,"column_start":44,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":2956},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":122320,"byte_end":122329,"line_start":257,"line_end":257,"column_start":16,"column_end":25},"name":"ExprArray","qualname":"::expr::ExprArray","value":"ExprArray { attrs, bracket_token, elems }","parent":null,"children":[{"krate":0,"index":2957},{"krate":0,"index":2958},{"krate":0,"index":2959}],"decl_id":null,"docs":" A slice literal expression: `[a, b, c, d]`.","sig":null,"attributes":[{"value":"cfg(feature = \"full\")","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\macros.rs","byte_start":32772,"byte_end":32796,"line_start":10,"line_end":10,"column_start":9,"column_end":33}}]},{"kind":"Field","id":{"krate":0,"index":2957},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":122350,"byte_end":122355,"line_start":258,"line_end":258,"column_start":13,"column_end":18},"name":"attrs","qualname":"::expr::ExprArray::attrs","value":"std::vec::Vec<attr::Attribute>","parent":{"krate":0,"index":2956},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2958},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":122385,"byte_end":122398,"line_start":259,"line_end":259,"column_start":13,"column_end":26},"name":"bracket_token","qualname":"::expr::ExprArray::bracket_token","value":"token::Bracket","parent":{"krate":0,"index":2956},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2959},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":122428,"byte_end":122433,"line_start":260,"line_end":260,"column_start":13,"column_end":18},"name":"elems","qualname":"::expr::ExprArray::elems","value":"punctuated::Punctuated<expr::Expr, token::Comma>","parent":{"krate":0,"index":2956},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2960},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":122695,"byte_end":122705,"line_start":269,"line_end":269,"column_start":16,"column_end":26},"name":"ExprAssign","qualname":"::expr::ExprAssign","value":"ExprAssign { attrs, left, eq_token, right }","parent":null,"children":[{"krate":0,"index":2961},{"krate":0,"index":2962},{"krate":0,"index":2963},{"krate":0,"index":2964}],"decl_id":null,"docs":" An assignment expression: `a = compute()`.","sig":null,"attributes":[{"value":"cfg(feature = \"full\")","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\macros.rs","byte_start":32772,"byte_end":32796,"line_start":10,"line_end":10,"column_start":9,"column_end":33}}]},{"kind":"Field","id":{"krate":0,"index":2961},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":122726,"byte_end":122731,"line_start":270,"line_end":270,"column_start":13,"column_end":18},"name":"attrs","qualname":"::expr::ExprAssign::attrs","value":"std::vec::Vec<attr::Attribute>","parent":{"krate":0,"index":2960},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2962},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":122761,"byte_end":122765,"line_start":271,"line_end":271,"column_start":13,"column_end":17},"name":"left","qualname":"::expr::ExprAssign::left","value":"std::boxed::Box<expr::Expr>","parent":{"krate":0,"index":2960},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2963},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":122790,"byte_end":122798,"line_start":272,"line_end":272,"column_start":13,"column_end":21},"name":"eq_token","qualname":"::expr::ExprAssign::eq_token","value":"token::Eq","parent":{"krate":0,"index":2960},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2964},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":122823,"byte_end":122828,"line_start":273,"line_end":273,"column_start":13,"column_end":18},"name":"right","qualname":"::expr::ExprAssign::right","value":"std::boxed::Box<expr::Expr>","parent":{"krate":0,"index":2960},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2965},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":123079,"byte_end":123091,"line_start":282,"line_end":282,"column_start":16,"column_end":28},"name":"ExprAssignOp","qualname":"::expr::ExprAssignOp","value":"ExprAssignOp { attrs, left, op, right }","parent":null,"children":[{"krate":0,"index":2966},{"krate":0,"index":2967},{"krate":0,"index":2968},{"krate":0,"index":2969}],"decl_id":null,"docs":" A compound assignment expression: `counter += 1`.","sig":null,"attributes":[{"value":"cfg(feature = \"full\")","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\macros.rs","byte_start":32772,"byte_end":32796,"line_start":10,"line_end":10,"column_start":9,"column_end":33}}]},{"kind":"Field","id":{"krate":0,"index":2966},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":123112,"byte_end":123117,"line_start":283,"line_end":283,"column_start":13,"column_end":18},"name":"attrs","qualname":"::expr::ExprAssignOp::attrs","value":"std::vec::Vec<attr::Attribute>","parent":{"krate":0,"index":2965},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2967},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":123147,"byte_end":123151,"line_start":284,"line_end":284,"column_start":13,"column_end":17},"name":"left","qualname":"::expr::ExprAssignOp::left","value":"std::boxed::Box<expr::Expr>","parent":{"krate":0,"index":2965},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2968},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":123176,"byte_end":123178,"line_start":285,"line_end":285,"column_start":13,"column_end":15},"name":"op","qualname":"::expr::ExprAssignOp::op","value":"op::BinOp","parent":{"krate":0,"index":2965},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2969},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":123199,"byte_end":123204,"line_start":286,"line_end":286,"column_start":13,"column_end":18},"name":"right","qualname":"::expr::ExprAssignOp::right","value":"std::boxed::Box<expr::Expr>","parent":{"krate":0,"index":2965},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2970},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":123438,"byte_end":123447,"line_start":295,"line_end":295,"column_start":16,"column_end":25},"name":"ExprAsync","qualname":"::expr::ExprAsync","value":"ExprAsync { attrs, async_token, capture, block }","parent":null,"children":[{"krate":0,"index":2971},{"krate":0,"index":2972},{"krate":0,"index":2973},{"krate":0,"index":2974}],"decl_id":null,"docs":" An async block: `async { ... }`.","sig":null,"attributes":[{"value":"cfg(feature = \"full\")","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\macros.rs","byte_start":32772,"byte_end":32796,"line_start":10,"line_end":10,"column_start":9,"column_end":33}}]},{"kind":"Field","id":{"krate":0,"index":2971},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":123468,"byte_end":123473,"line_start":296,"line_end":296,"column_start":13,"column_end":18},"name":"attrs","qualname":"::expr::ExprAsync::attrs","value":"std::vec::Vec<attr::Attribute>","parent":{"krate":0,"index":2970},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2972},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":123503,"byte_end":123514,"line_start":297,"line_end":297,"column_start":13,"column_end":24},"name":"async_token","qualname":"::expr::ExprAsync::async_token","value":"token::Async","parent":{"krate":0,"index":2970},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2973},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":123543,"byte_end":123550,"line_start":298,"line_end":298,"column_start":13,"column_end":20},"name":"capture","qualname":"::expr::ExprAsync::capture","value":"std::option::Option<token::Move>","parent":{"krate":0,"index":2970},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2974},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":123586,"byte_end":123591,"line_start":299,"line_end":299,"column_start":13,"column_end":18},"name":"block","qualname":"::expr::ExprAsync::block","value":"stmt::Block","parent":{"krate":0,"index":2970},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2975},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":123822,"byte_end":123831,"line_start":308,"line_end":308,"column_start":16,"column_end":25},"name":"ExprAwait","qualname":"::expr::ExprAwait","value":"ExprAwait { attrs, base, dot_token, await_token }","parent":null,"children":[{"krate":0,"index":2976},{"krate":0,"index":2977},{"krate":0,"index":2978},{"krate":0,"index":2979}],"decl_id":null,"docs":" An await expression: `fut.await`.","sig":null,"attributes":[{"value":"cfg(feature = \"full\")","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\macros.rs","byte_start":32772,"byte_end":32796,"line_start":10,"line_end":10,"column_start":9,"column_end":33}}]},{"kind":"Field","id":{"krate":0,"index":2976},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":123852,"byte_end":123857,"line_start":309,"line_end":309,"column_start":13,"column_end":18},"name":"attrs","qualname":"::expr::ExprAwait::attrs","value":"std::vec::Vec<attr::Attribute>","parent":{"krate":0,"index":2975},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2977},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":123887,"byte_end":123891,"line_start":310,"line_end":310,"column_start":13,"column_end":17},"name":"base","qualname":"::expr::ExprAwait::base","value":"std::boxed::Box<expr::Expr>","parent":{"krate":0,"index":2975},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2978},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":123916,"byte_end":123925,"line_start":311,"line_end":311,"column_start":13,"column_end":22},"name":"dot_token","qualname":"::expr::ExprAwait::dot_token","value":"token::Dot","parent":{"krate":0,"index":2975},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2979},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":123950,"byte_end":123961,"line_start":312,"line_end":312,"column_start":13,"column_end":24},"name":"await_token","qualname":"::expr::ExprAwait::await_token","value":"token::Await","parent":{"krate":0,"index":2975},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2980},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":124250,"byte_end":124260,"line_start":322,"line_end":322,"column_start":16,"column_end":26},"name":"ExprBinary","qualname":"::expr::ExprBinary","value":"ExprBinary { attrs, left, op, right }","parent":null,"children":[{"krate":0,"index":2981},{"krate":0,"index":2982},{"krate":0,"index":2983},{"krate":0,"index":2984}],"decl_id":null,"docs":" A binary operation: `a + b`, `a * b`.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2981},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":124275,"byte_end":124280,"line_start":323,"line_end":323,"column_start":13,"column_end":18},"name":"attrs","qualname":"::expr::ExprBinary::attrs","value":"std::vec::Vec<attr::Attribute>","parent":{"krate":0,"index":2980},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2982},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":124310,"byte_end":124314,"line_start":324,"line_end":324,"column_start":13,"column_end":17},"name":"left","qualname":"::expr::ExprBinary::left","value":"std::boxed::Box<expr::Expr>","parent":{"krate":0,"index":2980},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2983},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":124339,"byte_end":124341,"line_start":325,"line_end":325,"column_start":13,"column_end":15},"name":"op","qualname":"::expr::ExprBinary::op","value":"op::BinOp","parent":{"krate":0,"index":2980},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2984},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":124362,"byte_end":124367,"line_start":326,"line_end":326,"column_start":13,"column_end":18},"name":"right","qualname":"::expr::ExprBinary::right","value":"std::boxed::Box<expr::Expr>","parent":{"krate":0,"index":2980},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2985},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":124596,"byte_end":124605,"line_start":335,"line_end":335,"column_start":16,"column_end":25},"name":"ExprBlock","qualname":"::expr::ExprBlock","value":"ExprBlock { attrs, label, block }","parent":null,"children":[{"krate":0,"index":2986},{"krate":0,"index":2987},{"krate":0,"index":2988}],"decl_id":null,"docs":" A blocked scope: `{ ... }`.","sig":null,"attributes":[{"value":"cfg(feature = \"full\")","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\macros.rs","byte_start":32772,"byte_end":32796,"line_start":10,"line_end":10,"column_start":9,"column_end":33}}]},{"kind":"Field","id":{"krate":0,"index":2986},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":124626,"byte_end":124631,"line_start":336,"line_end":336,"column_start":13,"column_end":18},"name":"attrs","qualname":"::expr::ExprBlock::attrs","value":"std::vec::Vec<attr::Attribute>","parent":{"krate":0,"index":2985},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2987},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":124661,"byte_end":124666,"line_start":337,"line_end":337,"column_start":13,"column_end":18},"name":"label","qualname":"::expr::ExprBlock::label","value":"std::option::Option<expr::Label>","parent":{"krate":0,"index":2985},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2988},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":124695,"byte_end":124700,"line_start":338,"line_end":338,"column_start":13,"column_end":18},"name":"block","qualname":"::expr::ExprBlock::block","value":"stmt::Block","parent":{"krate":0,"index":2985},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2989},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":124924,"byte_end":124931,"line_start":347,"line_end":347,"column_start":16,"column_end":23},"name":"ExprBox","qualname":"::expr::ExprBox","value":"ExprBox { attrs, box_token, expr }","parent":null,"children":[{"krate":0,"index":2990},{"krate":0,"index":2991},{"krate":0,"index":2992}],"decl_id":null,"docs":" A box expression: `box f`.","sig":null,"attributes":[{"value":"cfg(feature = \"full\")","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\macros.rs","byte_start":32772,"byte_end":32796,"line_start":10,"line_end":10,"column_start":9,"column_end":33}}]},{"kind":"Field","id":{"krate":0,"index":2990},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":124952,"byte_end":124957,"line_start":348,"line_end":348,"column_start":13,"column_end":18},"name":"attrs","qualname":"::expr::ExprBox::attrs","value":"std::vec::Vec<attr::Attribute>","parent":{"krate":0,"index":2989},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2991},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":124987,"byte_end":124996,"line_start":349,"line_end":349,"column_start":13,"column_end":22},"name":"box_token","qualname":"::expr::ExprBox::box_token","value":"token::Box","parent":{"krate":0,"index":2989},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2992},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":125023,"byte_end":125027,"line_start":350,"line_end":350,"column_start":13,"column_end":17},"name":"expr","qualname":"::expr::ExprBox::expr","value":"std::boxed::Box<expr::Expr>","parent":{"krate":0,"index":2989},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2993},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":125307,"byte_end":125316,"line_start":360,"line_end":360,"column_start":16,"column_end":25},"name":"ExprBreak","qualname":"::expr::ExprBreak","value":"ExprBreak { attrs, break_token, label, expr }","parent":null,"children":[{"krate":0,"index":2994},{"krate":0,"index":2995},{"krate":0,"index":2996},{"krate":0,"index":2997}],"decl_id":null,"docs":" A `break`, with an optional label to break and an optional\n expression.","sig":null,"attributes":[{"value":"cfg(feature = \"full\")","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\macros.rs","byte_start":32772,"byte_end":32796,"line_start":10,"line_end":10,"column_start":9,"column_end":33}}]},{"kind":"Field","id":{"krate":0,"index":2994},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":125337,"byte_end":125342,"line_start":361,"line_end":361,"column_start":13,"column_end":18},"name":"attrs","qualname":"::expr::ExprBreak::attrs","value":"std::vec::Vec<attr::Attribute>","parent":{"krate":0,"index":2993},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2995},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":125372,"byte_end":125383,"line_start":362,"line_end":362,"column_start":13,"column_end":24},"name":"break_token","qualname":"::expr::ExprBreak::break_token","value":"token::Break","parent":{"krate":0,"index":2993},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2996},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":125412,"byte_end":125417,"line_start":363,"line_end":363,"column_start":13,"column_end":18},"name":"label","qualname":"::expr::ExprBreak::label","value":"std::option::Option<lifetime::Lifetime>","parent":{"krate":0,"index":2993},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2997},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":125449,"byte_end":125453,"line_start":364,"line_end":364,"column_start":13,"column_end":17},"name":"expr","qualname":"::expr::ExprBreak::expr","value":"std::option::Option<std::boxed::Box<expr::Expr>>","parent":{"krate":0,"index":2993},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2998},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":125753,"byte_end":125761,"line_start":374,"line_end":374,"column_start":16,"column_end":24},"name":"ExprCall","qualname":"::expr::ExprCall","value":"ExprCall { attrs, func, paren_token, args }","parent":null,"children":[{"krate":0,"index":2999},{"krate":0,"index":3000},{"krate":0,"index":3001},{"krate":0,"index":3002}],"decl_id":null,"docs":" A function call expression: `invoke(a, b)`.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2999},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":125776,"byte_end":125781,"line_start":375,"line_end":375,"column_start":13,"column_end":18},"name":"attrs","qualname":"::expr::ExprCall::attrs","value":"std::vec::Vec<attr::Attribute>","parent":{"krate":0,"index":2998},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3000},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":125811,"byte_end":125815,"line_start":376,"line_end":376,"column_start":13,"column_end":17},"name":"func","qualname":"::expr::ExprCall::func","value":"std::boxed::Box<expr::Expr>","parent":{"krate":0,"index":2998},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3001},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":125840,"byte_end":125851,"line_start":377,"line_end":377,"column_start":13,"column_end":24},"name":"paren_token","qualname":"::expr::ExprCall::paren_token","value":"token::Paren","parent":{"krate":0,"index":2998},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3002},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":125879,"byte_end":125883,"line_start":378,"line_end":378,"column_start":13,"column_end":17},"name":"args","qualname":"::expr::ExprCall::args","value":"punctuated::Punctuated<expr::Expr, token::Comma>","parent":{"krate":0,"index":2998},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3003},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":126182,"byte_end":126190,"line_start":388,"line_end":388,"column_start":16,"column_end":24},"name":"ExprCast","qualname":"::expr::ExprCast","value":"ExprCast { attrs, expr, as_token, ty }","parent":null,"children":[{"krate":0,"index":3004},{"krate":0,"index":3005},{"krate":0,"index":3006},{"krate":0,"index":3007}],"decl_id":null,"docs":" A cast expression: `foo as f64`.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3004},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":126205,"byte_end":126210,"line_start":389,"line_end":389,"column_start":13,"column_end":18},"name":"attrs","qualname":"::expr::ExprCast::attrs","value":"std::vec::Vec<attr::Attribute>","parent":{"krate":0,"index":3003},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3005},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":126240,"byte_end":126244,"line_start":390,"line_end":390,"column_start":13,"column_end":17},"name":"expr","qualname":"::expr::ExprCast::expr","value":"std::boxed::Box<expr::Expr>","parent":{"krate":0,"index":3003},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3006},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":126269,"byte_end":126277,"line_start":391,"line_end":391,"column_start":13,"column_end":21},"name":"as_token","qualname":"::expr::ExprCast::as_token","value":"token::As","parent":{"krate":0,"index":3003},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3007},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":126303,"byte_end":126305,"line_start":392,"line_end":392,"column_start":13,"column_end":15},"name":"ty","qualname":"::expr::ExprCast::ty","value":"std::boxed::Box<ty::Type>","parent":{"krate":0,"index":3003},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3008},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":126544,"byte_end":126555,"line_start":401,"line_end":401,"column_start":16,"column_end":27},"name":"ExprClosure","qualname":"::expr::ExprClosure","value":"ExprClosure { attrs, movability, asyncness, capture, or1_token, inputs, or2_token, output, body }","parent":null,"children":[{"krate":0,"index":3009},{"krate":0,"index":3010},{"krate":0,"index":3011},{"krate":0,"index":3012},{"krate":0,"index":3013},{"krate":0,"index":3014},{"krate":0,"index":3015},{"krate":0,"index":3016},{"krate":0,"index":3017}],"decl_id":null,"docs":" A closure expression: `|a, b| a + b`.","sig":null,"attributes":[{"value":"cfg(feature = \"full\")","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\macros.rs","byte_start":32772,"byte_end":32796,"line_start":10,"line_end":10,"column_start":9,"column_end":33}}]},{"kind":"Field","id":{"krate":0,"index":3009},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":126576,"byte_end":126581,"line_start":402,"line_end":402,"column_start":13,"column_end":18},"name":"attrs","qualname":"::expr::ExprClosure::attrs","value":"std::vec::Vec<attr::Attribute>","parent":{"krate":0,"index":3008},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3010},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":126611,"byte_end":126621,"line_start":403,"line_end":403,"column_start":13,"column_end":23},"name":"movability","qualname":"::expr::ExprClosure::movability","value":"std::option::Option<token::Static>","parent":{"krate":0,"index":3008},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3011},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":126659,"byte_end":126668,"line_start":404,"line_end":404,"column_start":13,"column_end":22},"name":"asyncness","qualname":"::expr::ExprClosure::asyncness","value":"std::option::Option<token::Async>","parent":{"krate":0,"index":3008},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3012},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":126705,"byte_end":126712,"line_start":405,"line_end":405,"column_start":13,"column_end":20},"name":"capture","qualname":"::expr::ExprClosure::capture","value":"std::option::Option<token::Move>","parent":{"krate":0,"index":3008},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3013},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":126748,"byte_end":126757,"line_start":406,"line_end":406,"column_start":13,"column_end":22},"name":"or1_token","qualname":"::expr::ExprClosure::or1_token","value":"token::Or","parent":{"krate":0,"index":3008},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3014},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":126782,"byte_end":126788,"line_start":407,"line_end":407,"column_start":13,"column_end":19},"name":"inputs","qualname":"::expr::ExprClosure::inputs","value":"punctuated::Punctuated<pat::Pat, token::Comma>","parent":{"krate":0,"index":3008},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3015},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":126830,"byte_end":126839,"line_start":408,"line_end":408,"column_start":13,"column_end":22},"name":"or2_token","qualname":"::expr::ExprClosure::or2_token","value":"token::Or","parent":{"krate":0,"index":3008},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3016},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":126864,"byte_end":126870,"line_start":409,"line_end":409,"column_start":13,"column_end":19},"name":"output","qualname":"::expr::ExprClosure::output","value":"ty::ReturnType","parent":{"krate":0,"index":3008},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3017},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":126896,"byte_end":126900,"line_start":410,"line_end":410,"column_start":13,"column_end":17},"name":"body","qualname":"::expr::ExprClosure::body","value":"std::boxed::Box<expr::Expr>","parent":{"krate":0,"index":3008},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3018},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":127139,"byte_end":127151,"line_start":419,"line_end":419,"column_start":16,"column_end":28},"name":"ExprContinue","qualname":"::expr::ExprContinue","value":"ExprContinue { attrs, continue_token, label }","parent":null,"children":[{"krate":0,"index":3019},{"krate":0,"index":3020},{"krate":0,"index":3021}],"decl_id":null,"docs":" A `continue`, with an optional label.","sig":null,"attributes":[{"value":"cfg(feature = \"full\")","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\macros.rs","byte_start":32772,"byte_end":32796,"line_start":10,"line_end":10,"column_start":9,"column_end":33}}]},{"kind":"Field","id":{"krate":0,"index":3019},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":127172,"byte_end":127177,"line_start":420,"line_end":420,"column_start":13,"column_end":18},"name":"attrs","qualname":"::expr::ExprContinue::attrs","value":"std::vec::Vec<attr::Attribute>","parent":{"krate":0,"index":3018},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3020},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":127207,"byte_end":127221,"line_start":421,"line_end":421,"column_start":13,"column_end":27},"name":"continue_token","qualname":"::expr::ExprContinue::continue_token","value":"token::Continue","parent":{"krate":0,"index":3018},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3021},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":127253,"byte_end":127258,"line_start":422,"line_end":422,"column_start":13,"column_end":18},"name":"label","qualname":"::expr::ExprContinue::label","value":"std::option::Option<lifetime::Lifetime>","parent":{"krate":0,"index":3018},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3022},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":127581,"byte_end":127590,"line_start":432,"line_end":432,"column_start":16,"column_end":25},"name":"ExprField","qualname":"::expr::ExprField","value":"ExprField { attrs, base, dot_token, member }","parent":null,"children":[{"krate":0,"index":3023},{"krate":0,"index":3024},{"krate":0,"index":3025},{"krate":0,"index":3026}],"decl_id":null,"docs":" Access of a named struct field (`obj.k`) or unnamed tuple struct\n field (`obj.0`).","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3023},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":127605,"byte_end":127610,"line_start":433,"line_end":433,"column_start":13,"column_end":18},"name":"attrs","qualname":"::expr::ExprField::attrs","value":"std::vec::Vec<attr::Attribute>","parent":{"krate":0,"index":3022},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3024},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":127640,"byte_end":127644,"line_start":434,"line_end":434,"column_start":13,"column_end":17},"name":"base","qualname":"::expr::ExprField::base","value":"std::boxed::Box<expr::Expr>","parent":{"krate":0,"index":3022},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3025},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":127669,"byte_end":127678,"line_start":435,"line_end":435,"column_start":13,"column_end":22},"name":"dot_token","qualname":"::expr::ExprField::dot_token","value":"token::Dot","parent":{"krate":0,"index":3022},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3026},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":127703,"byte_end":127709,"line_start":436,"line_end":436,"column_start":13,"column_end":19},"name":"member","qualname":"::expr::ExprField::member","value":"expr::Member","parent":{"krate":0,"index":3022},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3027},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":127946,"byte_end":127957,"line_start":445,"line_end":445,"column_start":16,"column_end":27},"name":"ExprForLoop","qualname":"::expr::ExprForLoop","value":"ExprForLoop { attrs, label, for_token, pat, in_token, expr, body }","parent":null,"children":[{"krate":0,"index":3028},{"krate":0,"index":3029},{"krate":0,"index":3030},{"krate":0,"index":3031},{"krate":0,"index":3032},{"krate":0,"index":3033},{"krate":0,"index":3034}],"decl_id":null,"docs":" A for loop: `for pat in expr { ... }`.","sig":null,"attributes":[{"value":"cfg(feature = \"full\")","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\macros.rs","byte_start":32772,"byte_end":32796,"line_start":10,"line_end":10,"column_start":9,"column_end":33}}]},{"kind":"Field","id":{"krate":0,"index":3028},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":127978,"byte_end":127983,"line_start":446,"line_end":446,"column_start":13,"column_end":18},"name":"attrs","qualname":"::expr::ExprForLoop::attrs","value":"std::vec::Vec<attr::Attribute>","parent":{"krate":0,"index":3027},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3029},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":128013,"byte_end":128018,"line_start":447,"line_end":447,"column_start":13,"column_end":18},"name":"label","qualname":"::expr::ExprForLoop::label","value":"std::option::Option<expr::Label>","parent":{"krate":0,"index":3027},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3030},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":128047,"byte_end":128056,"line_start":448,"line_end":448,"column_start":13,"column_end":22},"name":"for_token","qualname":"::expr::ExprForLoop::for_token","value":"token::For","parent":{"krate":0,"index":3027},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3031},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":128083,"byte_end":128086,"line_start":449,"line_end":449,"column_start":13,"column_end":16},"name":"pat","qualname":"::expr::ExprForLoop::pat","value":"pat::Pat","parent":{"krate":0,"index":3027},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3032},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":128105,"byte_end":128113,"line_start":450,"line_end":450,"column_start":13,"column_end":21},"name":"in_token","qualname":"::expr::ExprForLoop::in_token","value":"token::In","parent":{"krate":0,"index":3027},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3033},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":128139,"byte_end":128143,"line_start":451,"line_end":451,"column_start":13,"column_end":17},"name":"expr","qualname":"::expr::ExprForLoop::expr","value":"std::boxed::Box<expr::Expr>","parent":{"krate":0,"index":3027},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3034},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":128168,"byte_end":128172,"line_start":452,"line_end":452,"column_start":13,"column_end":17},"name":"body","qualname":"::expr::ExprForLoop::body","value":"stmt::Block","parent":{"krate":0,"index":3027},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3035},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":128599,"byte_end":128608,"line_start":465,"line_end":465,"column_start":16,"column_end":25},"name":"ExprGroup","qualname":"::expr::ExprGroup","value":"ExprGroup { attrs, group_token, expr }","parent":null,"children":[{"krate":0,"index":3036},{"krate":0,"index":3037},{"krate":0,"index":3038}],"decl_id":null,"docs":" An expression contained within invisible delimiters.","sig":null,"attributes":[{"value":"cfg(feature = \"full\")","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\macros.rs","byte_start":32772,"byte_end":32796,"line_start":10,"line_end":10,"column_start":9,"column_end":33}}]},{"kind":"Field","id":{"krate":0,"index":3036},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":128629,"byte_end":128634,"line_start":466,"line_end":466,"column_start":13,"column_end":18},"name":"attrs","qualname":"::expr::ExprGroup::attrs","value":"std::vec::Vec<attr::Attribute>","parent":{"krate":0,"index":3035},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3037},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":128664,"byte_end":128675,"line_start":467,"line_end":467,"column_start":13,"column_end":24},"name":"group_token","qualname":"::expr::ExprGroup::group_token","value":"token::Group","parent":{"krate":0,"index":3035},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3038},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":128703,"byte_end":128707,"line_start":468,"line_end":468,"column_start":13,"column_end":17},"name":"expr","qualname":"::expr::ExprGroup::expr","value":"std::boxed::Box<expr::Expr>","parent":{"krate":0,"index":3035},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3039},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":129136,"byte_end":129142,"line_start":481,"line_end":481,"column_start":16,"column_end":22},"name":"ExprIf","qualname":"::expr::ExprIf","value":"ExprIf { attrs, if_token, cond, then_branch, else_branch }","parent":null,"children":[{"krate":0,"index":3040},{"krate":0,"index":3041},{"krate":0,"index":3042},{"krate":0,"index":3043},{"krate":0,"index":3044}],"decl_id":null,"docs":" An `if` expression with an optional `else` block: `if expr { ... }\n else { ... }`.","sig":null,"attributes":[{"value":"cfg(feature = \"full\")","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\macros.rs","byte_start":32772,"byte_end":32796,"line_start":10,"line_end":10,"column_start":9,"column_end":33}}]},{"kind":"Field","id":{"krate":0,"index":3040},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":129163,"byte_end":129168,"line_start":482,"line_end":482,"column_start":13,"column_end":18},"name":"attrs","qualname":"::expr::ExprIf::attrs","value":"std::vec::Vec<attr::Attribute>","parent":{"krate":0,"index":3039},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3041},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":129198,"byte_end":129206,"line_start":483,"line_end":483,"column_start":13,"column_end":21},"name":"if_token","qualname":"::expr::ExprIf::if_token","value":"token::If","parent":{"krate":0,"index":3039},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3042},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":129232,"byte_end":129236,"line_start":484,"line_end":484,"column_start":13,"column_end":17},"name":"cond","qualname":"::expr::ExprIf::cond","value":"std::boxed::Box<expr::Expr>","parent":{"krate":0,"index":3039},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3043},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":129261,"byte_end":129272,"line_start":485,"line_end":485,"column_start":13,"column_end":24},"name":"then_branch","qualname":"::expr::ExprIf::then_branch","value":"stmt::Block","parent":{"krate":0,"index":3039},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3044},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":129293,"byte_end":129304,"line_start":486,"line_end":486,"column_start":13,"column_end":24},"name":"else_branch","qualname":"::expr::ExprIf::else_branch","value":"std::option::Option<(token::Else, std::boxed::Box<expr::Expr>)>","parent":{"krate":0,"index":3039},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3045},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":129629,"byte_end":129638,"line_start":496,"line_end":496,"column_start":16,"column_end":25},"name":"ExprIndex","qualname":"::expr::ExprIndex","value":"ExprIndex { attrs, expr, bracket_token, index }","parent":null,"children":[{"krate":0,"index":3046},{"krate":0,"index":3047},{"krate":0,"index":3048},{"krate":0,"index":3049}],"decl_id":null,"docs":" A square bracketed indexing expression: `vector[2]`.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3046},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":129653,"byte_end":129658,"line_start":497,"line_end":497,"column_start":13,"column_end":18},"name":"attrs","qualname":"::expr::ExprIndex::attrs","value":"std::vec::Vec<attr::Attribute>","parent":{"krate":0,"index":3045},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3047},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":129688,"byte_end":129692,"line_start":498,"line_end":498,"column_start":13,"column_end":17},"name":"expr","qualname":"::expr::ExprIndex::expr","value":"std::boxed::Box<expr::Expr>","parent":{"krate":0,"index":3045},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3048},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":129717,"byte_end":129730,"line_start":499,"line_end":499,"column_start":13,"column_end":26},"name":"bracket_token","qualname":"::expr::ExprIndex::bracket_token","value":"token::Bracket","parent":{"krate":0,"index":3045},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3049},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":129760,"byte_end":129765,"line_start":500,"line_end":500,"column_start":13,"column_end":18},"name":"index","qualname":"::expr::ExprIndex::index","value":"std::boxed::Box<expr::Expr>","parent":{"krate":0,"index":3045},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3050},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":130002,"byte_end":130009,"line_start":509,"line_end":509,"column_start":16,"column_end":23},"name":"ExprLet","qualname":"::expr::ExprLet","value":"ExprLet { attrs, let_token, pat, eq_token, expr }","parent":null,"children":[{"krate":0,"index":3051},{"krate":0,"index":3052},{"krate":0,"index":3053},{"krate":0,"index":3054},{"krate":0,"index":3055}],"decl_id":null,"docs":" A `let` guard: `let Some(x) = opt`.","sig":null,"attributes":[{"value":"cfg(feature = \"full\")","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\macros.rs","byte_start":32772,"byte_end":32796,"line_start":10,"line_end":10,"column_start":9,"column_end":33}}]},{"kind":"Field","id":{"krate":0,"index":3051},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":130030,"byte_end":130035,"line_start":510,"line_end":510,"column_start":13,"column_end":18},"name":"attrs","qualname":"::expr::ExprLet::attrs","value":"std::vec::Vec<attr::Attribute>","parent":{"krate":0,"index":3050},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3052},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":130065,"byte_end":130074,"line_start":511,"line_end":511,"column_start":13,"column_end":22},"name":"let_token","qualname":"::expr::ExprLet::let_token","value":"token::Let","parent":{"krate":0,"index":3050},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3053},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":130101,"byte_end":130104,"line_start":512,"line_end":512,"column_start":13,"column_end":16},"name":"pat","qualname":"::expr::ExprLet::pat","value":"pat::Pat","parent":{"krate":0,"index":3050},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3054},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":130123,"byte_end":130131,"line_start":513,"line_end":513,"column_start":13,"column_end":21},"name":"eq_token","qualname":"::expr::ExprLet::eq_token","value":"token::Eq","parent":{"krate":0,"index":3050},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3055},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":130156,"byte_end":130160,"line_start":514,"line_end":514,"column_start":13,"column_end":17},"name":"expr","qualname":"::expr::ExprLet::expr","value":"std::boxed::Box<expr::Expr>","parent":{"krate":0,"index":3050},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3056},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":130459,"byte_end":130466,"line_start":524,"line_end":524,"column_start":16,"column_end":23},"name":"ExprLit","qualname":"::expr::ExprLit","value":"ExprLit { attrs, lit }","parent":null,"children":[{"krate":0,"index":3057},{"krate":0,"index":3058}],"decl_id":null,"docs":" A literal in place of an expression: `1`, `\"foo\"`.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3057},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":130481,"byte_end":130486,"line_start":525,"line_end":525,"column_start":13,"column_end":18},"name":"attrs","qualname":"::expr::ExprLit::attrs","value":"std::vec::Vec<attr::Attribute>","parent":{"krate":0,"index":3056},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3058},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":130516,"byte_end":130519,"line_start":526,"line_end":526,"column_start":13,"column_end":16},"name":"lit","qualname":"::expr::ExprLit::lit","value":"lit::Lit","parent":{"krate":0,"index":3056},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3059},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":130750,"byte_end":130758,"line_start":535,"line_end":535,"column_start":16,"column_end":24},"name":"ExprLoop","qualname":"::expr::ExprLoop","value":"ExprLoop { attrs, label, loop_token, body }","parent":null,"children":[{"krate":0,"index":3060},{"krate":0,"index":3061},{"krate":0,"index":3062},{"krate":0,"index":3063}],"decl_id":null,"docs":" Conditionless loop: `loop { ... }`.","sig":null,"attributes":[{"value":"cfg(feature = \"full\")","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\macros.rs","byte_start":32772,"byte_end":32796,"line_start":10,"line_end":10,"column_start":9,"column_end":33}}]},{"kind":"Field","id":{"krate":0,"index":3060},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":130779,"byte_end":130784,"line_start":536,"line_end":536,"column_start":13,"column_end":18},"name":"attrs","qualname":"::expr::ExprLoop::attrs","value":"std::vec::Vec<attr::Attribute>","parent":{"krate":0,"index":3059},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3061},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":130814,"byte_end":130819,"line_start":537,"line_end":537,"column_start":13,"column_end":18},"name":"label","qualname":"::expr::ExprLoop::label","value":"std::option::Option<expr::Label>","parent":{"krate":0,"index":3059},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3062},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":130848,"byte_end":130858,"line_start":538,"line_end":538,"column_start":13,"column_end":23},"name":"loop_token","qualname":"::expr::ExprLoop::loop_token","value":"token::Loop","parent":{"krate":0,"index":3059},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3063},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":130886,"byte_end":130890,"line_start":539,"line_end":539,"column_start":13,"column_end":17},"name":"body","qualname":"::expr::ExprLoop::body","value":"stmt::Block","parent":{"krate":0,"index":3059},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3064},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":131138,"byte_end":131147,"line_start":548,"line_end":548,"column_start":16,"column_end":25},"name":"ExprMacro","qualname":"::expr::ExprMacro","value":"ExprMacro { attrs, mac }","parent":null,"children":[{"krate":0,"index":3065},{"krate":0,"index":3066}],"decl_id":null,"docs":" A macro invocation expression: `format!(\"{}\", q)`.","sig":null,"attributes":[{"value":"cfg(feature = \"full\")","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\macros.rs","byte_start":32772,"byte_end":32796,"line_start":10,"line_end":10,"column_start":9,"column_end":33}}]},{"kind":"Field","id":{"krate":0,"index":3065},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":131168,"byte_end":131173,"line_start":549,"line_end":549,"column_start":13,"column_end":18},"name":"attrs","qualname":"::expr::ExprMacro::attrs","value":"std::vec::Vec<attr::Attribute>","parent":{"krate":0,"index":3064},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3066},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":131203,"byte_end":131206,"line_start":550,"line_end":550,"column_start":13,"column_end":16},"name":"mac","qualname":"::expr::ExprMacro::mac","value":"mac::Macro","parent":{"krate":0,"index":3064},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3067},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":131466,"byte_end":131475,"line_start":559,"line_end":559,"column_start":16,"column_end":25},"name":"ExprMatch","qualname":"::expr::ExprMatch","value":"ExprMatch { attrs, match_token, expr, brace_token, arms }","parent":null,"children":[{"krate":0,"index":3068},{"krate":0,"index":3069},{"krate":0,"index":3070},{"krate":0,"index":3071},{"krate":0,"index":3072}],"decl_id":null,"docs":" A `match` expression: `match n { Some(n) => {}, None => {} }`.","sig":null,"attributes":[{"value":"cfg(feature = \"full\")","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\macros.rs","byte_start":32772,"byte_end":32796,"line_start":10,"line_end":10,"column_start":9,"column_end":33}}]},{"kind":"Field","id":{"krate":0,"index":3068},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":131496,"byte_end":131501,"line_start":560,"line_end":560,"column_start":13,"column_end":18},"name":"attrs","qualname":"::expr::ExprMatch::attrs","value":"std::vec::Vec<attr::Attribute>","parent":{"krate":0,"index":3067},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3069},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":131531,"byte_end":131542,"line_start":561,"line_end":561,"column_start":13,"column_end":24},"name":"match_token","qualname":"::expr::ExprMatch::match_token","value":"token::Match","parent":{"krate":0,"index":3067},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3070},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":131571,"byte_end":131575,"line_start":562,"line_end":562,"column_start":13,"column_end":17},"name":"expr","qualname":"::expr::ExprMatch::expr","value":"std::boxed::Box<expr::Expr>","parent":{"krate":0,"index":3067},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3071},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":131600,"byte_end":131611,"line_start":563,"line_end":563,"column_start":13,"column_end":24},"name":"brace_token","qualname":"::expr::ExprMatch::brace_token","value":"token::Brace","parent":{"krate":0,"index":3067},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3072},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":131639,"byte_end":131643,"line_start":564,"line_end":564,"column_start":13,"column_end":17},"name":"arms","qualname":"::expr::ExprMatch::arms","value":"std::vec::Vec<expr::Arm>","parent":{"krate":0,"index":3067},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3073},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":131889,"byte_end":131903,"line_start":573,"line_end":573,"column_start":16,"column_end":30},"name":"ExprMethodCall","qualname":"::expr::ExprMethodCall","value":"ExprMethodCall { attrs, receiver, dot_token, method, turbofish, paren_token, args }","parent":null,"children":[{"krate":0,"index":3074},{"krate":0,"index":3075},{"krate":0,"index":3076},{"krate":0,"index":3077},{"krate":0,"index":3078},{"krate":0,"index":3079},{"krate":0,"index":3080}],"decl_id":null,"docs":" A method call expression: `x.foo::<T>(a, b)`.","sig":null,"attributes":[{"value":"cfg(feature = \"full\")","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\macros.rs","byte_start":32772,"byte_end":32796,"line_start":10,"line_end":10,"column_start":9,"column_end":33}}]},{"kind":"Field","id":{"krate":0,"index":3074},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":131924,"byte_end":131929,"line_start":574,"line_end":574,"column_start":13,"column_end":18},"name":"attrs","qualname":"::expr::ExprMethodCall::attrs","value":"std::vec::Vec<attr::Attribute>","parent":{"krate":0,"index":3073},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3075},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":131959,"byte_end":131967,"line_start":575,"line_end":575,"column_start":13,"column_end":21},"name":"receiver","qualname":"::expr::ExprMethodCall::receiver","value":"std::boxed::Box<expr::Expr>","parent":{"krate":0,"index":3073},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3076},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":131992,"byte_end":132001,"line_start":576,"line_end":576,"column_start":13,"column_end":22},"name":"dot_token","qualname":"::expr::ExprMethodCall::dot_token","value":"token::Dot","parent":{"krate":0,"index":3073},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3077},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":132026,"byte_end":132032,"line_start":577,"line_end":577,"column_start":13,"column_end":19},"name":"method","qualname":"::expr::ExprMethodCall::method","value":"proc_macro2::Ident","parent":{"krate":0,"index":3073},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3078},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":132053,"byte_end":132062,"line_start":578,"line_end":578,"column_start":13,"column_end":22},"name":"turbofish","qualname":"::expr::ExprMethodCall::turbofish","value":"std::option::Option<expr::MethodTurbofish>","parent":{"krate":0,"index":3073},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3079},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":132101,"byte_end":132112,"line_start":579,"line_end":579,"column_start":13,"column_end":24},"name":"paren_token","qualname":"::expr::ExprMethodCall::paren_token","value":"token::Paren","parent":{"krate":0,"index":3073},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3080},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":132140,"byte_end":132144,"line_start":580,"line_end":580,"column_start":13,"column_end":17},"name":"args","qualname":"::expr::ExprMethodCall::args","value":"punctuated::Punctuated<expr::Expr, token::Comma>","parent":{"krate":0,"index":3073},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3081},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":132427,"byte_end":132436,"line_start":589,"line_end":589,"column_start":16,"column_end":25},"name":"ExprParen","qualname":"::expr::ExprParen","value":"ExprParen { attrs, paren_token, expr }","parent":null,"children":[{"krate":0,"index":3082},{"krate":0,"index":3083},{"krate":0,"index":3084}],"decl_id":null,"docs":" A parenthesized expression: `(a + b)`.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3082},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":132451,"byte_end":132456,"line_start":590,"line_end":590,"column_start":13,"column_end":18},"name":"attrs","qualname":"::expr::ExprParen::attrs","value":"std::vec::Vec<attr::Attribute>","parent":{"krate":0,"index":3081},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3083},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":132486,"byte_end":132497,"line_start":591,"line_end":591,"column_start":13,"column_end":24},"name":"paren_token","qualname":"::expr::ExprParen::paren_token","value":"token::Paren","parent":{"krate":0,"index":3081},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3084},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":132525,"byte_end":132529,"line_start":592,"line_end":592,"column_start":13,"column_end":17},"name":"expr","qualname":"::expr::ExprParen::expr","value":"std::boxed::Box<expr::Expr>","parent":{"krate":0,"index":3081},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3085},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":132950,"byte_end":132958,"line_start":605,"line_end":605,"column_start":16,"column_end":24},"name":"ExprPath","qualname":"::expr::ExprPath","value":"ExprPath { attrs, qself, path }","parent":null,"children":[{"krate":0,"index":3086},{"krate":0,"index":3087},{"krate":0,"index":3088}],"decl_id":null,"docs":" A path like `std::mem::replace` possibly containing generic\n parameters and a qualified self-type.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3086},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":132973,"byte_end":132978,"line_start":606,"line_end":606,"column_start":13,"column_end":18},"name":"attrs","qualname":"::expr::ExprPath::attrs","value":"std::vec::Vec<attr::Attribute>","parent":{"krate":0,"index":3085},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3087},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":133008,"byte_end":133013,"line_start":607,"line_end":607,"column_start":13,"column_end":18},"name":"qself","qualname":"::expr::ExprPath::qself","value":"std::option::Option<path::QSelf>","parent":{"krate":0,"index":3085},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3088},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":133042,"byte_end":133046,"line_start":608,"line_end":608,"column_start":13,"column_end":17},"name":"path","qualname":"::expr::ExprPath::path","value":"path::Path","parent":{"krate":0,"index":3085},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3089},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":133301,"byte_end":133310,"line_start":617,"line_end":617,"column_start":16,"column_end":25},"name":"ExprRange","qualname":"::expr::ExprRange","value":"ExprRange { attrs, from, limits, to }","parent":null,"children":[{"krate":0,"index":3090},{"krate":0,"index":3091},{"krate":0,"index":3092},{"krate":0,"index":3093}],"decl_id":null,"docs":" A range expression: `1..2`, `1..`, `..2`, `1..=2`, `..=2`.","sig":null,"attributes":[{"value":"cfg(feature = \"full\")","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\macros.rs","byte_start":32772,"byte_end":32796,"line_start":10,"line_end":10,"column_start":9,"column_end":33}}]},{"kind":"Field","id":{"krate":0,"index":3090},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":133331,"byte_end":133336,"line_start":618,"line_end":618,"column_start":13,"column_end":18},"name":"attrs","qualname":"::expr::ExprRange::attrs","value":"std::vec::Vec<attr::Attribute>","parent":{"krate":0,"index":3089},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3091},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":133366,"byte_end":133370,"line_start":619,"line_end":619,"column_start":13,"column_end":17},"name":"from","qualname":"::expr::ExprRange::from","value":"std::option::Option<std::boxed::Box<expr::Expr>>","parent":{"krate":0,"index":3089},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3092},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":133403,"byte_end":133409,"line_start":620,"line_end":620,"column_start":13,"column_end":19},"name":"limits","qualname":"::expr::ExprRange::limits","value":"expr::RangeLimits","parent":{"krate":0,"index":3089},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3093},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":133436,"byte_end":133438,"line_start":621,"line_end":621,"column_start":13,"column_end":15},"name":"to","qualname":"::expr::ExprRange::to","value":"std::option::Option<std::boxed::Box<expr::Expr>>","parent":{"krate":0,"index":3089},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3094},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":133690,"byte_end":133703,"line_start":630,"line_end":630,"column_start":16,"column_end":29},"name":"ExprReference","qualname":"::expr::ExprReference","value":"ExprReference { attrs, and_token, raw, mutability, expr }","parent":null,"children":[{"krate":0,"index":3095},{"krate":0,"index":3096},{"krate":0,"index":3097},{"krate":0,"index":3098},{"krate":0,"index":3099}],"decl_id":null,"docs":" A referencing operation: `&a` or `&mut a`.","sig":null,"attributes":[{"value":"cfg(feature = \"full\")","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\macros.rs","byte_start":32772,"byte_end":32796,"line_start":10,"line_end":10,"column_start":9,"column_end":33}}]},{"kind":"Field","id":{"krate":0,"index":3095},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":133724,"byte_end":133729,"line_start":631,"line_end":631,"column_start":13,"column_end":18},"name":"attrs","qualname":"::expr::ExprReference::attrs","value":"std::vec::Vec<attr::Attribute>","parent":{"krate":0,"index":3094},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3096},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":133759,"byte_end":133768,"line_start":632,"line_end":632,"column_start":13,"column_end":22},"name":"and_token","qualname":"::expr::ExprReference::and_token","value":"token::And","parent":{"krate":0,"index":3094},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3097},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":133793,"byte_end":133796,"line_start":633,"line_end":633,"column_start":13,"column_end":16},"name":"raw","qualname":"::expr::ExprReference::raw","value":"reserved::Reserved","parent":{"krate":0,"index":3094},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3098},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":133820,"byte_end":133830,"line_start":634,"line_end":634,"column_start":13,"column_end":23},"name":"mutability","qualname":"::expr::ExprReference::mutability","value":"std::option::Option<token::Mut>","parent":{"krate":0,"index":3094},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3099},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":133865,"byte_end":133869,"line_start":635,"line_end":635,"column_start":13,"column_end":17},"name":"expr","qualname":"::expr::ExprReference::expr","value":"std::boxed::Box<expr::Expr>","parent":{"krate":0,"index":3094},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3100},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":134138,"byte_end":134148,"line_start":644,"line_end":644,"column_start":16,"column_end":26},"name":"ExprRepeat","qualname":"::expr::ExprRepeat","value":"ExprRepeat { attrs, bracket_token, expr, semi_token, len }","parent":null,"children":[{"krate":0,"index":3101},{"krate":0,"index":3102},{"krate":0,"index":3103},{"krate":0,"index":3104},{"krate":0,"index":3105}],"decl_id":null,"docs":" An array literal constructed from one repeated element: `[0u8; N]`.","sig":null,"attributes":[{"value":"cfg(feature = \"full\")","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\macros.rs","byte_start":32772,"byte_end":32796,"line_start":10,"line_end":10,"column_start":9,"column_end":33}}]},{"kind":"Field","id":{"krate":0,"index":3101},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":134169,"byte_end":134174,"line_start":645,"line_end":645,"column_start":13,"column_end":18},"name":"attrs","qualname":"::expr::ExprRepeat::attrs","value":"std::vec::Vec<attr::Attribute>","parent":{"krate":0,"index":3100},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3102},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":134204,"byte_end":134217,"line_start":646,"line_end":646,"column_start":13,"column_end":26},"name":"bracket_token","qualname":"::expr::ExprRepeat::bracket_token","value":"token::Bracket","parent":{"krate":0,"index":3100},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3103},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":134247,"byte_end":134251,"line_start":647,"line_end":647,"column_start":13,"column_end":17},"name":"expr","qualname":"::expr::ExprRepeat::expr","value":"std::boxed::Box<expr::Expr>","parent":{"krate":0,"index":3100},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3104},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":134276,"byte_end":134286,"line_start":648,"line_end":648,"column_start":13,"column_end":23},"name":"semi_token","qualname":"::expr::ExprRepeat::semi_token","value":"token::Semi","parent":{"krate":0,"index":3100},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3105},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":134311,"byte_end":134314,"line_start":649,"line_end":649,"column_start":13,"column_end":16},"name":"len","qualname":"::expr::ExprRepeat::len","value":"std::boxed::Box<expr::Expr>","parent":{"krate":0,"index":3100},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3106},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":134566,"byte_end":134576,"line_start":658,"line_end":658,"column_start":16,"column_end":26},"name":"ExprReturn","qualname":"::expr::ExprReturn","value":"ExprReturn { attrs, return_token, expr }","parent":null,"children":[{"krate":0,"index":3107},{"krate":0,"index":3108},{"krate":0,"index":3109}],"decl_id":null,"docs":" A `return`, with an optional value to be returned.","sig":null,"attributes":[{"value":"cfg(feature = \"full\")","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\macros.rs","byte_start":32772,"byte_end":32796,"line_start":10,"line_end":10,"column_start":9,"column_end":33}}]},{"kind":"Field","id":{"krate":0,"index":3107},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":134597,"byte_end":134602,"line_start":659,"line_end":659,"column_start":13,"column_end":18},"name":"attrs","qualname":"::expr::ExprReturn::attrs","value":"std::vec::Vec<attr::Attribute>","parent":{"krate":0,"index":3106},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3108},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":134632,"byte_end":134644,"line_start":660,"line_end":660,"column_start":13,"column_end":25},"name":"return_token","qualname":"::expr::ExprReturn::return_token","value":"token::Return","parent":{"krate":0,"index":3106},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3109},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":134674,"byte_end":134678,"line_start":661,"line_end":661,"column_start":13,"column_end":17},"name":"expr","qualname":"::expr::ExprReturn::expr","value":"std::option::Option<std::boxed::Box<expr::Expr>>","parent":{"krate":0,"index":3106},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3110},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":135052,"byte_end":135062,"line_start":673,"line_end":673,"column_start":16,"column_end":26},"name":"ExprStruct","qualname":"::expr::ExprStruct","value":"ExprStruct { attrs, path, brace_token, fields, dot2_token, rest }","parent":null,"children":[{"krate":0,"index":3111},{"krate":0,"index":3112},{"krate":0,"index":3113},{"krate":0,"index":3114},{"krate":0,"index":3115},{"krate":0,"index":3116}],"decl_id":null,"docs":" A struct literal expression: `Point { x: 1, y: 1 }`.","sig":null,"attributes":[{"value":"cfg(feature = \"full\")","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\macros.rs","byte_start":32772,"byte_end":32796,"line_start":10,"line_end":10,"column_start":9,"column_end":33}}]},{"kind":"Field","id":{"krate":0,"index":3111},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":135083,"byte_end":135088,"line_start":674,"line_end":674,"column_start":13,"column_end":18},"name":"attrs","qualname":"::expr::ExprStruct::attrs","value":"std::vec::Vec<attr::Attribute>","parent":{"krate":0,"index":3110},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3112},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":135118,"byte_end":135122,"line_start":675,"line_end":675,"column_start":13,"column_end":17},"name":"path","qualname":"::expr::ExprStruct::path","value":"path::Path","parent":{"krate":0,"index":3110},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3113},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":135142,"byte_end":135153,"line_start":676,"line_end":676,"column_start":13,"column_end":24},"name":"brace_token","qualname":"::expr::ExprStruct::brace_token","value":"token::Brace","parent":{"krate":0,"index":3110},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3114},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":135181,"byte_end":135187,"line_start":677,"line_end":677,"column_start":13,"column_end":19},"name":"fields","qualname":"::expr::ExprStruct::fields","value":"punctuated::Punctuated<expr::FieldValue, token::Comma>","parent":{"krate":0,"index":3110},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3115},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":135236,"byte_end":135246,"line_start":678,"line_end":678,"column_start":13,"column_end":23},"name":"dot2_token","qualname":"::expr::ExprStruct::dot2_token","value":"std::option::Option<token::Dot2>","parent":{"krate":0,"index":3110},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3116},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":135280,"byte_end":135284,"line_start":679,"line_end":679,"column_start":13,"column_end":17},"name":"rest","qualname":"::expr::ExprStruct::rest","value":"std::option::Option<std::boxed::Box<expr::Expr>>","parent":{"krate":0,"index":3110},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3117},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":135520,"byte_end":135527,"line_start":688,"line_end":688,"column_start":16,"column_end":23},"name":"ExprTry","qualname":"::expr::ExprTry","value":"ExprTry { attrs, expr, question_token }","parent":null,"children":[{"krate":0,"index":3118},{"krate":0,"index":3119},{"krate":0,"index":3120}],"decl_id":null,"docs":" A try-expression: `expr?`.","sig":null,"attributes":[{"value":"cfg(feature = \"full\")","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\macros.rs","byte_start":32772,"byte_end":32796,"line_start":10,"line_end":10,"column_start":9,"column_end":33}}]},{"kind":"Field","id":{"krate":0,"index":3118},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":135548,"byte_end":135553,"line_start":689,"line_end":689,"column_start":13,"column_end":18},"name":"attrs","qualname":"::expr::ExprTry::attrs","value":"std::vec::Vec<attr::Attribute>","parent":{"krate":0,"index":3117},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3119},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":135583,"byte_end":135587,"line_start":690,"line_end":690,"column_start":13,"column_end":17},"name":"expr","qualname":"::expr::ExprTry::expr","value":"std::boxed::Box<expr::Expr>","parent":{"krate":0,"index":3117},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3120},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":135612,"byte_end":135626,"line_start":691,"line_end":691,"column_start":13,"column_end":27},"name":"question_token","qualname":"::expr::ExprTry::question_token","value":"token::Question","parent":{"krate":0,"index":3117},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3121},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":135855,"byte_end":135867,"line_start":700,"line_end":700,"column_start":16,"column_end":28},"name":"ExprTryBlock","qualname":"::expr::ExprTryBlock","value":"ExprTryBlock { attrs, try_token, block }","parent":null,"children":[{"krate":0,"index":3122},{"krate":0,"index":3123},{"krate":0,"index":3124}],"decl_id":null,"docs":" A try block: `try { ... }`.","sig":null,"attributes":[{"value":"cfg(feature = \"full\")","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\macros.rs","byte_start":32772,"byte_end":32796,"line_start":10,"line_end":10,"column_start":9,"column_end":33}}]},{"kind":"Field","id":{"krate":0,"index":3122},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":135888,"byte_end":135893,"line_start":701,"line_end":701,"column_start":13,"column_end":18},"name":"attrs","qualname":"::expr::ExprTryBlock::attrs","value":"std::vec::Vec<attr::Attribute>","parent":{"krate":0,"index":3121},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3123},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":135923,"byte_end":135932,"line_start":702,"line_end":702,"column_start":13,"column_end":22},"name":"try_token","qualname":"::expr::ExprTryBlock::try_token","value":"token::Try","parent":{"krate":0,"index":3121},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3124},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":135959,"byte_end":135964,"line_start":703,"line_end":703,"column_start":13,"column_end":18},"name":"block","qualname":"::expr::ExprTryBlock::block","value":"stmt::Block","parent":{"krate":0,"index":3121},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3125},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":136197,"byte_end":136206,"line_start":712,"line_end":712,"column_start":16,"column_end":25},"name":"ExprTuple","qualname":"::expr::ExprTuple","value":"ExprTuple { attrs, paren_token, elems }","parent":null,"children":[{"krate":0,"index":3126},{"krate":0,"index":3127},{"krate":0,"index":3128}],"decl_id":null,"docs":" A tuple expression: `(a, b, c, d)`.","sig":null,"attributes":[{"value":"cfg(feature = \"full\")","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\macros.rs","byte_start":32772,"byte_end":32796,"line_start":10,"line_end":10,"column_start":9,"column_end":33}}]},{"kind":"Field","id":{"krate":0,"index":3126},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":136227,"byte_end":136232,"line_start":713,"line_end":713,"column_start":13,"column_end":18},"name":"attrs","qualname":"::expr::ExprTuple::attrs","value":"std::vec::Vec<attr::Attribute>","parent":{"krate":0,"index":3125},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3127},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":136262,"byte_end":136273,"line_start":714,"line_end":714,"column_start":13,"column_end":24},"name":"paren_token","qualname":"::expr::ExprTuple::paren_token","value":"token::Paren","parent":{"krate":0,"index":3125},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3128},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":136301,"byte_end":136306,"line_start":715,"line_end":715,"column_start":13,"column_end":18},"name":"elems","qualname":"::expr::ExprTuple::elems","value":"punctuated::Punctuated<expr::Expr, token::Comma>","parent":{"krate":0,"index":3125},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3129},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":136567,"byte_end":136575,"line_start":724,"line_end":724,"column_start":16,"column_end":24},"name":"ExprType","qualname":"::expr::ExprType","value":"ExprType { attrs, expr, colon_token, ty }","parent":null,"children":[{"krate":0,"index":3130},{"krate":0,"index":3131},{"krate":0,"index":3132},{"krate":0,"index":3133}],"decl_id":null,"docs":" A type ascription expression: `foo: f64`.","sig":null,"attributes":[{"value":"cfg(feature = \"full\")","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\macros.rs","byte_start":32772,"byte_end":32796,"line_start":10,"line_end":10,"column_start":9,"column_end":33}}]},{"kind":"Field","id":{"krate":0,"index":3130},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":136596,"byte_end":136601,"line_start":725,"line_end":725,"column_start":13,"column_end":18},"name":"attrs","qualname":"::expr::ExprType::attrs","value":"std::vec::Vec<attr::Attribute>","parent":{"krate":0,"index":3129},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3131},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":136631,"byte_end":136635,"line_start":726,"line_end":726,"column_start":13,"column_end":17},"name":"expr","qualname":"::expr::ExprType::expr","value":"std::boxed::Box<expr::Expr>","parent":{"krate":0,"index":3129},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3132},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":136660,"byte_end":136671,"line_start":727,"line_end":727,"column_start":13,"column_end":24},"name":"colon_token","qualname":"::expr::ExprType::colon_token","value":"token::Colon","parent":{"krate":0,"index":3129},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3133},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":136696,"byte_end":136698,"line_start":728,"line_end":728,"column_start":13,"column_end":15},"name":"ty","qualname":"::expr::ExprType::ty","value":"std::boxed::Box<ty::Type>","parent":{"krate":0,"index":3129},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3134},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":136977,"byte_end":136986,"line_start":738,"line_end":738,"column_start":16,"column_end":25},"name":"ExprUnary","qualname":"::expr::ExprUnary","value":"ExprUnary { attrs, op, expr }","parent":null,"children":[{"krate":0,"index":3135},{"krate":0,"index":3136},{"krate":0,"index":3137}],"decl_id":null,"docs":" A unary operation: `!x`, `*x`.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3135},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":137001,"byte_end":137006,"line_start":739,"line_end":739,"column_start":13,"column_end":18},"name":"attrs","qualname":"::expr::ExprUnary::attrs","value":"std::vec::Vec<attr::Attribute>","parent":{"krate":0,"index":3134},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3136},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":137036,"byte_end":137038,"line_start":740,"line_end":740,"column_start":13,"column_end":15},"name":"op","qualname":"::expr::ExprUnary::op","value":"op::UnOp","parent":{"krate":0,"index":3134},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3137},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":137058,"byte_end":137062,"line_start":741,"line_end":741,"column_start":13,"column_end":17},"name":"expr","qualname":"::expr::ExprUnary::expr","value":"std::boxed::Box<expr::Expr>","parent":{"krate":0,"index":3134},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3138},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":137298,"byte_end":137308,"line_start":750,"line_end":750,"column_start":16,"column_end":26},"name":"ExprUnsafe","qualname":"::expr::ExprUnsafe","value":"ExprUnsafe { attrs, unsafe_token, block }","parent":null,"children":[{"krate":0,"index":3139},{"krate":0,"index":3140},{"krate":0,"index":3141}],"decl_id":null,"docs":" An unsafe block: `unsafe { ... }`.","sig":null,"attributes":[{"value":"cfg(feature = \"full\")","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\macros.rs","byte_start":32772,"byte_end":32796,"line_start":10,"line_end":10,"column_start":9,"column_end":33}}]},{"kind":"Field","id":{"krate":0,"index":3139},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":137329,"byte_end":137334,"line_start":751,"line_end":751,"column_start":13,"column_end":18},"name":"attrs","qualname":"::expr::ExprUnsafe::attrs","value":"std::vec::Vec<attr::Attribute>","parent":{"krate":0,"index":3138},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3140},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":137364,"byte_end":137376,"line_start":752,"line_end":752,"column_start":13,"column_end":25},"name":"unsafe_token","qualname":"::expr::ExprUnsafe::unsafe_token","value":"token::Unsafe","parent":{"krate":0,"index":3138},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3141},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":137406,"byte_end":137411,"line_start":753,"line_end":753,"column_start":13,"column_end":18},"name":"block","qualname":"::expr::ExprUnsafe::block","value":"stmt::Block","parent":{"krate":0,"index":3138},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3142},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":137644,"byte_end":137653,"line_start":762,"line_end":762,"column_start":16,"column_end":25},"name":"ExprWhile","qualname":"::expr::ExprWhile","value":"ExprWhile { attrs, label, while_token, cond, body }","parent":null,"children":[{"krate":0,"index":3143},{"krate":0,"index":3144},{"krate":0,"index":3145},{"krate":0,"index":3146},{"krate":0,"index":3147}],"decl_id":null,"docs":" A while loop: `while expr { ... }`.","sig":null,"attributes":[{"value":"cfg(feature = \"full\")","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\macros.rs","byte_start":32772,"byte_end":32796,"line_start":10,"line_end":10,"column_start":9,"column_end":33}}]},{"kind":"Field","id":{"krate":0,"index":3143},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":137674,"byte_end":137679,"line_start":763,"line_end":763,"column_start":13,"column_end":18},"name":"attrs","qualname":"::expr::ExprWhile::attrs","value":"std::vec::Vec<attr::Attribute>","parent":{"krate":0,"index":3142},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3144},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":137709,"byte_end":137714,"line_start":764,"line_end":764,"column_start":13,"column_end":18},"name":"label","qualname":"::expr::ExprWhile::label","value":"std::option::Option<expr::Label>","parent":{"krate":0,"index":3142},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3145},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":137743,"byte_end":137754,"line_start":765,"line_end":765,"column_start":13,"column_end":24},"name":"while_token","qualname":"::expr::ExprWhile::while_token","value":"token::While","parent":{"krate":0,"index":3142},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3146},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":137783,"byte_end":137787,"line_start":766,"line_end":766,"column_start":13,"column_end":17},"name":"cond","qualname":"::expr::ExprWhile::cond","value":"std::boxed::Box<expr::Expr>","parent":{"krate":0,"index":3142},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3147},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":137812,"byte_end":137816,"line_start":767,"line_end":767,"column_start":13,"column_end":17},"name":"body","qualname":"::expr::ExprWhile::body","value":"stmt::Block","parent":{"krate":0,"index":3142},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3148},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":138047,"byte_end":138056,"line_start":776,"line_end":776,"column_start":16,"column_end":25},"name":"ExprYield","qualname":"::expr::ExprYield","value":"ExprYield { attrs, yield_token, expr }","parent":null,"children":[{"krate":0,"index":3149},{"krate":0,"index":3150},{"krate":0,"index":3151}],"decl_id":null,"docs":" A yield expression: `yield expr`.","sig":null,"attributes":[{"value":"cfg(feature = \"full\")","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\macros.rs","byte_start":32772,"byte_end":32796,"line_start":10,"line_end":10,"column_start":9,"column_end":33}}]},{"kind":"Field","id":{"krate":0,"index":3149},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":138077,"byte_end":138082,"line_start":777,"line_end":777,"column_start":13,"column_end":18},"name":"attrs","qualname":"::expr::ExprYield::attrs","value":"std::vec::Vec<attr::Attribute>","parent":{"krate":0,"index":3148},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3150},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":138112,"byte_end":138123,"line_start":778,"line_end":778,"column_start":13,"column_end":24},"name":"yield_token","qualname":"::expr::ExprYield::yield_token","value":"token::Yield","parent":{"krate":0,"index":3148},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3151},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":138152,"byte_end":138156,"line_start":779,"line_end":779,"column_start":13,"column_end":17},"name":"expr","qualname":"::expr::ExprYield::expr","value":"std::option::Option<std::boxed::Box<expr::Expr>>","parent":{"krate":0,"index":3148},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3153},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":141180,"byte_end":141185,"line_start":853,"line_end":853,"column_start":9,"column_end":14},"name":"Named","qualname":"::expr::Member::Named","value":"Member::Named(Ident)","parent":{"krate":0,"index":3152},"children":[],"decl_id":null,"docs":" A named field like `self.x`.\n","sig":null,"attributes":[{"value":"/ A named field like `self.x`.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":141139,"byte_end":141171,"line_start":852,"line_end":852,"column_start":9,"column_end":41}}]},{"kind":"Field","id":{"krate":0,"index":3155},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":141186,"byte_end":141191,"line_start":853,"line_end":853,"column_start":15,"column_end":20},"name":"0","qualname":"::expr::Member::Named::0","value":"proc_macro2::Ident","parent":{"krate":0,"index":3153},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3156},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":141246,"byte_end":141253,"line_start":855,"line_end":855,"column_start":9,"column_end":16},"name":"Unnamed","qualname":"::expr::Member::Unnamed","value":"Member::Unnamed(Index)","parent":{"krate":0,"index":3152},"children":[],"decl_id":null,"docs":" An unnamed field like `self.0`.\n","sig":null,"attributes":[{"value":"/ An unnamed field like `self.0`.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":141202,"byte_end":141237,"line_start":854,"line_end":854,"column_start":9,"column_end":44}}]},{"kind":"Field","id":{"krate":0,"index":3158},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":141254,"byte_end":141259,"line_start":855,"line_end":855,"column_start":17,"column_end":22},"name":"0","qualname":"::expr::Member::Unnamed::0","value":"expr::Index","parent":{"krate":0,"index":3156},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":3152},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":141122,"byte_end":141128,"line_start":851,"line_end":851,"column_start":14,"column_end":20},"name":"Member","qualname":"::expr::Member","value":"enum Member { Named(Ident), Unnamed(Index), }","parent":null,"children":[{"krate":0,"index":3153},{"krate":0,"index":3156}],"decl_id":null,"docs":" A struct or tuple struct field accessed in a struct literal or field\n expression.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":200},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":141308,"byte_end":141312,"line_start":860,"line_end":860,"column_start":8,"column_end":12},"name":"from","qualname":"<Member as std::convert::From>::from","value":"fn from(Ident) -> Member","parent":{"krate":2,"index":3085},"children":[],"decl_id":{"krate":2,"index":3087},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":202},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":141414,"byte_end":141418,"line_start":866,"line_end":866,"column_start":8,"column_end":12},"name":"from","qualname":"<Member as std::convert::From>::from","value":"fn from(Index) -> Member","parent":{"krate":2,"index":3085},"children":[],"decl_id":{"krate":2,"index":3087},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":204},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":141522,"byte_end":141526,"line_start":872,"line_end":872,"column_start":8,"column_end":12},"name":"from","qualname":"<Member as std::convert::From>::from","value":"fn from(usize) -> Member","parent":{"krate":2,"index":3085},"children":[],"decl_id":{"krate":2,"index":3087},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":207},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":141664,"byte_end":141666,"line_start":880,"line_end":880,"column_start":8,"column_end":10},"name":"eq","qualname":"<Member as std::cmp::PartialEq>::eq","value":"fn eq(&Self, &Self) -> bool","parent":{"krate":2,"index":2831},"children":[],"decl_id":{"krate":2,"index":2833},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":209},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":141953,"byte_end":141957,"line_start":890,"line_end":890,"column_start":8,"column_end":12},"name":"hash","qualname":"<Member as std::hash::Hash>::hash","value":"fn hash<H>(&Self, &mut H) where H: Hasher","parent":{"krate":2,"index":10329},"children":[],"decl_id":{"krate":2,"index":10330},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3159},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":142867,"byte_end":142872,"line_start":921,"line_end":921,"column_start":16,"column_end":21},"name":"Index","qualname":"::expr::Index","value":"Index { index, span }","parent":null,"children":[{"krate":0,"index":3160},{"krate":0,"index":3161}],"decl_id":null,"docs":" The index of an unnamed tuple struct field.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3160},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":142887,"byte_end":142892,"line_start":922,"line_end":922,"column_start":13,"column_end":18},"name":"index","qualname":"::expr::Index::index","value":"u32","parent":{"krate":0,"index":3159},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3161},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":142911,"byte_end":142915,"line_start":923,"line_end":923,"column_start":13,"column_end":17},"name":"span","qualname":"::expr::Index::span","value":"proc_macro2::Span","parent":{"krate":0,"index":3159},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":212},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":142968,"byte_end":142972,"line_start":928,"line_end":928,"column_start":8,"column_end":12},"name":"from","qualname":"<Index as std::convert::From>::from","value":"fn from(usize) -> Index","parent":{"krate":2,"index":3085},"children":[],"decl_id":{"krate":2,"index":3087},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":215},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":143211,"byte_end":143213,"line_start":940,"line_end":940,"column_start":8,"column_end":10},"name":"eq","qualname":"<Index as std::cmp::PartialEq>::eq","value":"fn eq(&Self, &Self) -> bool","parent":{"krate":2,"index":2831},"children":[],"decl_id":{"krate":2,"index":2833},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":217},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":143317,"byte_end":143321,"line_start":946,"line_end":946,"column_start":8,"column_end":12},"name":"hash","qualname":"<Index as std::hash::Hash>::hash","value":"fn hash<H>(&Self, &mut H) where H: Hasher","parent":{"krate":2,"index":10329},"children":[],"decl_id":{"krate":2,"index":10330},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3162},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":143938,"byte_end":143953,"line_start":969,"line_end":969,"column_start":16,"column_end":31},"name":"MethodTurbofish","qualname":"::expr::MethodTurbofish","value":"MethodTurbofish { colon2_token, lt_token, args, gt_token }","parent":null,"children":[{"krate":0,"index":3163},{"krate":0,"index":3164},{"krate":0,"index":3165},{"krate":0,"index":3166}],"decl_id":null,"docs":" The `::<>` explicit type parameters passed to a method call:\n `parse::<u64>()`.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3163},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":143968,"byte_end":143980,"line_start":970,"line_end":970,"column_start":13,"column_end":25},"name":"colon2_token","qualname":"::expr::MethodTurbofish::colon2_token","value":"token::Colon2","parent":{"krate":0,"index":3162},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3164},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":144006,"byte_end":144014,"line_start":971,"line_end":971,"column_start":13,"column_end":21},"name":"lt_token","qualname":"::expr::MethodTurbofish::lt_token","value":"token::Lt","parent":{"krate":0,"index":3162},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3165},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":144039,"byte_end":144043,"line_start":972,"line_end":972,"column_start":13,"column_end":17},"name":"args","qualname":"::expr::MethodTurbofish::args","value":"punctuated::Punctuated<expr::GenericMethodArgument, token::Comma>","parent":{"krate":0,"index":3162},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3166},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":144103,"byte_end":144111,"line_start":973,"line_end":973,"column_start":13,"column_end":21},"name":"gt_token","qualname":"::expr::MethodTurbofish::gt_token","value":"token::Gt","parent":{"krate":0,"index":3162},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3168},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":144448,"byte_end":144452,"line_start":985,"line_end":985,"column_start":9,"column_end":13},"name":"Type","qualname":"::expr::GenericMethodArgument::Type","value":"GenericMethodArgument::Type(Type)","parent":{"krate":0,"index":3167},"children":[],"decl_id":null,"docs":" A type argument.\n","sig":null,"attributes":[{"value":"/ A type argument.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":144419,"byte_end":144439,"line_start":984,"line_end":984,"column_start":9,"column_end":29}}]},{"kind":"Field","id":{"krate":0,"index":3170},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":144453,"byte_end":144457,"line_start":985,"line_end":985,"column_start":14,"column_end":18},"name":"0","qualname":"::expr::GenericMethodArgument::Type::0","value":"ty::Type","parent":{"krate":0,"index":3168},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3171},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":144670,"byte_end":144675,"line_start":990,"line_end":990,"column_start":9,"column_end":14},"name":"Const","qualname":"::expr::GenericMethodArgument::Const","value":"GenericMethodArgument::Const(Expr)","parent":{"krate":0,"index":3167},"children":[],"decl_id":null,"docs":" A const expression. Must be inside of a block.","sig":null,"attributes":[{"value":"/ A const expression. Must be inside of a block.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":144468,"byte_end":144518,"line_start":986,"line_end":986,"column_start":9,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":144527,"byte_end":144530,"line_start":987,"line_end":987,"column_start":9,"column_end":12}},{"value":"/ NOTE: Identity expressions are represented as Type arguments, as","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":144539,"byte_end":144607,"line_start":988,"line_end":988,"column_start":9,"column_end":77}},{"value":"/ they are indistinguishable syntactically.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":144616,"byte_end":144661,"line_start":989,"line_end":989,"column_start":9,"column_end":54}}]},{"kind":"Field","id":{"krate":0,"index":3173},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":144676,"byte_end":144680,"line_start":990,"line_end":990,"column_start":15,"column_end":19},"name":"0","qualname":"::expr::GenericMethodArgument::Const::0","value":"expr::Expr","parent":{"krate":0,"index":3171},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":3167},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":144387,"byte_end":144408,"line_start":983,"line_end":983,"column_start":14,"column_end":35},"name":"GenericMethodArgument","qualname":"::expr::GenericMethodArgument","value":"enum GenericMethodArgument { Type(Type), Const(Expr), }","parent":null,"children":[{"krate":0,"index":3168},{"krate":0,"index":3171}],"decl_id":null,"docs":" An individual generic argument to a method, like `T`.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3174},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":144936,"byte_end":144946,"line_start":1000,"line_end":1000,"column_start":16,"column_end":26},"name":"FieldValue","qualname":"::expr::FieldValue","value":"FieldValue { attrs, member, colon_token, expr }","parent":null,"children":[{"krate":0,"index":3175},{"krate":0,"index":3176},{"krate":0,"index":3177},{"krate":0,"index":3178}],"decl_id":null,"docs":" A field-value pair in a struct literal.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3175},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":145005,"byte_end":145010,"line_start":1002,"line_end":1002,"column_start":13,"column_end":18},"name":"attrs","qualname":"::expr::FieldValue::attrs","value":"std::vec::Vec<attr::Attribute>","parent":{"krate":0,"index":3174},"children":[],"decl_id":null,"docs":" Attributes tagged on the field.\n","sig":null,"attributes":[{"value":"/ Attributes tagged on the field.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":144957,"byte_end":144992,"line_start":1001,"line_end":1001,"column_start":9,"column_end":44}}]},{"kind":"Field","id":{"krate":0,"index":3176},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":145081,"byte_end":145087,"line_start":1005,"line_end":1005,"column_start":13,"column_end":19},"name":"member","qualname":"::expr::FieldValue::member","value":"expr::Member","parent":{"krate":0,"index":3174},"children":[],"decl_id":null,"docs":" Name or index of the field.\n","sig":null,"attributes":[{"value":"/ Name or index of the field.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":145037,"byte_end":145068,"line_start":1004,"line_end":1004,"column_start":9,"column_end":40}}]},{"kind":"Field","id":{"krate":0,"index":3177},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":145230,"byte_end":145241,"line_start":1009,"line_end":1009,"column_start":13,"column_end":24},"name":"colon_token","qualname":"::expr::FieldValue::colon_token","value":"std::option::Option<token::Colon>","parent":{"krate":0,"index":3174},"children":[],"decl_id":null,"docs":" The colon in `Struct { x: x }`. If written in shorthand like\n `Struct { x }`, there is no colon.\n","sig":null,"attributes":[{"value":"/ The colon in `Struct { x: x }`. If written in shorthand like","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":145106,"byte_end":145170,"line_start":1007,"line_end":1007,"column_start":9,"column_end":73}},{"value":"/ `Struct { x }`, there is no colon.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":145179,"byte_end":145217,"line_start":1008,"line_end":1008,"column_start":9,"column_end":47}}]},{"kind":"Field","id":{"krate":0,"index":3178},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":145307,"byte_end":145311,"line_start":1012,"line_end":1012,"column_start":13,"column_end":17},"name":"expr","qualname":"::expr::FieldValue::expr","value":"expr::Expr","parent":{"krate":0,"index":3174},"children":[],"decl_id":null,"docs":" Value of the field.\n","sig":null,"attributes":[{"value":"/ Value of the field.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":145271,"byte_end":145294,"line_start":1011,"line_end":1011,"column_start":9,"column_end":32}}]},{"kind":"Struct","id":{"krate":0,"index":3179},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":145581,"byte_end":145586,"line_start":1022,"line_end":1022,"column_start":16,"column_end":21},"name":"Label","qualname":"::expr::Label","value":"Label { name, colon_token }","parent":null,"children":[{"krate":0,"index":3180},{"krate":0,"index":3181}],"decl_id":null,"docs":" A lifetime labeling a `for`, `while`, or `loop`.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3180},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":145601,"byte_end":145605,"line_start":1023,"line_end":1023,"column_start":13,"column_end":17},"name":"name","qualname":"::expr::Label::name","value":"lifetime::Lifetime","parent":{"krate":0,"index":3179},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3181},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":145629,"byte_end":145640,"line_start":1024,"line_end":1024,"column_start":13,"column_end":24},"name":"colon_token","qualname":"::expr::Label::colon_token","value":"token::Colon","parent":{"krate":0,"index":3179},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3182},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":146202,"byte_end":146205,"line_start":1050,"line_end":1050,"column_start":16,"column_end":19},"name":"Arm","qualname":"::expr::Arm","value":"Arm { attrs, pat, guard, fat_arrow_token, body, comma }","parent":null,"children":[{"krate":0,"index":3183},{"krate":0,"index":3184},{"krate":0,"index":3185},{"krate":0,"index":3186},{"krate":0,"index":3187},{"krate":0,"index":3188}],"decl_id":null,"docs":" One arm of a `match` expression: `0...10 => { return true; }`.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3183},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":146220,"byte_end":146225,"line_start":1051,"line_end":1051,"column_start":13,"column_end":18},"name":"attrs","qualname":"::expr::Arm::attrs","value":"std::vec::Vec<attr::Attribute>","parent":{"krate":0,"index":3182},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3184},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":146255,"byte_end":146258,"line_start":1052,"line_end":1052,"column_start":13,"column_end":16},"name":"pat","qualname":"::expr::Arm::pat","value":"pat::Pat","parent":{"krate":0,"index":3182},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3185},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":146277,"byte_end":146282,"line_start":1053,"line_end":1053,"column_start":13,"column_end":18},"name":"guard","qualname":"::expr::Arm::guard","value":"std::option::Option<(token::If, std::boxed::Box<expr::Expr>)>","parent":{"krate":0,"index":3182},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3186},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":146329,"byte_end":146344,"line_start":1054,"line_end":1054,"column_start":13,"column_end":28},"name":"fat_arrow_token","qualname":"::expr::Arm::fat_arrow_token","value":"token::FatArrow","parent":{"krate":0,"index":3182},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3187},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":146370,"byte_end":146374,"line_start":1055,"line_end":1055,"column_start":13,"column_end":17},"name":"body","qualname":"::expr::Arm::body","value":"std::boxed::Box<expr::Expr>","parent":{"krate":0,"index":3182},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3188},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":146399,"byte_end":146404,"line_start":1056,"line_end":1056,"column_start":13,"column_end":18},"name":"comma","qualname":"::expr::Arm::comma","value":"std::option::Option<token::Comma>","parent":{"krate":0,"index":3182},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3190},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":146766,"byte_end":146774,"line_start":1068,"line_end":1068,"column_start":9,"column_end":17},"name":"HalfOpen","qualname":"::expr::RangeLimits::HalfOpen","value":"RangeLimits::HalfOpen(crate::token::Dot2)","parent":{"krate":0,"index":3189},"children":[],"decl_id":null,"docs":" Inclusive at the beginning, exclusive at the end.\n","sig":null,"attributes":[{"value":"/ Inclusive at the beginning, exclusive at the end.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":146704,"byte_end":146757,"line_start":1067,"line_end":1067,"column_start":9,"column_end":62}}]},{"kind":"Field","id":{"krate":0,"index":3192},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":146775,"byte_end":146785,"line_start":1068,"line_end":1068,"column_start":18,"column_end":28},"name":"0","qualname":"::expr::RangeLimits::HalfOpen::0","value":"token::Dot2","parent":{"krate":0,"index":3190},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3193},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":146844,"byte_end":146850,"line_start":1070,"line_end":1070,"column_start":9,"column_end":15},"name":"Closed","qualname":"::expr::RangeLimits::Closed","value":"RangeLimits::Closed(crate::token::DotDotEq)","parent":{"krate":0,"index":3189},"children":[],"decl_id":null,"docs":" Inclusive at the beginning and end.\n","sig":null,"attributes":[{"value":"/ Inclusive at the beginning and end.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":146796,"byte_end":146835,"line_start":1069,"line_end":1069,"column_start":9,"column_end":48}}]},{"kind":"Field","id":{"krate":0,"index":3195},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":146851,"byte_end":146862,"line_start":1070,"line_end":1070,"column_start":16,"column_end":27},"name":"0","qualname":"::expr::RangeLimits::Closed::0","value":"token::DotDotEq","parent":{"krate":0,"index":3193},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":3189},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":146682,"byte_end":146693,"line_start":1066,"line_end":1066,"column_start":14,"column_end":25},"name":"RangeLimits","qualname":"::expr::RangeLimits","value":"enum RangeLimits {\n    HalfOpen(crate::token::Dot2),\n    Closed(crate::token::DotDotEq),\n}","parent":null,"children":[{"krate":0,"index":3190},{"krate":0,"index":3193}],"decl_id":null,"docs":" Limit types of a range, inclusive or exclusive.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3196},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\generics.rs","byte_start":233650,"byte_end":233658,"line_start":15,"line_end":15,"column_start":16,"column_end":24},"name":"Generics","qualname":"::generics::Generics","value":"Generics { lt_token, params, gt_token, where_clause }","parent":null,"children":[{"krate":0,"index":3197},{"krate":0,"index":3198},{"krate":0,"index":3199},{"krate":0,"index":3200}],"decl_id":null,"docs":" Lifetimes and type parameters attached to a declaration of a function,\n enum, trait, etc.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3197},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\generics.rs","byte_start":233673,"byte_end":233681,"line_start":16,"line_end":16,"column_start":13,"column_end":21},"name":"lt_token","qualname":"::generics::Generics::lt_token","value":"std::option::Option<token::Lt>","parent":{"krate":0,"index":3196},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3198},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\generics.rs","byte_start":233714,"byte_end":233720,"line_start":17,"line_end":17,"column_start":13,"column_end":19},"name":"params","qualname":"::generics::Generics::params","value":"punctuated::Punctuated<generics::GenericParam, token::Comma>","parent":{"krate":0,"index":3196},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3199},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\generics.rs","byte_start":233771,"byte_end":233779,"line_start":18,"line_end":18,"column_start":13,"column_end":21},"name":"gt_token","qualname":"::generics::Generics::gt_token","value":"std::option::Option<token::Gt>","parent":{"krate":0,"index":3196},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3200},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\generics.rs","byte_start":233812,"byte_end":233824,"line_start":19,"line_end":19,"column_start":13,"column_end":25},"name":"where_clause","qualname":"::generics::Generics::where_clause","value":"std::option::Option<generics::WhereClause>","parent":{"krate":0,"index":3196},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3202},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\generics.rs","byte_start":234425,"byte_end":234429,"line_start":38,"line_end":38,"column_start":9,"column_end":13},"name":"Type","qualname":"::generics::GenericParam::Type","value":"GenericParam::Type(TypeParam)","parent":{"krate":0,"index":3201},"children":[],"decl_id":null,"docs":" A generic type parameter: `T: Into<String>`.\n","sig":null,"attributes":[{"value":"/ A generic type parameter: `T: Into<String>`.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\generics.rs","byte_start":234368,"byte_end":234416,"line_start":37,"line_end":37,"column_start":9,"column_end":57}}]},{"kind":"Field","id":{"krate":0,"index":3204},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\generics.rs","byte_start":234430,"byte_end":234439,"line_start":38,"line_end":38,"column_start":14,"column_end":23},"name":"0","qualname":"::generics::GenericParam::Type::0","value":"generics::TypeParam","parent":{"krate":0,"index":3202},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3205},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\generics.rs","byte_start":234506,"byte_end":234514,"line_start":41,"line_end":41,"column_start":9,"column_end":17},"name":"Lifetime","qualname":"::generics::GenericParam::Lifetime","value":"GenericParam::Lifetime(LifetimeDef)","parent":{"krate":0,"index":3201},"children":[],"decl_id":null,"docs":" A lifetime definition: `'a: 'b + 'c + 'd`.\n","sig":null,"attributes":[{"value":"/ A lifetime definition: `'a: 'b + 'c + 'd`.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\generics.rs","byte_start":234451,"byte_end":234497,"line_start":40,"line_end":40,"column_start":9,"column_end":55}}]},{"kind":"Field","id":{"krate":0,"index":3207},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\generics.rs","byte_start":234515,"byte_end":234526,"line_start":41,"line_end":41,"column_start":18,"column_end":29},"name":"0","qualname":"::generics::GenericParam::Lifetime::0","value":"generics::LifetimeDef","parent":{"krate":0,"index":3205},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3208},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\generics.rs","byte_start":234600,"byte_end":234605,"line_start":44,"line_end":44,"column_start":9,"column_end":14},"name":"Const","qualname":"::generics::GenericParam::Const","value":"GenericParam::Const(ConstParam)","parent":{"krate":0,"index":3201},"children":[],"decl_id":null,"docs":" A const generic parameter: `const LENGTH: usize`.\n","sig":null,"attributes":[{"value":"/ A const generic parameter: `const LENGTH: usize`.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\generics.rs","byte_start":234538,"byte_end":234591,"line_start":43,"line_end":43,"column_start":9,"column_end":62}}]},{"kind":"Field","id":{"krate":0,"index":3210},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\generics.rs","byte_start":234606,"byte_end":234616,"line_start":44,"line_end":44,"column_start":15,"column_end":25},"name":"0","qualname":"::generics::GenericParam::Const::0","value":"generics::ConstParam","parent":{"krate":0,"index":3208},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":3201},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\generics.rs","byte_start":234345,"byte_end":234357,"line_start":36,"line_end":36,"column_start":14,"column_end":26},"name":"GenericParam","qualname":"::generics::GenericParam","value":"enum GenericParam {\n    Type(TypeParam),\n    Lifetime(LifetimeDef),\n    Const(ConstParam),\n}","parent":null,"children":[{"krate":0,"index":3202},{"krate":0,"index":3205},{"krate":0,"index":3208}],"decl_id":null,"docs":" A generic type parameter, lifetime, or const generic: `T: Into<String>`,\n `'a: 'b`, `const LEN: usize`.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3217},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\generics.rs","byte_start":234899,"byte_end":234908,"line_start":54,"line_end":54,"column_start":16,"column_end":25},"name":"TypeParam","qualname":"::generics::TypeParam","value":"TypeParam { attrs, ident, colon_token, bounds, eq_token, default }","parent":null,"children":[{"krate":0,"index":3218},{"krate":0,"index":3219},{"krate":0,"index":3220},{"krate":0,"index":3221},{"krate":0,"index":3222},{"krate":0,"index":3223}],"decl_id":null,"docs":" A generic type parameter: `T: Into<String>`.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3218},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\generics.rs","byte_start":234923,"byte_end":234928,"line_start":55,"line_end":55,"column_start":13,"column_end":18},"name":"attrs","qualname":"::generics::TypeParam::attrs","value":"std::vec::Vec<attr::Attribute>","parent":{"krate":0,"index":3217},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3219},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\generics.rs","byte_start":234958,"byte_end":234963,"line_start":56,"line_end":56,"column_start":13,"column_end":18},"name":"ident","qualname":"::generics::TypeParam::ident","value":"proc_macro2::Ident","parent":{"krate":0,"index":3217},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3220},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\generics.rs","byte_start":234984,"byte_end":234995,"line_start":57,"line_end":57,"column_start":13,"column_end":24},"name":"colon_token","qualname":"::generics::TypeParam::colon_token","value":"std::option::Option<token::Colon>","parent":{"krate":0,"index":3217},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3221},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\generics.rs","byte_start":235028,"byte_end":235034,"line_start":58,"line_end":58,"column_start":13,"column_end":19},"name":"bounds","qualname":"::generics::TypeParam::bounds","value":"punctuated::Punctuated<generics::TypeParamBound, token::Add>","parent":{"krate":0,"index":3217},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3222},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\generics.rs","byte_start":235087,"byte_end":235095,"line_start":59,"line_end":59,"column_start":13,"column_end":21},"name":"eq_token","qualname":"::generics::TypeParam::eq_token","value":"std::option::Option<token::Eq>","parent":{"krate":0,"index":3217},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3223},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\generics.rs","byte_start":235128,"byte_end":235135,"line_start":60,"line_end":60,"column_start":13,"column_end":20},"name":"default","qualname":"::generics::TypeParam::default","value":"std::option::Option<ty::Type>","parent":{"krate":0,"index":3217},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3224},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\generics.rs","byte_start":235429,"byte_end":235440,"line_start":70,"line_end":70,"column_start":16,"column_end":27},"name":"LifetimeDef","qualname":"::generics::LifetimeDef","value":"LifetimeDef { attrs, lifetime, colon_token, bounds }","parent":null,"children":[{"krate":0,"index":3225},{"krate":0,"index":3226},{"krate":0,"index":3227},{"krate":0,"index":3228}],"decl_id":null,"docs":" A lifetime definition: `'a: 'b + 'c + 'd`.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3225},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\generics.rs","byte_start":235455,"byte_end":235460,"line_start":71,"line_end":71,"column_start":13,"column_end":18},"name":"attrs","qualname":"::generics::LifetimeDef::attrs","value":"std::vec::Vec<attr::Attribute>","parent":{"krate":0,"index":3224},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3226},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\generics.rs","byte_start":235490,"byte_end":235498,"line_start":72,"line_end":72,"column_start":13,"column_end":21},"name":"lifetime","qualname":"::generics::LifetimeDef::lifetime","value":"lifetime::Lifetime","parent":{"krate":0,"index":3224},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3227},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\generics.rs","byte_start":235522,"byte_end":235533,"line_start":73,"line_end":73,"column_start":13,"column_end":24},"name":"colon_token","qualname":"::generics::LifetimeDef::colon_token","value":"std::option::Option<token::Colon>","parent":{"krate":0,"index":3224},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3228},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\generics.rs","byte_start":235566,"byte_end":235572,"line_start":74,"line_end":74,"column_start":13,"column_end":19},"name":"bounds","qualname":"::generics::LifetimeDef::bounds","value":"punctuated::Punctuated<lifetime::Lifetime, token::Add>","parent":{"krate":0,"index":3224},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3229},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\generics.rs","byte_start":235892,"byte_end":235902,"line_start":84,"line_end":84,"column_start":16,"column_end":26},"name":"ConstParam","qualname":"::generics::ConstParam","value":"ConstParam { attrs, const_token, ident, colon_token, ty, eq_token, default }","parent":null,"children":[{"krate":0,"index":3230},{"krate":0,"index":3231},{"krate":0,"index":3232},{"krate":0,"index":3233},{"krate":0,"index":3234},{"krate":0,"index":3235},{"krate":0,"index":3236}],"decl_id":null,"docs":" A const generic parameter: `const LENGTH: usize`.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3230},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\generics.rs","byte_start":235917,"byte_end":235922,"line_start":85,"line_end":85,"column_start":13,"column_end":18},"name":"attrs","qualname":"::generics::ConstParam::attrs","value":"std::vec::Vec<attr::Attribute>","parent":{"krate":0,"index":3229},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3231},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\generics.rs","byte_start":235952,"byte_end":235963,"line_start":86,"line_end":86,"column_start":13,"column_end":24},"name":"const_token","qualname":"::generics::ConstParam::const_token","value":"token::Const","parent":{"krate":0,"index":3229},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3232},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\generics.rs","byte_start":235992,"byte_end":235997,"line_start":87,"line_end":87,"column_start":13,"column_end":18},"name":"ident","qualname":"::generics::ConstParam::ident","value":"proc_macro2::Ident","parent":{"krate":0,"index":3229},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3233},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\generics.rs","byte_start":236018,"byte_end":236029,"line_start":88,"line_end":88,"column_start":13,"column_end":24},"name":"colon_token","qualname":"::generics::ConstParam::colon_token","value":"token::Colon","parent":{"krate":0,"index":3229},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3234},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\generics.rs","byte_start":236054,"byte_end":236056,"line_start":89,"line_end":89,"column_start":13,"column_end":15},"name":"ty","qualname":"::generics::ConstParam::ty","value":"ty::Type","parent":{"krate":0,"index":3229},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3235},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\generics.rs","byte_start":236076,"byte_end":236084,"line_start":90,"line_end":90,"column_start":13,"column_end":21},"name":"eq_token","qualname":"::generics::ConstParam::eq_token","value":"std::option::Option<token::Eq>","parent":{"krate":0,"index":3229},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3236},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\generics.rs","byte_start":236117,"byte_end":236124,"line_start":91,"line_end":91,"column_start":13,"column_end":20},"name":"default","qualname":"::generics::ConstParam::default","value":"std::option::Option<expr::Expr>","parent":{"krate":0,"index":3229},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":378},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\generics.rs","byte_start":236184,"byte_end":236191,"line_start":96,"line_end":96,"column_start":8,"column_end":15},"name":"default","qualname":"<Generics as std::default::Default>::default","value":"fn default() -> Self","parent":{"krate":2,"index":3157},"children":[],"decl_id":{"krate":2,"index":3158},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":380},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\generics.rs","byte_start":236716,"byte_end":236727,"line_start":114,"line_end":114,"column_start":12,"column_end":23},"name":"type_params","qualname":"<Generics>::type_params","value":"fn type_params(&Self) -> TypeParams","parent":null,"children":[],"decl_id":null,"docs":" Returns an\n <code\n   style=\"padding-right:0;\">Iterator&lt;Item = &amp;</code><a\n   href=\"struct.TypeParam.html\"><code\n   style=\"padding-left:0;padding-right:0;\">TypeParam</code></a><code\n   style=\"padding-left:0;\">&gt;</code>\n over the type parameters in `self.params`.\n","sig":null,"attributes":[{"value":"/ Returns an","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\generics.rs","byte_start":236389,"byte_end":236403,"line_start":107,"line_end":107,"column_start":5,"column_end":19}},{"value":"/ <code","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\generics.rs","byte_start":236408,"byte_end":236417,"line_start":108,"line_end":108,"column_start":5,"column_end":14}},{"value":"/   style=\"padding-right:0;\">Iterator&lt;Item = &amp;</code><a","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\generics.rs","byte_start":236422,"byte_end":236486,"line_start":109,"line_end":109,"column_start":5,"column_end":69}},{"value":"/   href=\"struct.TypeParam.html\"><code","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\generics.rs","byte_start":236491,"byte_end":236531,"line_start":110,"line_end":110,"column_start":5,"column_end":45}},{"value":"/   style=\"padding-left:0;padding-right:0;\">TypeParam</code></a><code","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\generics.rs","byte_start":236536,"byte_end":236607,"line_start":111,"line_end":111,"column_start":5,"column_end":76}},{"value":"/   style=\"padding-left:0;\">&gt;</code>","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\generics.rs","byte_start":236612,"byte_end":236653,"line_start":112,"line_end":112,"column_start":5,"column_end":46}},{"value":"/ over the type parameters in `self.params`.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\generics.rs","byte_start":236658,"byte_end":236704,"line_start":113,"line_end":113,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":381},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\generics.rs","byte_start":237132,"byte_end":237147,"line_start":125,"line_end":125,"column_start":12,"column_end":27},"name":"type_params_mut","qualname":"<Generics>::type_params_mut","value":"fn type_params_mut(&mut Self) -> TypeParamsMut","parent":null,"children":[],"decl_id":null,"docs":" Returns an\n <code\n   style=\"padding-right:0;\">Iterator&lt;Item = &amp;mut </code><a\n   href=\"struct.TypeParam.html\"><code\n   style=\"padding-left:0;padding-right:0;\">TypeParam</code></a><code\n   style=\"padding-left:0;\">&gt;</code>\n over the type parameters in `self.params`.\n","sig":null,"attributes":[{"value":"/ Returns an","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\generics.rs","byte_start":236801,"byte_end":236815,"line_start":118,"line_end":118,"column_start":5,"column_end":19}},{"value":"/ <code","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\generics.rs","byte_start":236820,"byte_end":236829,"line_start":119,"line_end":119,"column_start":5,"column_end":14}},{"value":"/   style=\"padding-right:0;\">Iterator&lt;Item = &amp;mut </code><a","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\generics.rs","byte_start":236834,"byte_end":236902,"line_start":120,"line_end":120,"column_start":5,"column_end":73}},{"value":"/   href=\"struct.TypeParam.html\"><code","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\generics.rs","byte_start":236907,"byte_end":236947,"line_start":121,"line_end":121,"column_start":5,"column_end":45}},{"value":"/   style=\"padding-left:0;padding-right:0;\">TypeParam</code></a><code","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\generics.rs","byte_start":236952,"byte_end":237023,"line_start":122,"line_end":122,"column_start":5,"column_end":76}},{"value":"/   style=\"padding-left:0;\">&gt;</code>","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\generics.rs","byte_start":237028,"byte_end":237069,"line_start":123,"line_end":123,"column_start":5,"column_end":46}},{"value":"/ over the type parameters in `self.params`.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\generics.rs","byte_start":237074,"byte_end":237120,"line_start":124,"line_end":124,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":382},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\generics.rs","byte_start":237570,"byte_end":237579,"line_start":136,"line_end":136,"column_start":12,"column_end":21},"name":"lifetimes","qualname":"<Generics>::lifetimes","value":"fn lifetimes(&Self) -> Lifetimes","parent":null,"children":[],"decl_id":null,"docs":" Returns an\n <code\n   style=\"padding-right:0;\">Iterator&lt;Item = &amp;</code><a\n   href=\"struct.LifetimeDef.html\"><code\n   style=\"padding-left:0;padding-right:0;\">LifetimeDef</code></a><code\n   style=\"padding-left:0;\">&gt;</code>\n over the lifetime parameters in `self.params`.\n","sig":null,"attributes":[{"value":"/ Returns an","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\generics.rs","byte_start":237235,"byte_end":237249,"line_start":129,"line_end":129,"column_start":5,"column_end":19}},{"value":"/ <code","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\generics.rs","byte_start":237254,"byte_end":237263,"line_start":130,"line_end":130,"column_start":5,"column_end":14}},{"value":"/   style=\"padding-right:0;\">Iterator&lt;Item = &amp;</code><a","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\generics.rs","byte_start":237268,"byte_end":237332,"line_start":131,"line_end":131,"column_start":5,"column_end":69}},{"value":"/   href=\"struct.LifetimeDef.html\"><code","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\generics.rs","byte_start":237337,"byte_end":237379,"line_start":132,"line_end":132,"column_start":5,"column_end":47}},{"value":"/   style=\"padding-left:0;padding-right:0;\">LifetimeDef</code></a><code","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\generics.rs","byte_start":237384,"byte_end":237457,"line_start":133,"line_end":133,"column_start":5,"column_end":78}},{"value":"/   style=\"padding-left:0;\">&gt;</code>","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\generics.rs","byte_start":237462,"byte_end":237503,"line_start":134,"line_end":134,"column_start":5,"column_end":46}},{"value":"/ over the lifetime parameters in `self.params`.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\generics.rs","byte_start":237508,"byte_end":237558,"line_start":135,"line_end":135,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":383},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\generics.rs","byte_start":237990,"byte_end":238003,"line_start":147,"line_end":147,"column_start":12,"column_end":25},"name":"lifetimes_mut","qualname":"<Generics>::lifetimes_mut","value":"fn lifetimes_mut(&mut Self) -> LifetimesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns an\n <code\n   style=\"padding-right:0;\">Iterator&lt;Item = &amp;mut </code><a\n   href=\"struct.LifetimeDef.html\"><code\n   style=\"padding-left:0;padding-right:0;\">LifetimeDef</code></a><code\n   style=\"padding-left:0;\">&gt;</code>\n over the lifetime parameters in `self.params`.\n","sig":null,"attributes":[{"value":"/ Returns an","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\generics.rs","byte_start":237651,"byte_end":237665,"line_start":140,"line_end":140,"column_start":5,"column_end":19}},{"value":"/ <code","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\generics.rs","byte_start":237670,"byte_end":237679,"line_start":141,"line_end":141,"column_start":5,"column_end":14}},{"value":"/   style=\"padding-right:0;\">Iterator&lt;Item = &amp;mut </code><a","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\generics.rs","byte_start":237684,"byte_end":237752,"line_start":142,"line_end":142,"column_start":5,"column_end":73}},{"value":"/   href=\"struct.LifetimeDef.html\"><code","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\generics.rs","byte_start":237757,"byte_end":237799,"line_start":143,"line_end":143,"column_start":5,"column_end":47}},{"value":"/   style=\"padding-left:0;padding-right:0;\">LifetimeDef</code></a><code","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\generics.rs","byte_start":237804,"byte_end":237877,"line_start":144,"line_end":144,"column_start":5,"column_end":78}},{"value":"/   style=\"padding-left:0;\">&gt;</code>","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\generics.rs","byte_start":237882,"byte_end":237923,"line_start":145,"line_end":145,"column_start":5,"column_end":46}},{"value":"/ over the lifetime parameters in `self.params`.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\generics.rs","byte_start":237928,"byte_end":237978,"line_start":146,"line_end":146,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":384},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\generics.rs","byte_start":238422,"byte_end":238434,"line_start":158,"line_end":158,"column_start":12,"column_end":24},"name":"const_params","qualname":"<Generics>::const_params","value":"fn const_params(&Self) -> ConstParams","parent":null,"children":[],"decl_id":null,"docs":" Returns an\n <code\n   style=\"padding-right:0;\">Iterator&lt;Item = &amp;</code><a\n   href=\"struct.ConstParam.html\"><code\n   style=\"padding-left:0;padding-right:0;\">ConstParam</code></a><code\n   style=\"padding-left:0;\">&gt;</code>\n over the constant parameters in `self.params`.\n","sig":null,"attributes":[{"value":"/ Returns an","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\generics.rs","byte_start":238089,"byte_end":238103,"line_start":151,"line_end":151,"column_start":5,"column_end":19}},{"value":"/ <code","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\generics.rs","byte_start":238108,"byte_end":238117,"line_start":152,"line_end":152,"column_start":5,"column_end":14}},{"value":"/   style=\"padding-right:0;\">Iterator&lt;Item = &amp;</code><a","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\generics.rs","byte_start":238122,"byte_end":238186,"line_start":153,"line_end":153,"column_start":5,"column_end":69}},{"value":"/   href=\"struct.ConstParam.html\"><code","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\generics.rs","byte_start":238191,"byte_end":238232,"line_start":154,"line_end":154,"column_start":5,"column_end":46}},{"value":"/   style=\"padding-left:0;padding-right:0;\">ConstParam</code></a><code","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\generics.rs","byte_start":238237,"byte_end":238309,"line_start":155,"line_end":155,"column_start":5,"column_end":77}},{"value":"/   style=\"padding-left:0;\">&gt;</code>","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\generics.rs","byte_start":238314,"byte_end":238355,"line_start":156,"line_end":156,"column_start":5,"column_end":46}},{"value":"/ over the constant parameters in `self.params`.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\generics.rs","byte_start":238360,"byte_end":238410,"line_start":157,"line_end":157,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":385},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\generics.rs","byte_start":238847,"byte_end":238863,"line_start":169,"line_end":169,"column_start":12,"column_end":28},"name":"const_params_mut","qualname":"<Generics>::const_params_mut","value":"fn const_params_mut(&mut Self) -> ConstParamsMut","parent":null,"children":[],"decl_id":null,"docs":" Returns an\n <code\n   style=\"padding-right:0;\">Iterator&lt;Item = &amp;mut </code><a\n   href=\"struct.ConstParam.html\"><code\n   style=\"padding-left:0;padding-right:0;\">ConstParam</code></a><code\n   style=\"padding-left:0;\">&gt;</code>\n over the constant parameters in `self.params`.\n","sig":null,"attributes":[{"value":"/ Returns an","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\generics.rs","byte_start":238510,"byte_end":238524,"line_start":162,"line_end":162,"column_start":5,"column_end":19}},{"value":"/ <code","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\generics.rs","byte_start":238529,"byte_end":238538,"line_start":163,"line_end":163,"column_start":5,"column_end":14}},{"value":"/   style=\"padding-right:0;\">Iterator&lt;Item = &amp;mut </code><a","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\generics.rs","byte_start":238543,"byte_end":238611,"line_start":164,"line_end":164,"column_start":5,"column_end":73}},{"value":"/   href=\"struct.ConstParam.html\"><code","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\generics.rs","byte_start":238616,"byte_end":238657,"line_start":165,"line_end":165,"column_start":5,"column_end":46}},{"value":"/   style=\"padding-left:0;padding-right:0;\">ConstParam</code></a><code","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\generics.rs","byte_start":238662,"byte_end":238734,"line_start":166,"line_end":166,"column_start":5,"column_end":77}},{"value":"/   style=\"padding-left:0;\">&gt;</code>","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\generics.rs","byte_start":238739,"byte_end":238780,"line_start":167,"line_end":167,"column_start":5,"column_end":46}},{"value":"/ over the constant parameters in `self.params`.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\generics.rs","byte_start":238785,"byte_end":238835,"line_start":168,"line_end":168,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":386},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\generics.rs","byte_start":239041,"byte_end":239058,"line_start":174,"line_end":174,"column_start":12,"column_end":29},"name":"make_where_clause","qualname":"<Generics>::make_where_clause","value":"fn make_where_clause(&mut Self) -> &mut WhereClause","parent":null,"children":[],"decl_id":null,"docs":" Initializes an empty `where`-clause if there is not one present already.\n","sig":null,"attributes":[{"value":"/ Initializes an empty `where`-clause if there is not one present already.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\generics.rs","byte_start":238953,"byte_end":239029,"line_start":173,"line_end":173,"column_start":5,"column_end":81}}]},{"kind":"Struct","id":{"krate":0,"index":388},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\generics.rs","byte_start":239281,"byte_end":239291,"line_start":182,"line_end":182,"column_start":12,"column_end":22},"name":"TypeParams","qualname":"::generics::TypeParams","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":395},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\generics.rs","byte_start":239400,"byte_end":239404,"line_start":187,"line_end":187,"column_start":8,"column_end":12},"name":"next","qualname":"<TypeParams as std::iter::Iterator>::next","value":"fn next(&mut Self) -> Option<Self::Item>","parent":{"krate":2,"index":8481},"children":[],"decl_id":{"krate":2,"index":8483},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":396},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\generics.rs","byte_start":239712,"byte_end":239725,"line_start":200,"line_end":200,"column_start":12,"column_end":25},"name":"TypeParamsMut","qualname":"::generics::TypeParamsMut","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":403},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\generics.rs","byte_start":239844,"byte_end":239848,"line_start":205,"line_end":205,"column_start":8,"column_end":12},"name":"next","qualname":"<TypeParamsMut as std::iter::Iterator>::next","value":"fn next(&mut Self) -> Option<Self::Item>","parent":{"krate":2,"index":8481},"children":[],"decl_id":{"krate":2,"index":8483},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":404},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\generics.rs","byte_start":240156,"byte_end":240165,"line_start":218,"line_end":218,"column_start":12,"column_end":21},"name":"Lifetimes","qualname":"::generics::Lifetimes","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":411},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\generics.rs","byte_start":240275,"byte_end":240279,"line_start":223,"line_end":223,"column_start":8,"column_end":12},"name":"next","qualname":"<Lifetimes as std::iter::Iterator>::next","value":"fn next(&mut Self) -> Option<Self::Item>","parent":{"krate":2,"index":8481},"children":[],"decl_id":{"krate":2,"index":8483},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":412},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\generics.rs","byte_start":240587,"byte_end":240599,"line_start":236,"line_end":236,"column_start":12,"column_end":24},"name":"LifetimesMut","qualname":"::generics::LifetimesMut","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":419},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\generics.rs","byte_start":240719,"byte_end":240723,"line_start":241,"line_end":241,"column_start":8,"column_end":12},"name":"next","qualname":"<LifetimesMut as std::iter::Iterator>::next","value":"fn next(&mut Self) -> Option<Self::Item>","parent":{"krate":2,"index":8481},"children":[],"decl_id":{"krate":2,"index":8483},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":420},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\generics.rs","byte_start":241031,"byte_end":241042,"line_start":254,"line_end":254,"column_start":12,"column_end":23},"name":"ConstParams","qualname":"::generics::ConstParams","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":427},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\generics.rs","byte_start":241153,"byte_end":241157,"line_start":259,"line_end":259,"column_start":8,"column_end":12},"name":"next","qualname":"<ConstParams as std::iter::Iterator>::next","value":"fn next(&mut Self) -> Option<Self::Item>","parent":{"krate":2,"index":8481},"children":[],"decl_id":{"krate":2,"index":8483},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":428},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\generics.rs","byte_start":241468,"byte_end":241482,"line_start":272,"line_end":272,"column_start":12,"column_end":26},"name":"ConstParamsMut","qualname":"::generics::ConstParamsMut","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":435},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\generics.rs","byte_start":241603,"byte_end":241607,"line_start":277,"line_end":277,"column_start":8,"column_end":12},"name":"next","qualname":"<ConstParamsMut as std::iter::Iterator>::next","value":"fn next(&mut Self) -> Option<Self::Item>","parent":{"krate":2,"index":8481},"children":[],"decl_id":{"krate":2,"index":8483},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3237},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\generics.rs","byte_start":246294,"byte_end":246308,"line_start":427,"line_end":427,"column_start":16,"column_end":30},"name":"BoundLifetimes","qualname":"::generics::BoundLifetimes","value":"BoundLifetimes { for_token, lt_token, lifetimes, gt_token }","parent":null,"children":[{"krate":0,"index":3238},{"krate":0,"index":3239},{"krate":0,"index":3240},{"krate":0,"index":3241}],"decl_id":null,"docs":" A set of bound lifetimes: `for<'a, 'b, 'c>`.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3238},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\generics.rs","byte_start":246323,"byte_end":246332,"line_start":428,"line_end":428,"column_start":13,"column_end":22},"name":"for_token","qualname":"::generics::BoundLifetimes::for_token","value":"token::For","parent":{"krate":0,"index":3237},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3239},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\generics.rs","byte_start":246359,"byte_end":246367,"line_start":429,"line_end":429,"column_start":13,"column_end":21},"name":"lt_token","qualname":"::generics::BoundLifetimes::lt_token","value":"token::Lt","parent":{"krate":0,"index":3237},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3240},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\generics.rs","byte_start":246392,"byte_end":246401,"line_start":430,"line_end":430,"column_start":13,"column_end":22},"name":"lifetimes","qualname":"::generics::BoundLifetimes::lifetimes","value":"punctuated::Punctuated<generics::LifetimeDef, token::Comma>","parent":{"krate":0,"index":3237},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3241},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\generics.rs","byte_start":246451,"byte_end":246459,"line_start":431,"line_end":431,"column_start":13,"column_end":21},"name":"gt_token","qualname":"::generics::BoundLifetimes::gt_token","value":"token::Gt","parent":{"krate":0,"index":3237},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":437},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\generics.rs","byte_start":246522,"byte_end":246529,"line_start":436,"line_end":436,"column_start":8,"column_end":15},"name":"default","qualname":"<BoundLifetimes as std::default::Default>::default","value":"fn default() -> Self","parent":{"krate":2,"index":3157},"children":[],"decl_id":{"krate":2,"index":3158},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":439},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\generics.rs","byte_start":246785,"byte_end":246788,"line_start":447,"line_end":447,"column_start":12,"column_end":15},"name":"new","qualname":"<LifetimeDef>::new","value":"fn new(Lifetime) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":441},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\generics.rs","byte_start":247023,"byte_end":247027,"line_start":458,"line_end":458,"column_start":8,"column_end":12},"name":"from","qualname":"<TypeParam as std::convert::From>::from","value":"fn from(Ident) -> Self","parent":{"krate":2,"index":3085},"children":[],"decl_id":{"krate":2,"index":3087},"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3243},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\generics.rs","byte_start":247577,"byte_end":247582,"line_start":477,"line_end":477,"column_start":9,"column_end":14},"name":"Trait","qualname":"::generics::TypeParamBound::Trait","value":"TypeParamBound::Trait(TraitBound)","parent":{"krate":0,"index":3242},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3245},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\generics.rs","byte_start":247583,"byte_end":247593,"line_start":477,"line_end":477,"column_start":15,"column_end":25},"name":"0","qualname":"::generics::TypeParamBound::Trait::0","value":"generics::TraitBound","parent":{"krate":0,"index":3243},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3246},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\generics.rs","byte_start":247604,"byte_end":247612,"line_start":478,"line_end":478,"column_start":9,"column_end":17},"name":"Lifetime","qualname":"::generics::TypeParamBound::Lifetime","value":"TypeParamBound::Lifetime(Lifetime)","parent":{"krate":0,"index":3242},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3248},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\generics.rs","byte_start":247613,"byte_end":247621,"line_start":478,"line_end":478,"column_start":18,"column_end":26},"name":"0","qualname":"::generics::TypeParamBound::Lifetime::0","value":"lifetime::Lifetime","parent":{"krate":0,"index":3246},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":3242},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\generics.rs","byte_start":247552,"byte_end":247566,"line_start":476,"line_end":476,"column_start":14,"column_end":28},"name":"TypeParamBound","qualname":"::generics::TypeParamBound","value":"enum TypeParamBound { Trait(TraitBound), Lifetime(Lifetime), }","parent":null,"children":[{"krate":0,"index":3243},{"krate":0,"index":3246}],"decl_id":null,"docs":" A trait or lifetime used as a bound on a type parameter.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3253},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\generics.rs","byte_start":247904,"byte_end":247914,"line_start":488,"line_end":488,"column_start":16,"column_end":26},"name":"TraitBound","qualname":"::generics::TraitBound","value":"TraitBound { paren_token, modifier, lifetimes, path }","parent":null,"children":[{"krate":0,"index":3254},{"krate":0,"index":3255},{"krate":0,"index":3256},{"krate":0,"index":3257}],"decl_id":null,"docs":" A trait used as a bound on a type parameter.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3254},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\generics.rs","byte_start":247929,"byte_end":247940,"line_start":489,"line_end":489,"column_start":13,"column_end":24},"name":"paren_token","qualname":"::generics::TraitBound::paren_token","value":"std::option::Option<token::Paren>","parent":{"krate":0,"index":3253},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3255},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\generics.rs","byte_start":247976,"byte_end":247984,"line_start":490,"line_end":490,"column_start":13,"column_end":21},"name":"modifier","qualname":"::generics::TraitBound::modifier","value":"generics::TraitBoundModifier","parent":{"krate":0,"index":3253},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3256},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\generics.rs","byte_start":248068,"byte_end":248077,"line_start":492,"line_end":492,"column_start":13,"column_end":22},"name":"lifetimes","qualname":"::generics::TraitBound::lifetimes","value":"std::option::Option<generics::BoundLifetimes>","parent":{"krate":0,"index":3253},"children":[],"decl_id":null,"docs":" The `for<'a>` in `for<'a> Foo<&'a T>`\n","sig":null,"attributes":[{"value":"/ The `for<'a>` in `for<'a> Foo<&'a T>`","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\generics.rs","byte_start":248014,"byte_end":248055,"line_start":491,"line_end":491,"column_start":9,"column_end":50}}]},{"kind":"Field","id":{"krate":0,"index":3257},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\generics.rs","byte_start":248168,"byte_end":248172,"line_start":494,"line_end":494,"column_start":13,"column_end":17},"name":"path","qualname":"::generics::TraitBound::path","value":"path::Path","parent":{"krate":0,"index":3253},"children":[],"decl_id":null,"docs":" The `Foo<&'a T>` in `for<'a> Foo<&'a T>`\n","sig":null,"attributes":[{"value":"/ The `Foo<&'a T>` in `for<'a> Foo<&'a T>`","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\generics.rs","byte_start":248111,"byte_end":248155,"line_start":493,"line_end":493,"column_start":9,"column_end":53}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3259},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\generics.rs","byte_start":248522,"byte_end":248526,"line_start":506,"line_end":506,"column_start":9,"column_end":13},"name":"None","qualname":"::generics::TraitBoundModifier::None","value":"TraitBoundModifier::None","parent":{"krate":0,"index":3258},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3261},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\generics.rs","byte_start":248536,"byte_end":248541,"line_start":507,"line_end":507,"column_start":9,"column_end":14},"name":"Maybe","qualname":"::generics::TraitBoundModifier::Maybe","value":"TraitBoundModifier::Maybe(crate::token::Question)","parent":{"krate":0,"index":3258},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3263},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\generics.rs","byte_start":248542,"byte_end":248551,"line_start":507,"line_end":507,"column_start":15,"column_end":24},"name":"0","qualname":"::generics::TraitBoundModifier::Maybe::0","value":"token::Question","parent":{"krate":0,"index":3261},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":3258},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\generics.rs","byte_start":248493,"byte_end":248511,"line_start":505,"line_end":505,"column_start":14,"column_end":32},"name":"TraitBoundModifier","qualname":"::generics::TraitBoundModifier","value":"enum TraitBoundModifier { None, Maybe(crate::token::Question), }","parent":null,"children":[{"krate":0,"index":3259},{"krate":0,"index":3261}],"decl_id":null,"docs":" A modifier on a trait bound, currently only used for the `?` in\n `?Sized`.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3264},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\generics.rs","byte_start":248872,"byte_end":248883,"line_start":518,"line_end":518,"column_start":16,"column_end":27},"name":"WhereClause","qualname":"::generics::WhereClause","value":"WhereClause { where_token, predicates }","parent":null,"children":[{"krate":0,"index":3265},{"krate":0,"index":3266}],"decl_id":null,"docs":" A `where` clause in a definition: `where T: Deserialize<'de>, D:\n 'static`.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3265},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\generics.rs","byte_start":248898,"byte_end":248909,"line_start":519,"line_end":519,"column_start":13,"column_end":24},"name":"where_token","qualname":"::generics::WhereClause::where_token","value":"token::Where","parent":{"krate":0,"index":3264},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3266},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\generics.rs","byte_start":248938,"byte_end":248948,"line_start":520,"line_end":520,"column_start":13,"column_end":23},"name":"predicates","qualname":"::generics::WhereClause::predicates","value":"punctuated::Punctuated<generics::WherePredicate, token::Comma>","parent":{"krate":0,"index":3264},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3268},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\generics.rs","byte_start":249544,"byte_end":249548,"line_start":538,"line_end":538,"column_start":9,"column_end":13},"name":"Type","qualname":"::generics::WherePredicate::Type","value":"WherePredicate::Type(PredicateType)","parent":{"krate":0,"index":3267},"children":[],"decl_id":null,"docs":" A type predicate in a `where` clause: `for<'c> Foo<'c>: Trait<'c>`.\n","sig":null,"attributes":[{"value":"/ A type predicate in a `where` clause: `for<'c> Foo<'c>: Trait<'c>`.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\generics.rs","byte_start":249464,"byte_end":249535,"line_start":537,"line_end":537,"column_start":9,"column_end":80}}]},{"kind":"Field","id":{"krate":0,"index":3270},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\generics.rs","byte_start":249549,"byte_end":249562,"line_start":538,"line_end":538,"column_start":14,"column_end":27},"name":"0","qualname":"::generics::WherePredicate::Type::0","value":"generics::PredicateType","parent":{"krate":0,"index":3268},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3271},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\generics.rs","byte_start":249643,"byte_end":249651,"line_start":541,"line_end":541,"column_start":9,"column_end":17},"name":"Lifetime","qualname":"::generics::WherePredicate::Lifetime","value":"WherePredicate::Lifetime(PredicateLifetime)","parent":{"krate":0,"index":3267},"children":[],"decl_id":null,"docs":" A lifetime predicate in a `where` clause: `'a: 'b + 'c`.\n","sig":null,"attributes":[{"value":"/ A lifetime predicate in a `where` clause: `'a: 'b + 'c`.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\generics.rs","byte_start":249574,"byte_end":249634,"line_start":540,"line_end":540,"column_start":9,"column_end":69}}]},{"kind":"Field","id":{"krate":0,"index":3273},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\generics.rs","byte_start":249652,"byte_end":249669,"line_start":541,"line_end":541,"column_start":18,"column_end":35},"name":"0","qualname":"::generics::WherePredicate::Lifetime::0","value":"generics::PredicateLifetime","parent":{"krate":0,"index":3271},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3274},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\generics.rs","byte_start":249750,"byte_end":249752,"line_start":544,"line_end":544,"column_start":9,"column_end":11},"name":"Eq","qualname":"::generics::WherePredicate::Eq","value":"WherePredicate::Eq(PredicateEq)","parent":{"krate":0,"index":3267},"children":[],"decl_id":null,"docs":" An equality predicate in a `where` clause (unsupported).\n","sig":null,"attributes":[{"value":"/ An equality predicate in a `where` clause (unsupported).","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\generics.rs","byte_start":249681,"byte_end":249741,"line_start":543,"line_end":543,"column_start":9,"column_end":69}}]},{"kind":"Field","id":{"krate":0,"index":3276},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\generics.rs","byte_start":249753,"byte_end":249764,"line_start":544,"line_end":544,"column_start":12,"column_end":23},"name":"0","qualname":"::generics::WherePredicate::Eq::0","value":"generics::PredicateEq","parent":{"krate":0,"index":3274},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":3267},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\generics.rs","byte_start":249439,"byte_end":249453,"line_start":536,"line_end":536,"column_start":14,"column_end":28},"name":"WherePredicate","qualname":"::generics::WherePredicate","value":"enum WherePredicate {\n    Type(PredicateType),\n    Lifetime(PredicateLifetime),\n    Eq(PredicateEq),\n}","parent":null,"children":[{"krate":0,"index":3268},{"krate":0,"index":3271},{"krate":0,"index":3274}],"decl_id":null,"docs":" A single predicate in a `where` clause: `T: Deserialize<'de>`.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3283},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\generics.rs","byte_start":250070,"byte_end":250083,"line_start":554,"line_end":554,"column_start":16,"column_end":29},"name":"PredicateType","qualname":"::generics::PredicateType","value":"PredicateType { lifetimes, bounded_ty, colon_token, bounds }","parent":null,"children":[{"krate":0,"index":3284},{"krate":0,"index":3285},{"krate":0,"index":3286},{"krate":0,"index":3287}],"decl_id":null,"docs":" A type predicate in a `where` clause: `for<'c> Foo<'c>: Trait<'c>`.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3284},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\generics.rs","byte_start":250145,"byte_end":250154,"line_start":556,"line_end":556,"column_start":13,"column_end":22},"name":"lifetimes","qualname":"::generics::PredicateType::lifetimes","value":"std::option::Option<generics::BoundLifetimes>","parent":{"krate":0,"index":3283},"children":[],"decl_id":null,"docs":" Any lifetimes from a `for` binding\n","sig":null,"attributes":[{"value":"/ Any lifetimes from a `for` binding","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\generics.rs","byte_start":250094,"byte_end":250132,"line_start":555,"line_end":555,"column_start":9,"column_end":47}}]},{"kind":"Field","id":{"krate":0,"index":3285},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\generics.rs","byte_start":250227,"byte_end":250237,"line_start":558,"line_end":558,"column_start":13,"column_end":23},"name":"bounded_ty","qualname":"::generics::PredicateType::bounded_ty","value":"ty::Type","parent":{"krate":0,"index":3283},"children":[],"decl_id":null,"docs":" The type being bounded\n","sig":null,"attributes":[{"value":"/ The type being bounded","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\generics.rs","byte_start":250188,"byte_end":250214,"line_start":557,"line_end":557,"column_start":9,"column_end":35}}]},{"kind":"Field","id":{"krate":0,"index":3286},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\generics.rs","byte_start":250257,"byte_end":250268,"line_start":559,"line_end":559,"column_start":13,"column_end":24},"name":"colon_token","qualname":"::generics::PredicateType::colon_token","value":"token::Colon","parent":{"krate":0,"index":3283},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3287},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\generics.rs","byte_start":250354,"byte_end":250360,"line_start":561,"line_end":561,"column_start":13,"column_end":19},"name":"bounds","qualname":"::generics::PredicateType::bounds","value":"punctuated::Punctuated<generics::TypeParamBound, token::Add>","parent":{"krate":0,"index":3283},"children":[],"decl_id":null,"docs":" Trait and lifetime bounds (`Clone+Send+'static`)\n","sig":null,"attributes":[{"value":"/ Trait and lifetime bounds (`Clone+Send+'static`)","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\generics.rs","byte_start":250289,"byte_end":250341,"line_start":560,"line_end":560,"column_start":9,"column_end":61}}]},{"kind":"Struct","id":{"krate":0,"index":3288},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\generics.rs","byte_start":250693,"byte_end":250710,"line_start":571,"line_end":571,"column_start":16,"column_end":33},"name":"PredicateLifetime","qualname":"::generics::PredicateLifetime","value":"PredicateLifetime { lifetime, colon_token, bounds }","parent":null,"children":[{"krate":0,"index":3289},{"krate":0,"index":3290},{"krate":0,"index":3291}],"decl_id":null,"docs":" A lifetime predicate in a `where` clause: `'a: 'b + 'c`.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3289},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\generics.rs","byte_start":250725,"byte_end":250733,"line_start":572,"line_end":572,"column_start":13,"column_end":21},"name":"lifetime","qualname":"::generics::PredicateLifetime::lifetime","value":"lifetime::Lifetime","parent":{"krate":0,"index":3288},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3290},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\generics.rs","byte_start":250757,"byte_end":250768,"line_start":573,"line_end":573,"column_start":13,"column_end":24},"name":"colon_token","qualname":"::generics::PredicateLifetime::colon_token","value":"token::Colon","parent":{"krate":0,"index":3288},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3291},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\generics.rs","byte_start":250793,"byte_end":250799,"line_start":574,"line_end":574,"column_start":13,"column_end":19},"name":"bounds","qualname":"::generics::PredicateLifetime::bounds","value":"punctuated::Punctuated<lifetime::Lifetime, token::Add>","parent":{"krate":0,"index":3288},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3292},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\generics.rs","byte_start":251126,"byte_end":251137,"line_start":584,"line_end":584,"column_start":16,"column_end":27},"name":"PredicateEq","qualname":"::generics::PredicateEq","value":"PredicateEq { lhs_ty, eq_token, rhs_ty }","parent":null,"children":[{"krate":0,"index":3293},{"krate":0,"index":3294},{"krate":0,"index":3295}],"decl_id":null,"docs":" An equality predicate in a `where` clause (unsupported).","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3293},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\generics.rs","byte_start":251152,"byte_end":251158,"line_start":585,"line_end":585,"column_start":13,"column_end":19},"name":"lhs_ty","qualname":"::generics::PredicateEq::lhs_ty","value":"ty::Type","parent":{"krate":0,"index":3292},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3294},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\generics.rs","byte_start":251178,"byte_end":251186,"line_start":586,"line_end":586,"column_start":13,"column_end":21},"name":"eq_token","qualname":"::generics::PredicateEq::eq_token","value":"token::Eq","parent":{"krate":0,"index":3292},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3295},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\generics.rs","byte_start":251211,"byte_end":251217,"line_start":587,"line_end":587,"column_start":13,"column_end":19},"name":"rhs_ty","qualname":"::generics::PredicateEq::rhs_ty","value":"ty::Type","parent":{"krate":0,"index":3292},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3297},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":279966,"byte_end":279971,"line_start":23,"line_end":23,"column_start":9,"column_end":14},"name":"Const","qualname":"::item::Item::Const","value":"Item::Const(ItemConst)","parent":{"krate":0,"index":3296},"children":[],"decl_id":null,"docs":" A constant item: `const MAX: u16 = 65535`.\n","sig":null,"attributes":[{"value":"/ A constant item: `const MAX: u16 = 65535`.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":279911,"byte_end":279957,"line_start":22,"line_end":22,"column_start":9,"column_end":55}}]},{"kind":"Field","id":{"krate":0,"index":3299},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":279972,"byte_end":279981,"line_start":23,"line_end":23,"column_start":15,"column_end":24},"name":"0","qualname":"::item::Item::Const::0","value":"item::ItemConst","parent":{"krate":0,"index":3297},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3300},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":280058,"byte_end":280062,"line_start":26,"line_end":26,"column_start":9,"column_end":13},"name":"Enum","qualname":"::item::Item::Enum","value":"Item::Enum(ItemEnum)","parent":{"krate":0,"index":3296},"children":[],"decl_id":null,"docs":" An enum definition: `enum Foo<A, B> { A(A), B(B) }`.\n","sig":null,"attributes":[{"value":"/ An enum definition: `enum Foo<A, B> { A(A), B(B) }`.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":279993,"byte_end":280049,"line_start":25,"line_end":25,"column_start":9,"column_end":65}}]},{"kind":"Field","id":{"krate":0,"index":3302},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":280063,"byte_end":280071,"line_start":26,"line_end":26,"column_start":14,"column_end":22},"name":"0","qualname":"::item::Item::Enum::0","value":"item::ItemEnum","parent":{"krate":0,"index":3300},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3303},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":280141,"byte_end":280152,"line_start":29,"line_end":29,"column_start":9,"column_end":20},"name":"ExternCrate","qualname":"::item::Item::ExternCrate","value":"Item::ExternCrate(ItemExternCrate)","parent":{"krate":0,"index":3296},"children":[],"decl_id":null,"docs":" An `extern crate` item: `extern crate serde`.\n","sig":null,"attributes":[{"value":"/ An `extern crate` item: `extern crate serde`.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":280083,"byte_end":280132,"line_start":28,"line_end":28,"column_start":9,"column_end":58}}]},{"kind":"Field","id":{"krate":0,"index":3305},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":280153,"byte_end":280168,"line_start":29,"line_end":29,"column_start":21,"column_end":36},"name":"0","qualname":"::item::Item::ExternCrate::0","value":"item::ItemExternCrate","parent":{"krate":0,"index":3303},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3306},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":280276,"byte_end":280278,"line_start":33,"line_end":33,"column_start":9,"column_end":11},"name":"Fn","qualname":"::item::Item::Fn","value":"Item::Fn(ItemFn)","parent":{"krate":0,"index":3296},"children":[],"decl_id":null,"docs":" A free-standing function: `fn process(n: usize) -> Result<()> { ...\n }`.\n","sig":null,"attributes":[{"value":"/ A free-standing function: `fn process(n: usize) -> Result<()> { ...","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":280180,"byte_end":280251,"line_start":31,"line_end":31,"column_start":9,"column_end":80}},{"value":"/ }`.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":280260,"byte_end":280267,"line_start":32,"line_end":32,"column_start":9,"column_end":16}}]},{"kind":"Field","id":{"krate":0,"index":3308},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":280279,"byte_end":280285,"line_start":33,"line_end":33,"column_start":12,"column_end":18},"name":"0","qualname":"::item::Item::Fn::0","value":"item::ItemFn","parent":{"krate":0,"index":3306},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3309},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":280357,"byte_end":280367,"line_start":36,"line_end":36,"column_start":9,"column_end":19},"name":"ForeignMod","qualname":"::item::Item::ForeignMod","value":"Item::ForeignMod(ItemForeignMod)","parent":{"krate":0,"index":3296},"children":[],"decl_id":null,"docs":" A block of foreign items: `extern \"C\" { ... }`.\n","sig":null,"attributes":[{"value":"/ A block of foreign items: `extern \"C\" { ... }`.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":280297,"byte_end":280348,"line_start":35,"line_end":35,"column_start":9,"column_end":60}}]},{"kind":"Field","id":{"krate":0,"index":3311},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":280368,"byte_end":280382,"line_start":36,"line_end":36,"column_start":20,"column_end":34},"name":"0","qualname":"::item::Item::ForeignMod::0","value":"item::ItemForeignMod","parent":{"krate":0,"index":3309},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3312},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":280506,"byte_end":280510,"line_start":40,"line_end":40,"column_start":9,"column_end":13},"name":"Impl","qualname":"::item::Item::Impl","value":"Item::Impl(ItemImpl)","parent":{"krate":0,"index":3296},"children":[],"decl_id":null,"docs":" An impl block providing trait or associated items: `impl<A> Trait\n for Data<A> { ... }`.\n","sig":null,"attributes":[{"value":"/ An impl block providing trait or associated items: `impl<A> Trait","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":280394,"byte_end":280463,"line_start":38,"line_end":38,"column_start":9,"column_end":78}},{"value":"/ for Data<A> { ... }`.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":280472,"byte_end":280497,"line_start":39,"line_end":39,"column_start":9,"column_end":34}}]},{"kind":"Field","id":{"krate":0,"index":3314},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":280511,"byte_end":280519,"line_start":40,"line_end":40,"column_start":14,"column_end":22},"name":"0","qualname":"::item::Item::Impl::0","value":"item::ItemImpl","parent":{"krate":0,"index":3312},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3315},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":280606,"byte_end":280611,"line_start":43,"line_end":43,"column_start":9,"column_end":14},"name":"Macro","qualname":"::item::Item::Macro","value":"Item::Macro(ItemMacro)","parent":{"krate":0,"index":3296},"children":[],"decl_id":null,"docs":" A macro invocation, which includes `macro_rules!` definitions.\n","sig":null,"attributes":[{"value":"/ A macro invocation, which includes `macro_rules!` definitions.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":280531,"byte_end":280597,"line_start":42,"line_end":42,"column_start":9,"column_end":75}}]},{"kind":"Field","id":{"krate":0,"index":3317},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":280612,"byte_end":280621,"line_start":43,"line_end":43,"column_start":15,"column_end":24},"name":"0","qualname":"::item::Item::Macro::0","value":"item::ItemMacro","parent":{"krate":0,"index":3315},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3318},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":280710,"byte_end":280716,"line_start":46,"line_end":46,"column_start":9,"column_end":15},"name":"Macro2","qualname":"::item::Item::Macro2","value":"Item::Macro2(ItemMacro2)","parent":{"krate":0,"index":3296},"children":[],"decl_id":null,"docs":" A 2.0-style declarative macro introduced by the `macro` keyword.\n","sig":null,"attributes":[{"value":"/ A 2.0-style declarative macro introduced by the `macro` keyword.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":280633,"byte_end":280701,"line_start":45,"line_end":45,"column_start":9,"column_end":77}}]},{"kind":"Field","id":{"krate":0,"index":3320},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":280717,"byte_end":280727,"line_start":46,"line_end":46,"column_start":16,"column_end":26},"name":"0","qualname":"::item::Item::Macro2::0","value":"item::ItemMacro2","parent":{"krate":0,"index":3318},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3321},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":280811,"byte_end":280814,"line_start":49,"line_end":49,"column_start":9,"column_end":12},"name":"Mod","qualname":"::item::Item::Mod","value":"Item::Mod(ItemMod)","parent":{"krate":0,"index":3296},"children":[],"decl_id":null,"docs":" A module or module declaration: `mod m` or `mod m { ... }`.\n","sig":null,"attributes":[{"value":"/ A module or module declaration: `mod m` or `mod m { ... }`.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":280739,"byte_end":280802,"line_start":48,"line_end":48,"column_start":9,"column_end":72}}]},{"kind":"Field","id":{"krate":0,"index":3323},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":280815,"byte_end":280822,"line_start":49,"line_end":49,"column_start":13,"column_end":20},"name":"0","qualname":"::item::Item::Mod::0","value":"item::ItemMod","parent":{"krate":0,"index":3321},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3324},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":280893,"byte_end":280899,"line_start":52,"line_end":52,"column_start":9,"column_end":15},"name":"Static","qualname":"::item::Item::Static","value":"Item::Static(ItemStatic)","parent":{"krate":0,"index":3296},"children":[],"decl_id":null,"docs":" A static item: `static BIKE: Shed = Shed(42)`.\n","sig":null,"attributes":[{"value":"/ A static item: `static BIKE: Shed = Shed(42)`.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":280834,"byte_end":280884,"line_start":51,"line_end":51,"column_start":9,"column_end":59}}]},{"kind":"Field","id":{"krate":0,"index":3326},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":280900,"byte_end":280910,"line_start":52,"line_end":52,"column_start":16,"column_end":26},"name":"0","qualname":"::item::Item::Static::0","value":"item::ItemStatic","parent":{"krate":0,"index":3324},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3327},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":280981,"byte_end":280987,"line_start":55,"line_end":55,"column_start":9,"column_end":15},"name":"Struct","qualname":"::item::Item::Struct","value":"Item::Struct(ItemStruct)","parent":{"krate":0,"index":3296},"children":[],"decl_id":null,"docs":" A struct definition: `struct Foo<A> { x: A }`.\n","sig":null,"attributes":[{"value":"/ A struct definition: `struct Foo<A> { x: A }`.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":280922,"byte_end":280972,"line_start":54,"line_end":54,"column_start":9,"column_end":59}}]},{"kind":"Field","id":{"krate":0,"index":3329},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":280988,"byte_end":280998,"line_start":55,"line_end":55,"column_start":16,"column_end":26},"name":"0","qualname":"::item::Item::Struct::0","value":"item::ItemStruct","parent":{"krate":0,"index":3327},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3330},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":281072,"byte_end":281077,"line_start":58,"line_end":58,"column_start":9,"column_end":14},"name":"Trait","qualname":"::item::Item::Trait","value":"Item::Trait(ItemTrait)","parent":{"krate":0,"index":3296},"children":[],"decl_id":null,"docs":" A trait definition: `pub trait Iterator { ... }`.\n","sig":null,"attributes":[{"value":"/ A trait definition: `pub trait Iterator { ... }`.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":281010,"byte_end":281063,"line_start":57,"line_end":57,"column_start":9,"column_end":62}}]},{"kind":"Field","id":{"krate":0,"index":3332},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":281078,"byte_end":281087,"line_start":58,"line_end":58,"column_start":15,"column_end":24},"name":"0","qualname":"::item::Item::Trait::0","value":"item::ItemTrait","parent":{"krate":0,"index":3330},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3333},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":281174,"byte_end":281184,"line_start":61,"line_end":61,"column_start":9,"column_end":19},"name":"TraitAlias","qualname":"::item::Item::TraitAlias","value":"Item::TraitAlias(ItemTraitAlias)","parent":{"krate":0,"index":3296},"children":[],"decl_id":null,"docs":" A trait alias: `pub trait SharableIterator = Iterator + Sync`.\n","sig":null,"attributes":[{"value":"/ A trait alias: `pub trait SharableIterator = Iterator + Sync`.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":281099,"byte_end":281165,"line_start":60,"line_end":60,"column_start":9,"column_end":75}}]},{"kind":"Field","id":{"krate":0,"index":3335},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":281185,"byte_end":281199,"line_start":61,"line_end":61,"column_start":20,"column_end":34},"name":"0","qualname":"::item::Item::TraitAlias::0","value":"item::ItemTraitAlias","parent":{"krate":0,"index":3333},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3336},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":281289,"byte_end":281293,"line_start":64,"line_end":64,"column_start":9,"column_end":13},"name":"Type","qualname":"::item::Item::Type","value":"Item::Type(ItemType)","parent":{"krate":0,"index":3296},"children":[],"decl_id":null,"docs":" A type alias: `type Result<T> = std::result::Result<T, MyError>`.\n","sig":null,"attributes":[{"value":"/ A type alias: `type Result<T> = std::result::Result<T, MyError>`.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":281211,"byte_end":281280,"line_start":63,"line_end":63,"column_start":9,"column_end":78}}]},{"kind":"Field","id":{"krate":0,"index":3338},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":281294,"byte_end":281302,"line_start":64,"line_end":64,"column_start":14,"column_end":22},"name":"0","qualname":"::item::Item::Type::0","value":"item::ItemType","parent":{"krate":0,"index":3336},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3339},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":281380,"byte_end":281385,"line_start":67,"line_end":67,"column_start":9,"column_end":14},"name":"Union","qualname":"::item::Item::Union","value":"Item::Union(ItemUnion)","parent":{"krate":0,"index":3296},"children":[],"decl_id":null,"docs":" A union definition: `union Foo<A, B> { x: A, y: B }`.\n","sig":null,"attributes":[{"value":"/ A union definition: `union Foo<A, B> { x: A, y: B }`.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":281314,"byte_end":281371,"line_start":66,"line_end":66,"column_start":9,"column_end":66}}]},{"kind":"Field","id":{"krate":0,"index":3341},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":281386,"byte_end":281395,"line_start":67,"line_end":67,"column_start":15,"column_end":24},"name":"0","qualname":"::item::Item::Union::0","value":"item::ItemUnion","parent":{"krate":0,"index":3339},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3342},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":281471,"byte_end":281474,"line_start":70,"line_end":70,"column_start":9,"column_end":12},"name":"Use","qualname":"::item::Item::Use","value":"Item::Use(ItemUse)","parent":{"krate":0,"index":3296},"children":[],"decl_id":null,"docs":" A use declaration: `use std::collections::HashMap`.\n","sig":null,"attributes":[{"value":"/ A use declaration: `use std::collections::HashMap`.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":281407,"byte_end":281462,"line_start":69,"line_end":69,"column_start":9,"column_end":64}}]},{"kind":"Field","id":{"krate":0,"index":3344},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":281475,"byte_end":281482,"line_start":70,"line_end":70,"column_start":13,"column_end":20},"name":"0","qualname":"::item::Item::Use::0","value":"item::ItemUse","parent":{"krate":0,"index":3342},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3345},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":281553,"byte_end":281561,"line_start":73,"line_end":73,"column_start":9,"column_end":17},"name":"Verbatim","qualname":"::item::Item::Verbatim","value":"Item::Verbatim(TokenStream)","parent":{"krate":0,"index":3296},"children":[],"decl_id":null,"docs":" Tokens forming an item not interpreted by Syn.\n","sig":null,"attributes":[{"value":"/ Tokens forming an item not interpreted by Syn.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":281494,"byte_end":281544,"line_start":72,"line_end":72,"column_start":9,"column_end":59}}]},{"kind":"Field","id":{"krate":0,"index":3347},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":281562,"byte_end":281573,"line_start":73,"line_end":73,"column_start":18,"column_end":29},"name":"0","qualname":"::item::Item::Verbatim::0","value":"proc_macro2::TokenStream","parent":{"krate":0,"index":3345},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":3296},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":279896,"byte_end":279900,"line_start":21,"line_end":21,"column_start":14,"column_end":18},"name":"Item","qualname":"::item::Item","value":"enum Item {\n    Const(ItemConst),\n    Enum(ItemEnum),\n    ExternCrate(ItemExternCrate),\n    Fn(ItemFn),\n    ForeignMod(ItemForeignMod),\n    Impl(ItemImpl),\n    Macro(ItemMacro),\n    Macro2(ItemMacro2),\n    Mod(ItemMod),\n    Static(ItemStatic),\n    Struct(ItemStruct),\n    Trait(ItemTrait),\n    TraitAlias(ItemTraitAlias),\n    Type(ItemType),\n    Union(ItemUnion),\n    Use(ItemUse),\n    Verbatim(TokenStream),\n}","parent":null,"children":[{"krate":0,"index":3297},{"krate":0,"index":3300},{"krate":0,"index":3303},{"krate":0,"index":3306},{"krate":0,"index":3309},{"krate":0,"index":3312},{"krate":0,"index":3315},{"krate":0,"index":3318},{"krate":0,"index":3321},{"krate":0,"index":3324},{"krate":0,"index":3327},{"krate":0,"index":3330},{"krate":0,"index":3333},{"krate":0,"index":3336},{"krate":0,"index":3339},{"krate":0,"index":3342},{"krate":0,"index":3345}],"decl_id":null,"docs":" Things that can appear directly inside of a module or scope.","sig":null,"attributes":[{"value":"non_exhaustive","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":279866,"byte_end":279880,"line_start":20,"line_end":20,"column_start":44,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":3380},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":282700,"byte_end":282709,"line_start":104,"line_end":104,"column_start":16,"column_end":25},"name":"ItemConst","qualname":"::item::ItemConst","value":"ItemConst { attrs, vis, const_token, ident, colon_token, ty, eq_token, expr, semi_token }","parent":null,"children":[{"krate":0,"index":3381},{"krate":0,"index":3382},{"krate":0,"index":3383},{"krate":0,"index":3384},{"krate":0,"index":3385},{"krate":0,"index":3386},{"krate":0,"index":3387},{"krate":0,"index":3388},{"krate":0,"index":3389}],"decl_id":null,"docs":" A constant item: `const MAX: u16 = 65535`.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3381},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":282724,"byte_end":282729,"line_start":105,"line_end":105,"column_start":13,"column_end":18},"name":"attrs","qualname":"::item::ItemConst::attrs","value":"std::vec::Vec<attr::Attribute>","parent":{"krate":0,"index":3380},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3382},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":282759,"byte_end":282762,"line_start":106,"line_end":106,"column_start":13,"column_end":16},"name":"vis","qualname":"::item::ItemConst::vis","value":"data::Visibility","parent":{"krate":0,"index":3380},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3383},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":282788,"byte_end":282799,"line_start":107,"line_end":107,"column_start":13,"column_end":24},"name":"const_token","qualname":"::item::ItemConst::const_token","value":"token::Const","parent":{"krate":0,"index":3380},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3384},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":282828,"byte_end":282833,"line_start":108,"line_end":108,"column_start":13,"column_end":18},"name":"ident","qualname":"::item::ItemConst::ident","value":"proc_macro2::Ident","parent":{"krate":0,"index":3380},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3385},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":282854,"byte_end":282865,"line_start":109,"line_end":109,"column_start":13,"column_end":24},"name":"colon_token","qualname":"::item::ItemConst::colon_token","value":"token::Colon","parent":{"krate":0,"index":3380},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3386},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":282890,"byte_end":282892,"line_start":110,"line_end":110,"column_start":13,"column_end":15},"name":"ty","qualname":"::item::ItemConst::ty","value":"std::boxed::Box<ty::Type>","parent":{"krate":0,"index":3380},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3387},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":282917,"byte_end":282925,"line_start":111,"line_end":111,"column_start":13,"column_end":21},"name":"eq_token","qualname":"::item::ItemConst::eq_token","value":"token::Eq","parent":{"krate":0,"index":3380},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3388},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":282950,"byte_end":282954,"line_start":112,"line_end":112,"column_start":13,"column_end":17},"name":"expr","qualname":"::item::ItemConst::expr","value":"std::boxed::Box<expr::Expr>","parent":{"krate":0,"index":3380},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3389},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":282979,"byte_end":282989,"line_start":113,"line_end":113,"column_start":13,"column_end":23},"name":"semi_token","qualname":"::item::ItemConst::semi_token","value":"token::Semi","parent":{"krate":0,"index":3380},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3390},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":283243,"byte_end":283251,"line_start":122,"line_end":122,"column_start":16,"column_end":24},"name":"ItemEnum","qualname":"::item::ItemEnum","value":"ItemEnum { attrs, vis, enum_token, ident, generics, brace_token, variants }","parent":null,"children":[{"krate":0,"index":3391},{"krate":0,"index":3392},{"krate":0,"index":3393},{"krate":0,"index":3394},{"krate":0,"index":3395},{"krate":0,"index":3396},{"krate":0,"index":3397}],"decl_id":null,"docs":" An enum definition: `enum Foo<A, B> { A(A), B(B) }`.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3391},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":283266,"byte_end":283271,"line_start":123,"line_end":123,"column_start":13,"column_end":18},"name":"attrs","qualname":"::item::ItemEnum::attrs","value":"std::vec::Vec<attr::Attribute>","parent":{"krate":0,"index":3390},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3392},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":283301,"byte_end":283304,"line_start":124,"line_end":124,"column_start":13,"column_end":16},"name":"vis","qualname":"::item::ItemEnum::vis","value":"data::Visibility","parent":{"krate":0,"index":3390},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3393},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":283330,"byte_end":283340,"line_start":125,"line_end":125,"column_start":13,"column_end":23},"name":"enum_token","qualname":"::item::ItemEnum::enum_token","value":"token::Enum","parent":{"krate":0,"index":3390},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3394},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":283368,"byte_end":283373,"line_start":126,"line_end":126,"column_start":13,"column_end":18},"name":"ident","qualname":"::item::ItemEnum::ident","value":"proc_macro2::Ident","parent":{"krate":0,"index":3390},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3395},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":283394,"byte_end":283402,"line_start":127,"line_end":127,"column_start":13,"column_end":21},"name":"generics","qualname":"::item::ItemEnum::generics","value":"generics::Generics","parent":{"krate":0,"index":3390},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3396},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":283426,"byte_end":283437,"line_start":128,"line_end":128,"column_start":13,"column_end":24},"name":"brace_token","qualname":"::item::ItemEnum::brace_token","value":"token::Brace","parent":{"krate":0,"index":3390},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3397},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":283465,"byte_end":283473,"line_start":129,"line_end":129,"column_start":13,"column_end":21},"name":"variants","qualname":"::item::ItemEnum::variants","value":"punctuated::Punctuated<data::Variant, token::Comma>","parent":{"krate":0,"index":3390},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3398},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":283741,"byte_end":283756,"line_start":138,"line_end":138,"column_start":16,"column_end":31},"name":"ItemExternCrate","qualname":"::item::ItemExternCrate","value":"ItemExternCrate { attrs, vis, extern_token, crate_token, ident, rename, semi_token }","parent":null,"children":[{"krate":0,"index":3399},{"krate":0,"index":3400},{"krate":0,"index":3401},{"krate":0,"index":3402},{"krate":0,"index":3403},{"krate":0,"index":3404},{"krate":0,"index":3405}],"decl_id":null,"docs":" An `extern crate` item: `extern crate serde`.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3399},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":283771,"byte_end":283776,"line_start":139,"line_end":139,"column_start":13,"column_end":18},"name":"attrs","qualname":"::item::ItemExternCrate::attrs","value":"std::vec::Vec<attr::Attribute>","parent":{"krate":0,"index":3398},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3400},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":283806,"byte_end":283809,"line_start":140,"line_end":140,"column_start":13,"column_end":16},"name":"vis","qualname":"::item::ItemExternCrate::vis","value":"data::Visibility","parent":{"krate":0,"index":3398},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3401},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":283835,"byte_end":283847,"line_start":141,"line_end":141,"column_start":13,"column_end":25},"name":"extern_token","qualname":"::item::ItemExternCrate::extern_token","value":"token::Extern","parent":{"krate":0,"index":3398},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3402},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":283877,"byte_end":283888,"line_start":142,"line_end":142,"column_start":13,"column_end":24},"name":"crate_token","qualname":"::item::ItemExternCrate::crate_token","value":"token::Crate","parent":{"krate":0,"index":3398},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3403},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":283917,"byte_end":283922,"line_start":143,"line_end":143,"column_start":13,"column_end":18},"name":"ident","qualname":"::item::ItemExternCrate::ident","value":"proc_macro2::Ident","parent":{"krate":0,"index":3398},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3404},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":283943,"byte_end":283949,"line_start":144,"line_end":144,"column_start":13,"column_end":19},"name":"rename","qualname":"::item::ItemExternCrate::rename","value":"std::option::Option<(token::As, proc_macro2::Ident)>","parent":{"krate":0,"index":3398},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3405},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":283992,"byte_end":284002,"line_start":145,"line_end":145,"column_start":13,"column_end":23},"name":"semi_token","qualname":"::item::ItemExternCrate::semi_token","value":"token::Semi","parent":{"krate":0,"index":3398},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3406},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":284283,"byte_end":284289,"line_start":155,"line_end":155,"column_start":16,"column_end":22},"name":"ItemFn","qualname":"::item::ItemFn","value":"ItemFn { attrs, vis, sig, block }","parent":null,"children":[{"krate":0,"index":3407},{"krate":0,"index":3408},{"krate":0,"index":3409},{"krate":0,"index":3410}],"decl_id":null,"docs":" A free-standing function: `fn process(n: usize) -> Result<()> { ...\n }`.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3407},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":284304,"byte_end":284309,"line_start":156,"line_end":156,"column_start":13,"column_end":18},"name":"attrs","qualname":"::item::ItemFn::attrs","value":"std::vec::Vec<attr::Attribute>","parent":{"krate":0,"index":3406},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3408},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":284339,"byte_end":284342,"line_start":157,"line_end":157,"column_start":13,"column_end":16},"name":"vis","qualname":"::item::ItemFn::vis","value":"data::Visibility","parent":{"krate":0,"index":3406},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3409},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":284368,"byte_end":284371,"line_start":158,"line_end":158,"column_start":13,"column_end":16},"name":"sig","qualname":"::item::ItemFn::sig","value":"item::Signature","parent":{"krate":0,"index":3406},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3410},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":284396,"byte_end":284401,"line_start":159,"line_end":159,"column_start":13,"column_end":18},"name":"block","qualname":"::item::ItemFn::block","value":"std::boxed::Box<stmt::Block>","parent":{"krate":0,"index":3406},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3411},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":284651,"byte_end":284665,"line_start":168,"line_end":168,"column_start":16,"column_end":30},"name":"ItemForeignMod","qualname":"::item::ItemForeignMod","value":"ItemForeignMod { attrs, abi, brace_token, items }","parent":null,"children":[{"krate":0,"index":3412},{"krate":0,"index":3413},{"krate":0,"index":3414},{"krate":0,"index":3415}],"decl_id":null,"docs":" A block of foreign items: `extern \"C\" { ... }`.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3412},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":284680,"byte_end":284685,"line_start":169,"line_end":169,"column_start":13,"column_end":18},"name":"attrs","qualname":"::item::ItemForeignMod::attrs","value":"std::vec::Vec<attr::Attribute>","parent":{"krate":0,"index":3411},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3413},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":284715,"byte_end":284718,"line_start":170,"line_end":170,"column_start":13,"column_end":16},"name":"abi","qualname":"::item::ItemForeignMod::abi","value":"ty::Abi","parent":{"krate":0,"index":3411},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3414},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":284737,"byte_end":284748,"line_start":171,"line_end":171,"column_start":13,"column_end":24},"name":"brace_token","qualname":"::item::ItemForeignMod::brace_token","value":"token::Brace","parent":{"krate":0,"index":3411},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3415},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":284776,"byte_end":284781,"line_start":172,"line_end":172,"column_start":13,"column_end":18},"name":"items","qualname":"::item::ItemForeignMod::items","value":"std::vec::Vec<item::ForeignItem>","parent":{"krate":0,"index":3411},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3416},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":285085,"byte_end":285093,"line_start":182,"line_end":182,"column_start":16,"column_end":24},"name":"ItemImpl","qualname":"::item::ItemImpl","value":"ItemImpl { attrs, defaultness, unsafety, impl_token, generics, trait_, self_ty, brace_token, items }","parent":null,"children":[{"krate":0,"index":3417},{"krate":0,"index":3418},{"krate":0,"index":3419},{"krate":0,"index":3420},{"krate":0,"index":3421},{"krate":0,"index":3422},{"krate":0,"index":3423},{"krate":0,"index":3424},{"krate":0,"index":3425}],"decl_id":null,"docs":" An impl block providing trait or associated items: `impl<A> Trait\n for Data<A> { ... }`.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3417},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":285108,"byte_end":285113,"line_start":183,"line_end":183,"column_start":13,"column_end":18},"name":"attrs","qualname":"::item::ItemImpl::attrs","value":"std::vec::Vec<attr::Attribute>","parent":{"krate":0,"index":3416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3418},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":285143,"byte_end":285154,"line_start":184,"line_end":184,"column_start":13,"column_end":24},"name":"defaultness","qualname":"::item::ItemImpl::defaultness","value":"std::option::Option<token::Default>","parent":{"krate":0,"index":3416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3419},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":285193,"byte_end":285201,"line_start":185,"line_end":185,"column_start":13,"column_end":21},"name":"unsafety","qualname":"::item::ItemImpl::unsafety","value":"std::option::Option<token::Unsafe>","parent":{"krate":0,"index":3416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3420},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":285239,"byte_end":285249,"line_start":186,"line_end":186,"column_start":13,"column_end":23},"name":"impl_token","qualname":"::item::ItemImpl::impl_token","value":"token::Impl","parent":{"krate":0,"index":3416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3421},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":285277,"byte_end":285285,"line_start":187,"line_end":187,"column_start":13,"column_end":21},"name":"generics","qualname":"::item::ItemImpl::generics","value":"generics::Generics","parent":{"krate":0,"index":3416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3422},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":285349,"byte_end":285355,"line_start":189,"line_end":189,"column_start":13,"column_end":19},"name":"trait_","qualname":"::item::ItemImpl::trait_","value":"std::option::Option<(std::option::Option<token::Bang>, path::Path, token::For)>","parent":{"krate":0,"index":3416},"children":[],"decl_id":null,"docs":" Trait this impl implements.\n","sig":null,"attributes":[{"value":"/ Trait this impl implements.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":285305,"byte_end":285336,"line_start":188,"line_end":188,"column_start":9,"column_end":40}}]},{"kind":"Field","id":{"krate":0,"index":3423},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":285456,"byte_end":285463,"line_start":191,"line_end":191,"column_start":13,"column_end":20},"name":"self_ty","qualname":"::item::ItemImpl::self_ty","value":"std::boxed::Box<ty::Type>","parent":{"krate":0,"index":3416},"children":[],"decl_id":null,"docs":" The Self type of the impl.\n","sig":null,"attributes":[{"value":"/ The Self type of the impl.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":285413,"byte_end":285443,"line_start":190,"line_end":190,"column_start":9,"column_end":39}}]},{"kind":"Field","id":{"krate":0,"index":3424},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":285488,"byte_end":285499,"line_start":192,"line_end":192,"column_start":13,"column_end":24},"name":"brace_token","qualname":"::item::ItemImpl::brace_token","value":"token::Brace","parent":{"krate":0,"index":3416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3425},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":285527,"byte_end":285532,"line_start":193,"line_end":193,"column_start":13,"column_end":18},"name":"items","qualname":"::item::ItemImpl::items","value":"std::vec::Vec<item::ImplItem>","parent":{"krate":0,"index":3416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3426},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":285800,"byte_end":285809,"line_start":202,"line_end":202,"column_start":16,"column_end":25},"name":"ItemMacro","qualname":"::item::ItemMacro","value":"ItemMacro { attrs, ident, mac, semi_token }","parent":null,"children":[{"krate":0,"index":3427},{"krate":0,"index":3428},{"krate":0,"index":3429},{"krate":0,"index":3430}],"decl_id":null,"docs":" A macro invocation, which includes `macro_rules!` definitions.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3427},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":285824,"byte_end":285829,"line_start":203,"line_end":203,"column_start":13,"column_end":18},"name":"attrs","qualname":"::item::ItemMacro::attrs","value":"std::vec::Vec<attr::Attribute>","parent":{"krate":0,"index":3426},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3428},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":285920,"byte_end":285925,"line_start":205,"line_end":205,"column_start":13,"column_end":18},"name":"ident","qualname":"::item::ItemMacro::ident","value":"std::option::Option<proc_macro2::Ident>","parent":{"krate":0,"index":3426},"children":[],"decl_id":null,"docs":" The `example` in `macro_rules! example { ... }`.\n","sig":null,"attributes":[{"value":"/ The `example` in `macro_rules! example { ... }`.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":285855,"byte_end":285907,"line_start":204,"line_end":204,"column_start":9,"column_end":61}}]},{"kind":"Field","id":{"krate":0,"index":3429},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":285954,"byte_end":285957,"line_start":206,"line_end":206,"column_start":13,"column_end":16},"name":"mac","qualname":"::item::ItemMacro::mac","value":"mac::Macro","parent":{"krate":0,"index":3426},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3430},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":285978,"byte_end":285988,"line_start":207,"line_end":207,"column_start":13,"column_end":23},"name":"semi_token","qualname":"::item::ItemMacro::semi_token","value":"std::option::Option<token::Semi>","parent":{"krate":0,"index":3426},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3431},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":286262,"byte_end":286272,"line_start":216,"line_end":216,"column_start":16,"column_end":26},"name":"ItemMacro2","qualname":"::item::ItemMacro2","value":"ItemMacro2 { attrs, vis, macro_token, ident, rules }","parent":null,"children":[{"krate":0,"index":3432},{"krate":0,"index":3433},{"krate":0,"index":3434},{"krate":0,"index":3435},{"krate":0,"index":3436}],"decl_id":null,"docs":" A 2.0-style declarative macro introduced by the `macro` keyword.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3432},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":286287,"byte_end":286292,"line_start":217,"line_end":217,"column_start":13,"column_end":18},"name":"attrs","qualname":"::item::ItemMacro2::attrs","value":"std::vec::Vec<attr::Attribute>","parent":{"krate":0,"index":3431},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3433},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":286322,"byte_end":286325,"line_start":218,"line_end":218,"column_start":13,"column_end":16},"name":"vis","qualname":"::item::ItemMacro2::vis","value":"data::Visibility","parent":{"krate":0,"index":3431},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3434},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":286351,"byte_end":286362,"line_start":219,"line_end":219,"column_start":13,"column_end":24},"name":"macro_token","qualname":"::item::ItemMacro2::macro_token","value":"token::Macro","parent":{"krate":0,"index":3431},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3435},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":286391,"byte_end":286396,"line_start":220,"line_end":220,"column_start":13,"column_end":18},"name":"ident","qualname":"::item::ItemMacro2::ident","value":"proc_macro2::Ident","parent":{"krate":0,"index":3431},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3436},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":286417,"byte_end":286422,"line_start":221,"line_end":221,"column_start":13,"column_end":18},"name":"rules","qualname":"::item::ItemMacro2::rules","value":"proc_macro2::TokenStream","parent":{"krate":0,"index":3431},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3437},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":286685,"byte_end":286692,"line_start":230,"line_end":230,"column_start":16,"column_end":23},"name":"ItemMod","qualname":"::item::ItemMod","value":"ItemMod { attrs, vis, mod_token, ident, content, semi }","parent":null,"children":[{"krate":0,"index":3438},{"krate":0,"index":3439},{"krate":0,"index":3440},{"krate":0,"index":3441},{"krate":0,"index":3442},{"krate":0,"index":3443}],"decl_id":null,"docs":" A module or module declaration: `mod m` or `mod m { ... }`.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3438},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":286707,"byte_end":286712,"line_start":231,"line_end":231,"column_start":13,"column_end":18},"name":"attrs","qualname":"::item::ItemMod::attrs","value":"std::vec::Vec<attr::Attribute>","parent":{"krate":0,"index":3437},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3439},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":286742,"byte_end":286745,"line_start":232,"line_end":232,"column_start":13,"column_end":16},"name":"vis","qualname":"::item::ItemMod::vis","value":"data::Visibility","parent":{"krate":0,"index":3437},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3440},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":286771,"byte_end":286780,"line_start":233,"line_end":233,"column_start":13,"column_end":22},"name":"mod_token","qualname":"::item::ItemMod::mod_token","value":"token::Mod","parent":{"krate":0,"index":3437},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3441},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":286807,"byte_end":286812,"line_start":234,"line_end":234,"column_start":13,"column_end":18},"name":"ident","qualname":"::item::ItemMod::ident","value":"proc_macro2::Ident","parent":{"krate":0,"index":3437},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3442},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":286833,"byte_end":286840,"line_start":235,"line_end":235,"column_start":13,"column_end":20},"name":"content","qualname":"::item::ItemMod::content","value":"std::option::Option<(token::Brace, std::vec::Vec<item::Item>)>","parent":{"krate":0,"index":3437},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3443},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":286889,"byte_end":286893,"line_start":236,"line_end":236,"column_start":13,"column_end":17},"name":"semi","qualname":"::item::ItemMod::semi","value":"std::option::Option<token::Semi>","parent":{"krate":0,"index":3437},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3444},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":287149,"byte_end":287159,"line_start":245,"line_end":245,"column_start":16,"column_end":26},"name":"ItemStatic","qualname":"::item::ItemStatic","value":"ItemStatic { attrs, vis, static_token, mutability, ident, colon_token, ty, eq_token, expr, semi_token }","parent":null,"children":[{"krate":0,"index":3445},{"krate":0,"index":3446},{"krate":0,"index":3447},{"krate":0,"index":3448},{"krate":0,"index":3449},{"krate":0,"index":3450},{"krate":0,"index":3451},{"krate":0,"index":3452},{"krate":0,"index":3453},{"krate":0,"index":3454}],"decl_id":null,"docs":" A static item: `static BIKE: Shed = Shed(42)`.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3445},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":287174,"byte_end":287179,"line_start":246,"line_end":246,"column_start":13,"column_end":18},"name":"attrs","qualname":"::item::ItemStatic::attrs","value":"std::vec::Vec<attr::Attribute>","parent":{"krate":0,"index":3444},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3446},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":287209,"byte_end":287212,"line_start":247,"line_end":247,"column_start":13,"column_end":16},"name":"vis","qualname":"::item::ItemStatic::vis","value":"data::Visibility","parent":{"krate":0,"index":3444},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3447},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":287238,"byte_end":287250,"line_start":248,"line_end":248,"column_start":13,"column_end":25},"name":"static_token","qualname":"::item::ItemStatic::static_token","value":"token::Static","parent":{"krate":0,"index":3444},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3448},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":287280,"byte_end":287290,"line_start":249,"line_end":249,"column_start":13,"column_end":23},"name":"mutability","qualname":"::item::ItemStatic::mutability","value":"std::option::Option<token::Mut>","parent":{"krate":0,"index":3444},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3449},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":287325,"byte_end":287330,"line_start":250,"line_end":250,"column_start":13,"column_end":18},"name":"ident","qualname":"::item::ItemStatic::ident","value":"proc_macro2::Ident","parent":{"krate":0,"index":3444},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3450},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":287351,"byte_end":287362,"line_start":251,"line_end":251,"column_start":13,"column_end":24},"name":"colon_token","qualname":"::item::ItemStatic::colon_token","value":"token::Colon","parent":{"krate":0,"index":3444},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3451},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":287387,"byte_end":287389,"line_start":252,"line_end":252,"column_start":13,"column_end":15},"name":"ty","qualname":"::item::ItemStatic::ty","value":"std::boxed::Box<ty::Type>","parent":{"krate":0,"index":3444},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3452},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":287414,"byte_end":287422,"line_start":253,"line_end":253,"column_start":13,"column_end":21},"name":"eq_token","qualname":"::item::ItemStatic::eq_token","value":"token::Eq","parent":{"krate":0,"index":3444},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3453},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":287447,"byte_end":287451,"line_start":254,"line_end":254,"column_start":13,"column_end":17},"name":"expr","qualname":"::item::ItemStatic::expr","value":"std::boxed::Box<expr::Expr>","parent":{"krate":0,"index":3444},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3454},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":287476,"byte_end":287486,"line_start":255,"line_end":255,"column_start":13,"column_end":23},"name":"semi_token","qualname":"::item::ItemStatic::semi_token","value":"token::Semi","parent":{"krate":0,"index":3444},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3455},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":287734,"byte_end":287744,"line_start":264,"line_end":264,"column_start":16,"column_end":26},"name":"ItemStruct","qualname":"::item::ItemStruct","value":"ItemStruct { attrs, vis, struct_token, ident, generics, fields, semi_token }","parent":null,"children":[{"krate":0,"index":3456},{"krate":0,"index":3457},{"krate":0,"index":3458},{"krate":0,"index":3459},{"krate":0,"index":3460},{"krate":0,"index":3461},{"krate":0,"index":3462}],"decl_id":null,"docs":" A struct definition: `struct Foo<A> { x: A }`.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3456},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":287759,"byte_end":287764,"line_start":265,"line_end":265,"column_start":13,"column_end":18},"name":"attrs","qualname":"::item::ItemStruct::attrs","value":"std::vec::Vec<attr::Attribute>","parent":{"krate":0,"index":3455},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3457},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":287794,"byte_end":287797,"line_start":266,"line_end":266,"column_start":13,"column_end":16},"name":"vis","qualname":"::item::ItemStruct::vis","value":"data::Visibility","parent":{"krate":0,"index":3455},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3458},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":287823,"byte_end":287835,"line_start":267,"line_end":267,"column_start":13,"column_end":25},"name":"struct_token","qualname":"::item::ItemStruct::struct_token","value":"token::Struct","parent":{"krate":0,"index":3455},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3459},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":287865,"byte_end":287870,"line_start":268,"line_end":268,"column_start":13,"column_end":18},"name":"ident","qualname":"::item::ItemStruct::ident","value":"proc_macro2::Ident","parent":{"krate":0,"index":3455},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3460},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":287891,"byte_end":287899,"line_start":269,"line_end":269,"column_start":13,"column_end":21},"name":"generics","qualname":"::item::ItemStruct::generics","value":"generics::Generics","parent":{"krate":0,"index":3455},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3461},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":287923,"byte_end":287929,"line_start":270,"line_end":270,"column_start":13,"column_end":19},"name":"fields","qualname":"::item::ItemStruct::fields","value":"data::Fields","parent":{"krate":0,"index":3455},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3462},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":287951,"byte_end":287961,"line_start":271,"line_end":271,"column_start":13,"column_end":23},"name":"semi_token","qualname":"::item::ItemStruct::semi_token","value":"std::option::Option<token::Semi>","parent":{"krate":0,"index":3455},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3463},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":288220,"byte_end":288229,"line_start":280,"line_end":280,"column_start":16,"column_end":25},"name":"ItemTrait","qualname":"::item::ItemTrait","value":"ItemTrait { attrs, vis, unsafety, auto_token, trait_token, ident, generics, colon_token, supertraits, brace_token, items }","parent":null,"children":[{"krate":0,"index":3464},{"krate":0,"index":3465},{"krate":0,"index":3466},{"krate":0,"index":3467},{"krate":0,"index":3468},{"krate":0,"index":3469},{"krate":0,"index":3470},{"krate":0,"index":3471},{"krate":0,"index":3472},{"krate":0,"index":3473},{"krate":0,"index":3474}],"decl_id":null,"docs":" A trait definition: `pub trait Iterator { ... }`.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3464},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":288244,"byte_end":288249,"line_start":281,"line_end":281,"column_start":13,"column_end":18},"name":"attrs","qualname":"::item::ItemTrait::attrs","value":"std::vec::Vec<attr::Attribute>","parent":{"krate":0,"index":3463},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3465},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":288279,"byte_end":288282,"line_start":282,"line_end":282,"column_start":13,"column_end":16},"name":"vis","qualname":"::item::ItemTrait::vis","value":"data::Visibility","parent":{"krate":0,"index":3463},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3466},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":288308,"byte_end":288316,"line_start":283,"line_end":283,"column_start":13,"column_end":21},"name":"unsafety","qualname":"::item::ItemTrait::unsafety","value":"std::option::Option<token::Unsafe>","parent":{"krate":0,"index":3463},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3467},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":288354,"byte_end":288364,"line_start":284,"line_end":284,"column_start":13,"column_end":23},"name":"auto_token","qualname":"::item::ItemTrait::auto_token","value":"std::option::Option<token::Auto>","parent":{"krate":0,"index":3463},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3468},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":288400,"byte_end":288411,"line_start":285,"line_end":285,"column_start":13,"column_end":24},"name":"trait_token","qualname":"::item::ItemTrait::trait_token","value":"token::Trait","parent":{"krate":0,"index":3463},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3469},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":288440,"byte_end":288445,"line_start":286,"line_end":286,"column_start":13,"column_end":18},"name":"ident","qualname":"::item::ItemTrait::ident","value":"proc_macro2::Ident","parent":{"krate":0,"index":3463},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3470},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":288466,"byte_end":288474,"line_start":287,"line_end":287,"column_start":13,"column_end":21},"name":"generics","qualname":"::item::ItemTrait::generics","value":"generics::Generics","parent":{"krate":0,"index":3463},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3471},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":288498,"byte_end":288509,"line_start":288,"line_end":288,"column_start":13,"column_end":24},"name":"colon_token","qualname":"::item::ItemTrait::colon_token","value":"std::option::Option<token::Colon>","parent":{"krate":0,"index":3463},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3472},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":288542,"byte_end":288553,"line_start":289,"line_end":289,"column_start":13,"column_end":24},"name":"supertraits","qualname":"::item::ItemTrait::supertraits","value":"punctuated::Punctuated<generics::TypeParamBound, token::Add>","parent":{"krate":0,"index":3463},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3473},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":288606,"byte_end":288617,"line_start":290,"line_end":290,"column_start":13,"column_end":24},"name":"brace_token","qualname":"::item::ItemTrait::brace_token","value":"token::Brace","parent":{"krate":0,"index":3463},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3474},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":288645,"byte_end":288650,"line_start":291,"line_end":291,"column_start":13,"column_end":18},"name":"items","qualname":"::item::ItemTrait::items","value":"std::vec::Vec<item::TraitItem>","parent":{"krate":0,"index":3463},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3475},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":288919,"byte_end":288933,"line_start":300,"line_end":300,"column_start":16,"column_end":30},"name":"ItemTraitAlias","qualname":"::item::ItemTraitAlias","value":"ItemTraitAlias { attrs, vis, trait_token, ident, generics, eq_token, bounds, semi_token }","parent":null,"children":[{"krate":0,"index":3476},{"krate":0,"index":3477},{"krate":0,"index":3478},{"krate":0,"index":3479},{"krate":0,"index":3480},{"krate":0,"index":3481},{"krate":0,"index":3482},{"krate":0,"index":3483}],"decl_id":null,"docs":" A trait alias: `pub trait SharableIterator = Iterator + Sync`.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3476},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":288948,"byte_end":288953,"line_start":301,"line_end":301,"column_start":13,"column_end":18},"name":"attrs","qualname":"::item::ItemTraitAlias::attrs","value":"std::vec::Vec<attr::Attribute>","parent":{"krate":0,"index":3475},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3477},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":288983,"byte_end":288986,"line_start":302,"line_end":302,"column_start":13,"column_end":16},"name":"vis","qualname":"::item::ItemTraitAlias::vis","value":"data::Visibility","parent":{"krate":0,"index":3475},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3478},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":289012,"byte_end":289023,"line_start":303,"line_end":303,"column_start":13,"column_end":24},"name":"trait_token","qualname":"::item::ItemTraitAlias::trait_token","value":"token::Trait","parent":{"krate":0,"index":3475},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3479},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":289052,"byte_end":289057,"line_start":304,"line_end":304,"column_start":13,"column_end":18},"name":"ident","qualname":"::item::ItemTraitAlias::ident","value":"proc_macro2::Ident","parent":{"krate":0,"index":3475},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3480},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":289078,"byte_end":289086,"line_start":305,"line_end":305,"column_start":13,"column_end":21},"name":"generics","qualname":"::item::ItemTraitAlias::generics","value":"generics::Generics","parent":{"krate":0,"index":3475},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3481},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":289110,"byte_end":289118,"line_start":306,"line_end":306,"column_start":13,"column_end":21},"name":"eq_token","qualname":"::item::ItemTraitAlias::eq_token","value":"token::Eq","parent":{"krate":0,"index":3475},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3482},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":289143,"byte_end":289149,"line_start":307,"line_end":307,"column_start":13,"column_end":19},"name":"bounds","qualname":"::item::ItemTraitAlias::bounds","value":"punctuated::Punctuated<generics::TypeParamBound, token::Add>","parent":{"krate":0,"index":3475},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3483},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":289202,"byte_end":289212,"line_start":308,"line_end":308,"column_start":13,"column_end":23},"name":"semi_token","qualname":"::item::ItemTraitAlias::semi_token","value":"token::Semi","parent":{"krate":0,"index":3475},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3484},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":289479,"byte_end":289487,"line_start":317,"line_end":317,"column_start":16,"column_end":24},"name":"ItemType","qualname":"::item::ItemType","value":"ItemType { attrs, vis, type_token, ident, generics, eq_token, ty, semi_token }","parent":null,"children":[{"krate":0,"index":3485},{"krate":0,"index":3486},{"krate":0,"index":3487},{"krate":0,"index":3488},{"krate":0,"index":3489},{"krate":0,"index":3490},{"krate":0,"index":3491},{"krate":0,"index":3492}],"decl_id":null,"docs":" A type alias: `type Result<T> = std::result::Result<T, MyError>`.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3485},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":289502,"byte_end":289507,"line_start":318,"line_end":318,"column_start":13,"column_end":18},"name":"attrs","qualname":"::item::ItemType::attrs","value":"std::vec::Vec<attr::Attribute>","parent":{"krate":0,"index":3484},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3486},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":289537,"byte_end":289540,"line_start":319,"line_end":319,"column_start":13,"column_end":16},"name":"vis","qualname":"::item::ItemType::vis","value":"data::Visibility","parent":{"krate":0,"index":3484},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3487},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":289566,"byte_end":289576,"line_start":320,"line_end":320,"column_start":13,"column_end":23},"name":"type_token","qualname":"::item::ItemType::type_token","value":"token::Type","parent":{"krate":0,"index":3484},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3488},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":289604,"byte_end":289609,"line_start":321,"line_end":321,"column_start":13,"column_end":18},"name":"ident","qualname":"::item::ItemType::ident","value":"proc_macro2::Ident","parent":{"krate":0,"index":3484},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3489},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":289630,"byte_end":289638,"line_start":322,"line_end":322,"column_start":13,"column_end":21},"name":"generics","qualname":"::item::ItemType::generics","value":"generics::Generics","parent":{"krate":0,"index":3484},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3490},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":289662,"byte_end":289670,"line_start":323,"line_end":323,"column_start":13,"column_end":21},"name":"eq_token","qualname":"::item::ItemType::eq_token","value":"token::Eq","parent":{"krate":0,"index":3484},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3491},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":289695,"byte_end":289697,"line_start":324,"line_end":324,"column_start":13,"column_end":15},"name":"ty","qualname":"::item::ItemType::ty","value":"std::boxed::Box<ty::Type>","parent":{"krate":0,"index":3484},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3492},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":289722,"byte_end":289732,"line_start":325,"line_end":325,"column_start":13,"column_end":23},"name":"semi_token","qualname":"::item::ItemType::semi_token","value":"token::Semi","parent":{"krate":0,"index":3484},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3493},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":289987,"byte_end":289996,"line_start":334,"line_end":334,"column_start":16,"column_end":25},"name":"ItemUnion","qualname":"::item::ItemUnion","value":"ItemUnion { attrs, vis, union_token, ident, generics, fields }","parent":null,"children":[{"krate":0,"index":3494},{"krate":0,"index":3495},{"krate":0,"index":3496},{"krate":0,"index":3497},{"krate":0,"index":3498},{"krate":0,"index":3499}],"decl_id":null,"docs":" A union definition: `union Foo<A, B> { x: A, y: B }`.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3494},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":290011,"byte_end":290016,"line_start":335,"line_end":335,"column_start":13,"column_end":18},"name":"attrs","qualname":"::item::ItemUnion::attrs","value":"std::vec::Vec<attr::Attribute>","parent":{"krate":0,"index":3493},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3495},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":290046,"byte_end":290049,"line_start":336,"line_end":336,"column_start":13,"column_end":16},"name":"vis","qualname":"::item::ItemUnion::vis","value":"data::Visibility","parent":{"krate":0,"index":3493},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3496},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":290075,"byte_end":290086,"line_start":337,"line_end":337,"column_start":13,"column_end":24},"name":"union_token","qualname":"::item::ItemUnion::union_token","value":"token::Union","parent":{"krate":0,"index":3493},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3497},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":290115,"byte_end":290120,"line_start":338,"line_end":338,"column_start":13,"column_end":18},"name":"ident","qualname":"::item::ItemUnion::ident","value":"proc_macro2::Ident","parent":{"krate":0,"index":3493},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3498},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":290141,"byte_end":290149,"line_start":339,"line_end":339,"column_start":13,"column_end":21},"name":"generics","qualname":"::item::ItemUnion::generics","value":"generics::Generics","parent":{"krate":0,"index":3493},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3499},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":290173,"byte_end":290179,"line_start":340,"line_end":340,"column_start":13,"column_end":19},"name":"fields","qualname":"::item::ItemUnion::fields","value":"data::FieldsNamed","parent":{"krate":0,"index":3493},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3500},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":290434,"byte_end":290441,"line_start":349,"line_end":349,"column_start":16,"column_end":23},"name":"ItemUse","qualname":"::item::ItemUse","value":"ItemUse { attrs, vis, use_token, leading_colon, tree, semi_token }","parent":null,"children":[{"krate":0,"index":3501},{"krate":0,"index":3502},{"krate":0,"index":3503},{"krate":0,"index":3504},{"krate":0,"index":3505},{"krate":0,"index":3506}],"decl_id":null,"docs":" A use declaration: `use std::collections::HashMap`.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3501},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":290456,"byte_end":290461,"line_start":350,"line_end":350,"column_start":13,"column_end":18},"name":"attrs","qualname":"::item::ItemUse::attrs","value":"std::vec::Vec<attr::Attribute>","parent":{"krate":0,"index":3500},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3502},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":290491,"byte_end":290494,"line_start":351,"line_end":351,"column_start":13,"column_end":16},"name":"vis","qualname":"::item::ItemUse::vis","value":"data::Visibility","parent":{"krate":0,"index":3500},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3503},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":290520,"byte_end":290529,"line_start":352,"line_end":352,"column_start":13,"column_end":22},"name":"use_token","qualname":"::item::ItemUse::use_token","value":"token::Use","parent":{"krate":0,"index":3500},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3504},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":290556,"byte_end":290569,"line_start":353,"line_end":353,"column_start":13,"column_end":26},"name":"leading_colon","qualname":"::item::ItemUse::leading_colon","value":"std::option::Option<token::Colon2>","parent":{"krate":0,"index":3500},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3505},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":290603,"byte_end":290607,"line_start":354,"line_end":354,"column_start":13,"column_end":17},"name":"tree","qualname":"::item::ItemUse::tree","value":"item::UseTree","parent":{"krate":0,"index":3500},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3506},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":290630,"byte_end":290640,"line_start":355,"line_end":355,"column_start":13,"column_end":23},"name":"semi_token","qualname":"::item::ItemUse::semi_token","value":"token::Semi","parent":{"krate":0,"index":3500},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":511},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":291853,"byte_end":291857,"line_start":388,"line_end":388,"column_start":8,"column_end":12},"name":"from","qualname":"<Item as std::convert::From>::from","value":"fn from(DeriveInput) -> Item","parent":{"krate":2,"index":3085},"children":[],"decl_id":{"krate":2,"index":3087},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":513},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":292986,"byte_end":292990,"line_start":421,"line_end":421,"column_start":8,"column_end":12},"name":"from","qualname":"<DeriveInput as std::convert::From>::from","value":"fn from(ItemStruct) -> DeriveInput","parent":{"krate":2,"index":3085},"children":[],"decl_id":{"krate":2,"index":3087},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":515},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":293437,"byte_end":293441,"line_start":437,"line_end":437,"column_start":8,"column_end":12},"name":"from","qualname":"<DeriveInput as std::convert::From>::from","value":"fn from(ItemEnum) -> DeriveInput","parent":{"krate":2,"index":3085},"children":[],"decl_id":{"krate":2,"index":3087},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":517},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":293885,"byte_end":293889,"line_start":453,"line_end":453,"column_start":8,"column_end":12},"name":"from","qualname":"<DeriveInput as std::convert::From>::from","value":"fn from(ItemUnion) -> DeriveInput","parent":{"krate":2,"index":3085},"children":[],"decl_id":{"krate":2,"index":3087},"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3508},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":294725,"byte_end":294729,"line_start":480,"line_end":480,"column_start":9,"column_end":13},"name":"Path","qualname":"::item::UseTree::Path","value":"UseTree::Path(UsePath)","parent":{"krate":0,"index":3507},"children":[],"decl_id":null,"docs":" A path prefix of imports in a `use` item: `std::...`.\n","sig":null,"attributes":[{"value":"/ A path prefix of imports in a `use` item: `std::...`.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":294659,"byte_end":294716,"line_start":479,"line_end":479,"column_start":9,"column_end":66}}]},{"kind":"Field","id":{"krate":0,"index":3510},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":294730,"byte_end":294737,"line_start":480,"line_end":480,"column_start":14,"column_end":21},"name":"0","qualname":"::item::UseTree::Path::0","value":"item::UsePath","parent":{"krate":0,"index":3508},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3511},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":294812,"byte_end":294816,"line_start":483,"line_end":483,"column_start":9,"column_end":13},"name":"Name","qualname":"::item::UseTree::Name","value":"UseTree::Name(UseName)","parent":{"krate":0,"index":3507},"children":[],"decl_id":null,"docs":" An identifier imported by a `use` item: `HashMap`.\n","sig":null,"attributes":[{"value":"/ An identifier imported by a `use` item: `HashMap`.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":294749,"byte_end":294803,"line_start":482,"line_end":482,"column_start":9,"column_end":63}}]},{"kind":"Field","id":{"krate":0,"index":3513},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":294817,"byte_end":294824,"line_start":483,"line_end":483,"column_start":14,"column_end":21},"name":"0","qualname":"::item::UseTree::Name::0","value":"item::UseName","parent":{"krate":0,"index":3511},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3514},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":294914,"byte_end":294920,"line_start":486,"line_end":486,"column_start":9,"column_end":15},"name":"Rename","qualname":"::item::UseTree::Rename","value":"UseTree::Rename(UseRename)","parent":{"krate":0,"index":3507},"children":[],"decl_id":null,"docs":" An renamed identifier imported by a `use` item: `HashMap as Map`.\n","sig":null,"attributes":[{"value":"/ An renamed identifier imported by a `use` item: `HashMap as Map`.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":294836,"byte_end":294905,"line_start":485,"line_end":485,"column_start":9,"column_end":78}}]},{"kind":"Field","id":{"krate":0,"index":3516},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":294921,"byte_end":294930,"line_start":486,"line_end":486,"column_start":16,"column_end":25},"name":"0","qualname":"::item::UseTree::Rename::0","value":"item::UseRename","parent":{"krate":0,"index":3514},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3517},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":294990,"byte_end":294994,"line_start":489,"line_end":489,"column_start":9,"column_end":13},"name":"Glob","qualname":"::item::UseTree::Glob","value":"UseTree::Glob(UseGlob)","parent":{"krate":0,"index":3507},"children":[],"decl_id":null,"docs":" A glob import in a `use` item: `*`.\n","sig":null,"attributes":[{"value":"/ A glob import in a `use` item: `*`.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":294942,"byte_end":294981,"line_start":488,"line_end":488,"column_start":9,"column_end":48}}]},{"kind":"Field","id":{"krate":0,"index":3519},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":294995,"byte_end":295002,"line_start":489,"line_end":489,"column_start":14,"column_end":21},"name":"0","qualname":"::item::UseTree::Glob::0","value":"item::UseGlob","parent":{"krate":0,"index":3517},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3520},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":295082,"byte_end":295087,"line_start":492,"line_end":492,"column_start":9,"column_end":14},"name":"Group","qualname":"::item::UseTree::Group","value":"UseTree::Group(UseGroup)","parent":{"krate":0,"index":3507},"children":[],"decl_id":null,"docs":" A braced group of imports in a `use` item: `{A, B, C}`.\n","sig":null,"attributes":[{"value":"/ A braced group of imports in a `use` item: `{A, B, C}`.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":295014,"byte_end":295073,"line_start":491,"line_end":491,"column_start":9,"column_end":68}}]},{"kind":"Field","id":{"krate":0,"index":3522},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":295088,"byte_end":295096,"line_start":492,"line_end":492,"column_start":15,"column_end":23},"name":"0","qualname":"::item::UseTree::Group::0","value":"item::UseGroup","parent":{"krate":0,"index":3520},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":3507},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":294641,"byte_end":294648,"line_start":478,"line_end":478,"column_start":14,"column_end":21},"name":"UseTree","qualname":"::item::UseTree","value":"enum UseTree {\n    Path(UsePath),\n    Name(UseName),\n    Rename(UseRename),\n    Glob(UseGlob),\n    Group(UseGroup),\n}","parent":null,"children":[{"krate":0,"index":3508},{"krate":0,"index":3511},{"krate":0,"index":3514},{"krate":0,"index":3517},{"krate":0,"index":3520}],"decl_id":null,"docs":" A suffix of an import tree in a `use` item: `Type as Renamed` or `*`.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3533},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":295341,"byte_end":295348,"line_start":501,"line_end":501,"column_start":16,"column_end":23},"name":"UsePath","qualname":"::item::UsePath","value":"UsePath { ident, colon2_token, tree }","parent":null,"children":[{"krate":0,"index":3534},{"krate":0,"index":3535},{"krate":0,"index":3536}],"decl_id":null,"docs":" A path prefix of imports in a `use` item: `std::...`.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3534},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":295363,"byte_end":295368,"line_start":502,"line_end":502,"column_start":13,"column_end":18},"name":"ident","qualname":"::item::UsePath::ident","value":"proc_macro2::Ident","parent":{"krate":0,"index":3533},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3535},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":295389,"byte_end":295401,"line_start":503,"line_end":503,"column_start":13,"column_end":25},"name":"colon2_token","qualname":"::item::UsePath::colon2_token","value":"token::Colon2","parent":{"krate":0,"index":3533},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3536},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":295427,"byte_end":295431,"line_start":504,"line_end":504,"column_start":13,"column_end":17},"name":"tree","qualname":"::item::UsePath::tree","value":"std::boxed::Box<item::UseTree>","parent":{"krate":0,"index":3533},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3537},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":295686,"byte_end":295693,"line_start":513,"line_end":513,"column_start":16,"column_end":23},"name":"UseName","qualname":"::item::UseName","value":"UseName { ident }","parent":null,"children":[{"krate":0,"index":3538}],"decl_id":null,"docs":" An identifier imported by a `use` item: `HashMap`.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3538},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":295708,"byte_end":295713,"line_start":514,"line_end":514,"column_start":13,"column_end":18},"name":"ident","qualname":"::item::UseName::ident","value":"proc_macro2::Ident","parent":{"krate":0,"index":3537},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3539},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":295976,"byte_end":295985,"line_start":523,"line_end":523,"column_start":16,"column_end":25},"name":"UseRename","qualname":"::item::UseRename","value":"UseRename { ident, as_token, rename }","parent":null,"children":[{"krate":0,"index":3540},{"krate":0,"index":3541},{"krate":0,"index":3542}],"decl_id":null,"docs":" An renamed identifier imported by a `use` item: `HashMap as Map`.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3540},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":296000,"byte_end":296005,"line_start":524,"line_end":524,"column_start":13,"column_end":18},"name":"ident","qualname":"::item::UseRename::ident","value":"proc_macro2::Ident","parent":{"krate":0,"index":3539},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3541},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":296026,"byte_end":296034,"line_start":525,"line_end":525,"column_start":13,"column_end":21},"name":"as_token","qualname":"::item::UseRename::as_token","value":"token::As","parent":{"krate":0,"index":3539},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3542},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":296060,"byte_end":296066,"line_start":526,"line_end":526,"column_start":13,"column_end":19},"name":"rename","qualname":"::item::UseRename::rename","value":"proc_macro2::Ident","parent":{"krate":0,"index":3539},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3543},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":296299,"byte_end":296306,"line_start":535,"line_end":535,"column_start":16,"column_end":23},"name":"UseGlob","qualname":"::item::UseGlob","value":"UseGlob { star_token }","parent":null,"children":[{"krate":0,"index":3544}],"decl_id":null,"docs":" A glob import in a `use` item: `*`.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3544},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":296321,"byte_end":296331,"line_start":536,"line_end":536,"column_start":13,"column_end":23},"name":"star_token","qualname":"::item::UseGlob::star_token","value":"token::Star","parent":{"krate":0,"index":3543},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3545},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":296588,"byte_end":296596,"line_start":545,"line_end":545,"column_start":16,"column_end":24},"name":"UseGroup","qualname":"::item::UseGroup","value":"UseGroup { brace_token, items }","parent":null,"children":[{"krate":0,"index":3546},{"krate":0,"index":3547}],"decl_id":null,"docs":" A braced group of imports in a `use` item: `{A, B, C}`.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3546},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":296611,"byte_end":296622,"line_start":546,"line_end":546,"column_start":13,"column_end":24},"name":"brace_token","qualname":"::item::UseGroup::brace_token","value":"token::Brace","parent":{"krate":0,"index":3545},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3547},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":296650,"byte_end":296655,"line_start":547,"line_end":547,"column_start":13,"column_end":18},"name":"items","qualname":"::item::UseGroup::items","value":"punctuated::Punctuated<item::UseTree, token::Comma>","parent":{"krate":0,"index":3545},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3549},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":297198,"byte_end":297200,"line_start":565,"line_end":565,"column_start":9,"column_end":11},"name":"Fn","qualname":"::item::ForeignItem::Fn","value":"ForeignItem::Fn(ForeignItemFn)","parent":{"krate":0,"index":3548},"children":[],"decl_id":null,"docs":" A foreign function in an `extern` block.\n","sig":null,"attributes":[{"value":"/ A foreign function in an `extern` block.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":297145,"byte_end":297189,"line_start":564,"line_end":564,"column_start":9,"column_end":53}}]},{"kind":"Field","id":{"krate":0,"index":3551},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":297201,"byte_end":297214,"line_start":565,"line_end":565,"column_start":12,"column_end":25},"name":"0","qualname":"::item::ForeignItem::Fn::0","value":"item::ForeignItemFn","parent":{"krate":0,"index":3549},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3552},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":297300,"byte_end":297306,"line_start":568,"line_end":568,"column_start":9,"column_end":15},"name":"Static","qualname":"::item::ForeignItem::Static","value":"ForeignItem::Static(ForeignItemStatic)","parent":{"krate":0,"index":3548},"children":[],"decl_id":null,"docs":" A foreign static item in an `extern` block: `static ext: u8`.\n","sig":null,"attributes":[{"value":"/ A foreign static item in an `extern` block: `static ext: u8`.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":297226,"byte_end":297291,"line_start":567,"line_end":567,"column_start":9,"column_end":74}}]},{"kind":"Field","id":{"krate":0,"index":3554},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":297307,"byte_end":297324,"line_start":568,"line_end":568,"column_start":16,"column_end":33},"name":"0","qualname":"::item::ForeignItem::Static::0","value":"item::ForeignItemStatic","parent":{"krate":0,"index":3552},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3555},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":297398,"byte_end":297402,"line_start":571,"line_end":571,"column_start":9,"column_end":13},"name":"Type","qualname":"::item::ForeignItem::Type","value":"ForeignItem::Type(ForeignItemType)","parent":{"krate":0,"index":3548},"children":[],"decl_id":null,"docs":" A foreign type in an `extern` block: `type void`.\n","sig":null,"attributes":[{"value":"/ A foreign type in an `extern` block: `type void`.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":297336,"byte_end":297389,"line_start":570,"line_end":570,"column_start":9,"column_end":62}}]},{"kind":"Field","id":{"krate":0,"index":3557},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":297403,"byte_end":297418,"line_start":571,"line_end":571,"column_start":14,"column_end":29},"name":"0","qualname":"::item::ForeignItem::Type::0","value":"item::ForeignItemType","parent":{"krate":0,"index":3555},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3558},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":297485,"byte_end":297490,"line_start":574,"line_end":574,"column_start":9,"column_end":14},"name":"Macro","qualname":"::item::ForeignItem::Macro","value":"ForeignItem::Macro(ForeignItemMacro)","parent":{"krate":0,"index":3548},"children":[],"decl_id":null,"docs":" A macro invocation within an extern block.\n","sig":null,"attributes":[{"value":"/ A macro invocation within an extern block.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":297430,"byte_end":297476,"line_start":573,"line_end":573,"column_start":9,"column_end":55}}]},{"kind":"Field","id":{"krate":0,"index":3560},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":297491,"byte_end":297507,"line_start":574,"line_end":574,"column_start":15,"column_end":31},"name":"0","qualname":"::item::ForeignItem::Macro::0","value":"item::ForeignItemMacro","parent":{"krate":0,"index":3558},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3561},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":297583,"byte_end":297591,"line_start":577,"line_end":577,"column_start":9,"column_end":17},"name":"Verbatim","qualname":"::item::ForeignItem::Verbatim","value":"ForeignItem::Verbatim(TokenStream)","parent":{"krate":0,"index":3548},"children":[],"decl_id":null,"docs":" Tokens in an `extern` block not interpreted by Syn.\n","sig":null,"attributes":[{"value":"/ Tokens in an `extern` block not interpreted by Syn.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":297519,"byte_end":297574,"line_start":576,"line_end":576,"column_start":9,"column_end":64}}]},{"kind":"Field","id":{"krate":0,"index":3563},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":297592,"byte_end":297603,"line_start":577,"line_end":577,"column_start":18,"column_end":29},"name":"0","qualname":"::item::ForeignItem::Verbatim::0","value":"proc_macro2::TokenStream","parent":{"krate":0,"index":3561},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":3548},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":297123,"byte_end":297134,"line_start":563,"line_end":563,"column_start":14,"column_end":25},"name":"ForeignItem","qualname":"::item::ForeignItem","value":"enum ForeignItem {\n    Fn(ForeignItemFn),\n    Static(ForeignItemStatic),\n    Type(ForeignItemType),\n    Macro(ForeignItemMacro),\n    Verbatim(TokenStream),\n}","parent":null,"children":[{"krate":0,"index":3549},{"krate":0,"index":3552},{"krate":0,"index":3555},{"krate":0,"index":3558},{"krate":0,"index":3561}],"decl_id":null,"docs":" An item within an `extern` block.","sig":null,"attributes":[{"value":"non_exhaustive","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":297093,"byte_end":297107,"line_start":562,"line_end":562,"column_start":44,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":3572},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":298748,"byte_end":298761,"line_start":608,"line_end":608,"column_start":16,"column_end":29},"name":"ForeignItemFn","qualname":"::item::ForeignItemFn","value":"ForeignItemFn { attrs, vis, sig, semi_token }","parent":null,"children":[{"krate":0,"index":3573},{"krate":0,"index":3574},{"krate":0,"index":3575},{"krate":0,"index":3576}],"decl_id":null,"docs":" A foreign function in an `extern` block.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3573},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":298776,"byte_end":298781,"line_start":609,"line_end":609,"column_start":13,"column_end":18},"name":"attrs","qualname":"::item::ForeignItemFn::attrs","value":"std::vec::Vec<attr::Attribute>","parent":{"krate":0,"index":3572},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3574},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":298811,"byte_end":298814,"line_start":610,"line_end":610,"column_start":13,"column_end":16},"name":"vis","qualname":"::item::ForeignItemFn::vis","value":"data::Visibility","parent":{"krate":0,"index":3572},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3575},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":298840,"byte_end":298843,"line_start":611,"line_end":611,"column_start":13,"column_end":16},"name":"sig","qualname":"::item::ForeignItemFn::sig","value":"item::Signature","parent":{"krate":0,"index":3572},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3576},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":298868,"byte_end":298878,"line_start":612,"line_end":612,"column_start":13,"column_end":23},"name":"semi_token","qualname":"::item::ForeignItemFn::semi_token","value":"token::Semi","parent":{"krate":0,"index":3572},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3577},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":299141,"byte_end":299158,"line_start":621,"line_end":621,"column_start":16,"column_end":33},"name":"ForeignItemStatic","qualname":"::item::ForeignItemStatic","value":"ForeignItemStatic { attrs, vis, static_token, mutability, ident, colon_token, ty, semi_token }","parent":null,"children":[{"krate":0,"index":3578},{"krate":0,"index":3579},{"krate":0,"index":3580},{"krate":0,"index":3581},{"krate":0,"index":3582},{"krate":0,"index":3583},{"krate":0,"index":3584},{"krate":0,"index":3585}],"decl_id":null,"docs":" A foreign static item in an `extern` block: `static ext: u8`.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3578},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":299173,"byte_end":299178,"line_start":622,"line_end":622,"column_start":13,"column_end":18},"name":"attrs","qualname":"::item::ForeignItemStatic::attrs","value":"std::vec::Vec<attr::Attribute>","parent":{"krate":0,"index":3577},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3579},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":299208,"byte_end":299211,"line_start":623,"line_end":623,"column_start":13,"column_end":16},"name":"vis","qualname":"::item::ForeignItemStatic::vis","value":"data::Visibility","parent":{"krate":0,"index":3577},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3580},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":299237,"byte_end":299249,"line_start":624,"line_end":624,"column_start":13,"column_end":25},"name":"static_token","qualname":"::item::ForeignItemStatic::static_token","value":"token::Static","parent":{"krate":0,"index":3577},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3581},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":299279,"byte_end":299289,"line_start":625,"line_end":625,"column_start":13,"column_end":23},"name":"mutability","qualname":"::item::ForeignItemStatic::mutability","value":"std::option::Option<token::Mut>","parent":{"krate":0,"index":3577},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3582},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":299324,"byte_end":299329,"line_start":626,"line_end":626,"column_start":13,"column_end":18},"name":"ident","qualname":"::item::ForeignItemStatic::ident","value":"proc_macro2::Ident","parent":{"krate":0,"index":3577},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3583},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":299350,"byte_end":299361,"line_start":627,"line_end":627,"column_start":13,"column_end":24},"name":"colon_token","qualname":"::item::ForeignItemStatic::colon_token","value":"token::Colon","parent":{"krate":0,"index":3577},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3584},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":299386,"byte_end":299388,"line_start":628,"line_end":628,"column_start":13,"column_end":15},"name":"ty","qualname":"::item::ForeignItemStatic::ty","value":"std::boxed::Box<ty::Type>","parent":{"krate":0,"index":3577},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3585},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":299413,"byte_end":299423,"line_start":629,"line_end":629,"column_start":13,"column_end":23},"name":"semi_token","qualname":"::item::ForeignItemStatic::semi_token","value":"token::Semi","parent":{"krate":0,"index":3577},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3586},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":299674,"byte_end":299689,"line_start":638,"line_end":638,"column_start":16,"column_end":31},"name":"ForeignItemType","qualname":"::item::ForeignItemType","value":"ForeignItemType { attrs, vis, type_token, ident, semi_token }","parent":null,"children":[{"krate":0,"index":3587},{"krate":0,"index":3588},{"krate":0,"index":3589},{"krate":0,"index":3590},{"krate":0,"index":3591}],"decl_id":null,"docs":" A foreign type in an `extern` block: `type void`.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3587},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":299704,"byte_end":299709,"line_start":639,"line_end":639,"column_start":13,"column_end":18},"name":"attrs","qualname":"::item::ForeignItemType::attrs","value":"std::vec::Vec<attr::Attribute>","parent":{"krate":0,"index":3586},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3588},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":299739,"byte_end":299742,"line_start":640,"line_end":640,"column_start":13,"column_end":16},"name":"vis","qualname":"::item::ForeignItemType::vis","value":"data::Visibility","parent":{"krate":0,"index":3586},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3589},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":299768,"byte_end":299778,"line_start":641,"line_end":641,"column_start":13,"column_end":23},"name":"type_token","qualname":"::item::ForeignItemType::type_token","value":"token::Type","parent":{"krate":0,"index":3586},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3590},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":299806,"byte_end":299811,"line_start":642,"line_end":642,"column_start":13,"column_end":18},"name":"ident","qualname":"::item::ForeignItemType::ident","value":"proc_macro2::Ident","parent":{"krate":0,"index":3586},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3591},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":299832,"byte_end":299842,"line_start":643,"line_end":643,"column_start":13,"column_end":23},"name":"semi_token","qualname":"::item::ForeignItemType::semi_token","value":"token::Semi","parent":{"krate":0,"index":3586},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3592},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":300086,"byte_end":300102,"line_start":652,"line_end":652,"column_start":16,"column_end":32},"name":"ForeignItemMacro","qualname":"::item::ForeignItemMacro","value":"ForeignItemMacro { attrs, mac, semi_token }","parent":null,"children":[{"krate":0,"index":3593},{"krate":0,"index":3594},{"krate":0,"index":3595}],"decl_id":null,"docs":" A macro invocation within an extern block.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3593},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":300117,"byte_end":300122,"line_start":653,"line_end":653,"column_start":13,"column_end":18},"name":"attrs","qualname":"::item::ForeignItemMacro::attrs","value":"std::vec::Vec<attr::Attribute>","parent":{"krate":0,"index":3592},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3594},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":300152,"byte_end":300155,"line_start":654,"line_end":654,"column_start":13,"column_end":16},"name":"mac","qualname":"::item::ForeignItemMacro::mac","value":"mac::Macro","parent":{"krate":0,"index":3592},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3595},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":300176,"byte_end":300186,"line_start":655,"line_end":655,"column_start":13,"column_end":23},"name":"semi_token","qualname":"::item::ForeignItemMacro::semi_token","value":"std::option::Option<token::Semi>","parent":{"krate":0,"index":3592},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3597},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":300750,"byte_end":300755,"line_start":673,"line_end":673,"column_start":9,"column_end":14},"name":"Const","qualname":"::item::TraitItem::Const","value":"TraitItem::Const(TraitItemConst)","parent":{"krate":0,"index":3596},"children":[],"decl_id":null,"docs":" An associated constant within the definition of a trait.\n","sig":null,"attributes":[{"value":"/ An associated constant within the definition of a trait.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":300681,"byte_end":300741,"line_start":672,"line_end":672,"column_start":9,"column_end":69}}]},{"kind":"Field","id":{"krate":0,"index":3599},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":300756,"byte_end":300770,"line_start":673,"line_end":673,"column_start":15,"column_end":29},"name":"0","qualname":"::item::TraitItem::Const::0","value":"item::TraitItemConst","parent":{"krate":0,"index":3597},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3600},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":300843,"byte_end":300849,"line_start":676,"line_end":676,"column_start":9,"column_end":15},"name":"Method","qualname":"::item::TraitItem::Method","value":"TraitItem::Method(TraitItemMethod)","parent":{"krate":0,"index":3596},"children":[],"decl_id":null,"docs":" A trait method within the definition of a trait.\n","sig":null,"attributes":[{"value":"/ A trait method within the definition of a trait.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":300782,"byte_end":300834,"line_start":675,"line_end":675,"column_start":9,"column_end":61}}]},{"kind":"Field","id":{"krate":0,"index":3602},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":300850,"byte_end":300865,"line_start":676,"line_end":676,"column_start":16,"column_end":31},"name":"0","qualname":"::item::TraitItem::Method::0","value":"item::TraitItemMethod","parent":{"krate":0,"index":3600},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3603},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":300942,"byte_end":300946,"line_start":679,"line_end":679,"column_start":9,"column_end":13},"name":"Type","qualname":"::item::TraitItem::Type","value":"TraitItem::Type(TraitItemType)","parent":{"krate":0,"index":3596},"children":[],"decl_id":null,"docs":" An associated type within the definition of a trait.\n","sig":null,"attributes":[{"value":"/ An associated type within the definition of a trait.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":300877,"byte_end":300933,"line_start":678,"line_end":678,"column_start":9,"column_end":65}}]},{"kind":"Field","id":{"krate":0,"index":3605},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":300947,"byte_end":300960,"line_start":679,"line_end":679,"column_start":14,"column_end":27},"name":"0","qualname":"::item::TraitItem::Type::0","value":"item::TraitItemType","parent":{"krate":0,"index":3603},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3606},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":301037,"byte_end":301042,"line_start":682,"line_end":682,"column_start":9,"column_end":14},"name":"Macro","qualname":"::item::TraitItem::Macro","value":"TraitItem::Macro(TraitItemMacro)","parent":{"krate":0,"index":3596},"children":[],"decl_id":null,"docs":" A macro invocation within the definition of a trait.\n","sig":null,"attributes":[{"value":"/ A macro invocation within the definition of a trait.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":300972,"byte_end":301028,"line_start":681,"line_end":681,"column_start":9,"column_end":65}}]},{"kind":"Field","id":{"krate":0,"index":3608},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":301043,"byte_end":301057,"line_start":682,"line_end":682,"column_start":15,"column_end":29},"name":"0","qualname":"::item::TraitItem::Macro::0","value":"item::TraitItemMacro","parent":{"krate":0,"index":3606},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3609},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":301145,"byte_end":301153,"line_start":685,"line_end":685,"column_start":9,"column_end":17},"name":"Verbatim","qualname":"::item::TraitItem::Verbatim","value":"TraitItem::Verbatim(TokenStream)","parent":{"krate":0,"index":3596},"children":[],"decl_id":null,"docs":" Tokens within the definition of a trait not interpreted by Syn.\n","sig":null,"attributes":[{"value":"/ Tokens within the definition of a trait not interpreted by Syn.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":301069,"byte_end":301136,"line_start":684,"line_end":684,"column_start":9,"column_end":76}}]},{"kind":"Field","id":{"krate":0,"index":3611},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":301154,"byte_end":301165,"line_start":685,"line_end":685,"column_start":18,"column_end":29},"name":"0","qualname":"::item::TraitItem::Verbatim::0","value":"proc_macro2::TokenStream","parent":{"krate":0,"index":3609},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":3596},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":300661,"byte_end":300670,"line_start":671,"line_end":671,"column_start":14,"column_end":23},"name":"TraitItem","qualname":"::item::TraitItem","value":"enum TraitItem {\n    Const(TraitItemConst),\n    Method(TraitItemMethod),\n    Type(TraitItemType),\n    Macro(TraitItemMacro),\n    Verbatim(TokenStream),\n}","parent":null,"children":[{"krate":0,"index":3597},{"krate":0,"index":3600},{"krate":0,"index":3603},{"krate":0,"index":3606},{"krate":0,"index":3609}],"decl_id":null,"docs":" An item declaration within the definition of a trait.","sig":null,"attributes":[{"value":"non_exhaustive","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":300631,"byte_end":300645,"line_start":670,"line_end":670,"column_start":44,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":3620},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":302323,"byte_end":302337,"line_start":716,"line_end":716,"column_start":16,"column_end":30},"name":"TraitItemConst","qualname":"::item::TraitItemConst","value":"TraitItemConst { attrs, const_token, ident, colon_token, ty, default, semi_token }","parent":null,"children":[{"krate":0,"index":3621},{"krate":0,"index":3622},{"krate":0,"index":3623},{"krate":0,"index":3624},{"krate":0,"index":3625},{"krate":0,"index":3626},{"krate":0,"index":3627}],"decl_id":null,"docs":" An associated constant within the definition of a trait.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3621},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":302352,"byte_end":302357,"line_start":717,"line_end":717,"column_start":13,"column_end":18},"name":"attrs","qualname":"::item::TraitItemConst::attrs","value":"std::vec::Vec<attr::Attribute>","parent":{"krate":0,"index":3620},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3622},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":302387,"byte_end":302398,"line_start":718,"line_end":718,"column_start":13,"column_end":24},"name":"const_token","qualname":"::item::TraitItemConst::const_token","value":"token::Const","parent":{"krate":0,"index":3620},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3623},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":302427,"byte_end":302432,"line_start":719,"line_end":719,"column_start":13,"column_end":18},"name":"ident","qualname":"::item::TraitItemConst::ident","value":"proc_macro2::Ident","parent":{"krate":0,"index":3620},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3624},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":302453,"byte_end":302464,"line_start":720,"line_end":720,"column_start":13,"column_end":24},"name":"colon_token","qualname":"::item::TraitItemConst::colon_token","value":"token::Colon","parent":{"krate":0,"index":3620},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3625},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":302489,"byte_end":302491,"line_start":721,"line_end":721,"column_start":13,"column_end":15},"name":"ty","qualname":"::item::TraitItemConst::ty","value":"ty::Type","parent":{"krate":0,"index":3620},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3626},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":302511,"byte_end":302518,"line_start":722,"line_end":722,"column_start":13,"column_end":20},"name":"default","qualname":"::item::TraitItemConst::default","value":"std::option::Option<(token::Eq, expr::Expr)>","parent":{"krate":0,"index":3620},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3627},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":302559,"byte_end":302569,"line_start":723,"line_end":723,"column_start":13,"column_end":23},"name":"semi_token","qualname":"::item::TraitItemConst::semi_token","value":"token::Semi","parent":{"krate":0,"index":3620},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3628},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":302819,"byte_end":302834,"line_start":732,"line_end":732,"column_start":16,"column_end":31},"name":"TraitItemMethod","qualname":"::item::TraitItemMethod","value":"TraitItemMethod { attrs, sig, default, semi_token }","parent":null,"children":[{"krate":0,"index":3629},{"krate":0,"index":3630},{"krate":0,"index":3631},{"krate":0,"index":3632}],"decl_id":null,"docs":" A trait method within the definition of a trait.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3629},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":302849,"byte_end":302854,"line_start":733,"line_end":733,"column_start":13,"column_end":18},"name":"attrs","qualname":"::item::TraitItemMethod::attrs","value":"std::vec::Vec<attr::Attribute>","parent":{"krate":0,"index":3628},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3630},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":302884,"byte_end":302887,"line_start":734,"line_end":734,"column_start":13,"column_end":16},"name":"sig","qualname":"::item::TraitItemMethod::sig","value":"item::Signature","parent":{"krate":0,"index":3628},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3631},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":302912,"byte_end":302919,"line_start":735,"line_end":735,"column_start":13,"column_end":20},"name":"default","qualname":"::item::TraitItemMethod::default","value":"std::option::Option<stmt::Block>","parent":{"krate":0,"index":3628},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3632},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":302948,"byte_end":302958,"line_start":736,"line_end":736,"column_start":13,"column_end":23},"name":"semi_token","qualname":"::item::TraitItemMethod::semi_token","value":"std::option::Option<token::Semi>","parent":{"krate":0,"index":3628},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3633},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":303220,"byte_end":303233,"line_start":745,"line_end":745,"column_start":16,"column_end":29},"name":"TraitItemType","qualname":"::item::TraitItemType","value":"TraitItemType { attrs, type_token, ident, generics, colon_token, bounds, default, semi_token }","parent":null,"children":[{"krate":0,"index":3634},{"krate":0,"index":3635},{"krate":0,"index":3636},{"krate":0,"index":3637},{"krate":0,"index":3638},{"krate":0,"index":3639},{"krate":0,"index":3640},{"krate":0,"index":3641}],"decl_id":null,"docs":" An associated type within the definition of a trait.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3634},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":303248,"byte_end":303253,"line_start":746,"line_end":746,"column_start":13,"column_end":18},"name":"attrs","qualname":"::item::TraitItemType::attrs","value":"std::vec::Vec<attr::Attribute>","parent":{"krate":0,"index":3633},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3635},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":303283,"byte_end":303293,"line_start":747,"line_end":747,"column_start":13,"column_end":23},"name":"type_token","qualname":"::item::TraitItemType::type_token","value":"token::Type","parent":{"krate":0,"index":3633},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3636},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":303321,"byte_end":303326,"line_start":748,"line_end":748,"column_start":13,"column_end":18},"name":"ident","qualname":"::item::TraitItemType::ident","value":"proc_macro2::Ident","parent":{"krate":0,"index":3633},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3637},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":303347,"byte_end":303355,"line_start":749,"line_end":749,"column_start":13,"column_end":21},"name":"generics","qualname":"::item::TraitItemType::generics","value":"generics::Generics","parent":{"krate":0,"index":3633},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3638},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":303379,"byte_end":303390,"line_start":750,"line_end":750,"column_start":13,"column_end":24},"name":"colon_token","qualname":"::item::TraitItemType::colon_token","value":"std::option::Option<token::Colon>","parent":{"krate":0,"index":3633},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3639},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":303423,"byte_end":303429,"line_start":751,"line_end":751,"column_start":13,"column_end":19},"name":"bounds","qualname":"::item::TraitItemType::bounds","value":"punctuated::Punctuated<generics::TypeParamBound, token::Add>","parent":{"krate":0,"index":3633},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3640},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":303482,"byte_end":303489,"line_start":752,"line_end":752,"column_start":13,"column_end":20},"name":"default","qualname":"::item::TraitItemType::default","value":"std::option::Option<(token::Eq, ty::Type)>","parent":{"krate":0,"index":3633},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3641},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":303530,"byte_end":303540,"line_start":753,"line_end":753,"column_start":13,"column_end":23},"name":"semi_token","qualname":"::item::TraitItemType::semi_token","value":"token::Semi","parent":{"krate":0,"index":3633},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3642},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":303794,"byte_end":303808,"line_start":762,"line_end":762,"column_start":16,"column_end":30},"name":"TraitItemMacro","qualname":"::item::TraitItemMacro","value":"TraitItemMacro { attrs, mac, semi_token }","parent":null,"children":[{"krate":0,"index":3643},{"krate":0,"index":3644},{"krate":0,"index":3645}],"decl_id":null,"docs":" A macro invocation within the definition of a trait.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3643},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":303823,"byte_end":303828,"line_start":763,"line_end":763,"column_start":13,"column_end":18},"name":"attrs","qualname":"::item::TraitItemMacro::attrs","value":"std::vec::Vec<attr::Attribute>","parent":{"krate":0,"index":3642},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3644},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":303858,"byte_end":303861,"line_start":764,"line_end":764,"column_start":13,"column_end":16},"name":"mac","qualname":"::item::TraitItemMacro::mac","value":"mac::Macro","parent":{"krate":0,"index":3642},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3645},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":303882,"byte_end":303892,"line_start":765,"line_end":765,"column_start":13,"column_end":23},"name":"semi_token","qualname":"::item::TraitItemMacro::semi_token","value":"std::option::Option<token::Semi>","parent":{"krate":0,"index":3642},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3647},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":304419,"byte_end":304424,"line_start":783,"line_end":783,"column_start":9,"column_end":14},"name":"Const","qualname":"::item::ImplItem::Const","value":"ImplItem::Const(ImplItemConst)","parent":{"krate":0,"index":3646},"children":[],"decl_id":null,"docs":" An associated constant within an impl block.\n","sig":null,"attributes":[{"value":"/ An associated constant within an impl block.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":304362,"byte_end":304410,"line_start":782,"line_end":782,"column_start":9,"column_end":57}}]},{"kind":"Field","id":{"krate":0,"index":3649},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":304425,"byte_end":304438,"line_start":783,"line_end":783,"column_start":15,"column_end":28},"name":"0","qualname":"::item::ImplItem::Const::0","value":"item::ImplItemConst","parent":{"krate":0,"index":3647},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3650},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":304493,"byte_end":304499,"line_start":786,"line_end":786,"column_start":9,"column_end":15},"name":"Method","qualname":"::item::ImplItem::Method","value":"ImplItem::Method(ImplItemMethod)","parent":{"krate":0,"index":3646},"children":[],"decl_id":null,"docs":" A method within an impl block.\n","sig":null,"attributes":[{"value":"/ A method within an impl block.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":304450,"byte_end":304484,"line_start":785,"line_end":785,"column_start":9,"column_end":43}}]},{"kind":"Field","id":{"krate":0,"index":3652},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":304500,"byte_end":304514,"line_start":786,"line_end":786,"column_start":16,"column_end":30},"name":"0","qualname":"::item::ImplItem::Method::0","value":"item::ImplItemMethod","parent":{"krate":0,"index":3650},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3653},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":304579,"byte_end":304583,"line_start":789,"line_end":789,"column_start":9,"column_end":13},"name":"Type","qualname":"::item::ImplItem::Type","value":"ImplItem::Type(ImplItemType)","parent":{"krate":0,"index":3646},"children":[],"decl_id":null,"docs":" An associated type within an impl block.\n","sig":null,"attributes":[{"value":"/ An associated type within an impl block.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":304526,"byte_end":304570,"line_start":788,"line_end":788,"column_start":9,"column_end":53}}]},{"kind":"Field","id":{"krate":0,"index":3655},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":304584,"byte_end":304596,"line_start":789,"line_end":789,"column_start":14,"column_end":26},"name":"0","qualname":"::item::ImplItem::Type::0","value":"item::ImplItemType","parent":{"krate":0,"index":3653},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3656},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":304661,"byte_end":304666,"line_start":792,"line_end":792,"column_start":9,"column_end":14},"name":"Macro","qualname":"::item::ImplItem::Macro","value":"ImplItem::Macro(ImplItemMacro)","parent":{"krate":0,"index":3646},"children":[],"decl_id":null,"docs":" A macro invocation within an impl block.\n","sig":null,"attributes":[{"value":"/ A macro invocation within an impl block.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":304608,"byte_end":304652,"line_start":791,"line_end":791,"column_start":9,"column_end":53}}]},{"kind":"Field","id":{"krate":0,"index":3658},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":304667,"byte_end":304680,"line_start":792,"line_end":792,"column_start":15,"column_end":28},"name":"0","qualname":"::item::ImplItem::Macro::0","value":"item::ImplItemMacro","parent":{"krate":0,"index":3656},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3659},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":304756,"byte_end":304764,"line_start":795,"line_end":795,"column_start":9,"column_end":17},"name":"Verbatim","qualname":"::item::ImplItem::Verbatim","value":"ImplItem::Verbatim(TokenStream)","parent":{"krate":0,"index":3646},"children":[],"decl_id":null,"docs":" Tokens within an impl block not interpreted by Syn.\n","sig":null,"attributes":[{"value":"/ Tokens within an impl block not interpreted by Syn.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":304692,"byte_end":304747,"line_start":794,"line_end":794,"column_start":9,"column_end":64}}]},{"kind":"Field","id":{"krate":0,"index":3661},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":304765,"byte_end":304776,"line_start":795,"line_end":795,"column_start":18,"column_end":29},"name":"0","qualname":"::item::ImplItem::Verbatim::0","value":"proc_macro2::TokenStream","parent":{"krate":0,"index":3659},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":3646},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":304343,"byte_end":304351,"line_start":781,"line_end":781,"column_start":14,"column_end":22},"name":"ImplItem","qualname":"::item::ImplItem","value":"enum ImplItem {\n    Const(ImplItemConst),\n    Method(ImplItemMethod),\n    Type(ImplItemType),\n    Macro(ImplItemMacro),\n    Verbatim(TokenStream),\n}","parent":null,"children":[{"krate":0,"index":3647},{"krate":0,"index":3650},{"krate":0,"index":3653},{"krate":0,"index":3656},{"krate":0,"index":3659}],"decl_id":null,"docs":" An item within an impl block.","sig":null,"attributes":[{"value":"non_exhaustive","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":304313,"byte_end":304327,"line_start":780,"line_end":780,"column_start":44,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":3670},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":305919,"byte_end":305932,"line_start":826,"line_end":826,"column_start":16,"column_end":29},"name":"ImplItemConst","qualname":"::item::ImplItemConst","value":"ImplItemConst { attrs, vis, defaultness, const_token, ident, colon_token, ty, eq_token, expr, semi_token }","parent":null,"children":[{"krate":0,"index":3671},{"krate":0,"index":3672},{"krate":0,"index":3673},{"krate":0,"index":3674},{"krate":0,"index":3675},{"krate":0,"index":3676},{"krate":0,"index":3677},{"krate":0,"index":3678},{"krate":0,"index":3679},{"krate":0,"index":3680}],"decl_id":null,"docs":" An associated constant within an impl block.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3671},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":305947,"byte_end":305952,"line_start":827,"line_end":827,"column_start":13,"column_end":18},"name":"attrs","qualname":"::item::ImplItemConst::attrs","value":"std::vec::Vec<attr::Attribute>","parent":{"krate":0,"index":3670},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3672},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":305982,"byte_end":305985,"line_start":828,"line_end":828,"column_start":13,"column_end":16},"name":"vis","qualname":"::item::ImplItemConst::vis","value":"data::Visibility","parent":{"krate":0,"index":3670},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3673},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":306011,"byte_end":306022,"line_start":829,"line_end":829,"column_start":13,"column_end":24},"name":"defaultness","qualname":"::item::ImplItemConst::defaultness","value":"std::option::Option<token::Default>","parent":{"krate":0,"index":3670},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3674},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":306061,"byte_end":306072,"line_start":830,"line_end":830,"column_start":13,"column_end":24},"name":"const_token","qualname":"::item::ImplItemConst::const_token","value":"token::Const","parent":{"krate":0,"index":3670},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3675},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":306101,"byte_end":306106,"line_start":831,"line_end":831,"column_start":13,"column_end":18},"name":"ident","qualname":"::item::ImplItemConst::ident","value":"proc_macro2::Ident","parent":{"krate":0,"index":3670},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3676},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":306127,"byte_end":306138,"line_start":832,"line_end":832,"column_start":13,"column_end":24},"name":"colon_token","qualname":"::item::ImplItemConst::colon_token","value":"token::Colon","parent":{"krate":0,"index":3670},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3677},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":306163,"byte_end":306165,"line_start":833,"line_end":833,"column_start":13,"column_end":15},"name":"ty","qualname":"::item::ImplItemConst::ty","value":"ty::Type","parent":{"krate":0,"index":3670},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3678},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":306185,"byte_end":306193,"line_start":834,"line_end":834,"column_start":13,"column_end":21},"name":"eq_token","qualname":"::item::ImplItemConst::eq_token","value":"token::Eq","parent":{"krate":0,"index":3670},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3679},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":306218,"byte_end":306222,"line_start":835,"line_end":835,"column_start":13,"column_end":17},"name":"expr","qualname":"::item::ImplItemConst::expr","value":"expr::Expr","parent":{"krate":0,"index":3670},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3680},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":306242,"byte_end":306252,"line_start":836,"line_end":836,"column_start":13,"column_end":23},"name":"semi_token","qualname":"::item::ImplItemConst::semi_token","value":"token::Semi","parent":{"krate":0,"index":3670},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3681},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":306484,"byte_end":306498,"line_start":845,"line_end":845,"column_start":16,"column_end":30},"name":"ImplItemMethod","qualname":"::item::ImplItemMethod","value":"ImplItemMethod { attrs, vis, defaultness, sig, block }","parent":null,"children":[{"krate":0,"index":3682},{"krate":0,"index":3683},{"krate":0,"index":3684},{"krate":0,"index":3685},{"krate":0,"index":3686}],"decl_id":null,"docs":" A method within an impl block.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3682},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":306513,"byte_end":306518,"line_start":846,"line_end":846,"column_start":13,"column_end":18},"name":"attrs","qualname":"::item::ImplItemMethod::attrs","value":"std::vec::Vec<attr::Attribute>","parent":{"krate":0,"index":3681},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3683},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":306548,"byte_end":306551,"line_start":847,"line_end":847,"column_start":13,"column_end":16},"name":"vis","qualname":"::item::ImplItemMethod::vis","value":"data::Visibility","parent":{"krate":0,"index":3681},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3684},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":306577,"byte_end":306588,"line_start":848,"line_end":848,"column_start":13,"column_end":24},"name":"defaultness","qualname":"::item::ImplItemMethod::defaultness","value":"std::option::Option<token::Default>","parent":{"krate":0,"index":3681},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3685},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":306627,"byte_end":306630,"line_start":849,"line_end":849,"column_start":13,"column_end":16},"name":"sig","qualname":"::item::ImplItemMethod::sig","value":"item::Signature","parent":{"krate":0,"index":3681},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3686},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":306655,"byte_end":306660,"line_start":850,"line_end":850,"column_start":13,"column_end":18},"name":"block","qualname":"::item::ImplItemMethod::block","value":"stmt::Block","parent":{"krate":0,"index":3681},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3687},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":306898,"byte_end":306910,"line_start":859,"line_end":859,"column_start":16,"column_end":28},"name":"ImplItemType","qualname":"::item::ImplItemType","value":"ImplItemType { attrs, vis, defaultness, type_token, ident, generics, eq_token, ty, semi_token }","parent":null,"children":[{"krate":0,"index":3688},{"krate":0,"index":3689},{"krate":0,"index":3690},{"krate":0,"index":3691},{"krate":0,"index":3692},{"krate":0,"index":3693},{"krate":0,"index":3694},{"krate":0,"index":3695},{"krate":0,"index":3696}],"decl_id":null,"docs":" An associated type within an impl block.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3688},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":306925,"byte_end":306930,"line_start":860,"line_end":860,"column_start":13,"column_end":18},"name":"attrs","qualname":"::item::ImplItemType::attrs","value":"std::vec::Vec<attr::Attribute>","parent":{"krate":0,"index":3687},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3689},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":306960,"byte_end":306963,"line_start":861,"line_end":861,"column_start":13,"column_end":16},"name":"vis","qualname":"::item::ImplItemType::vis","value":"data::Visibility","parent":{"krate":0,"index":3687},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3690},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":306989,"byte_end":307000,"line_start":862,"line_end":862,"column_start":13,"column_end":24},"name":"defaultness","qualname":"::item::ImplItemType::defaultness","value":"std::option::Option<token::Default>","parent":{"krate":0,"index":3687},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3691},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":307039,"byte_end":307049,"line_start":863,"line_end":863,"column_start":13,"column_end":23},"name":"type_token","qualname":"::item::ImplItemType::type_token","value":"token::Type","parent":{"krate":0,"index":3687},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3692},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":307077,"byte_end":307082,"line_start":864,"line_end":864,"column_start":13,"column_end":18},"name":"ident","qualname":"::item::ImplItemType::ident","value":"proc_macro2::Ident","parent":{"krate":0,"index":3687},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3693},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":307103,"byte_end":307111,"line_start":865,"line_end":865,"column_start":13,"column_end":21},"name":"generics","qualname":"::item::ImplItemType::generics","value":"generics::Generics","parent":{"krate":0,"index":3687},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3694},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":307135,"byte_end":307143,"line_start":866,"line_end":866,"column_start":13,"column_end":21},"name":"eq_token","qualname":"::item::ImplItemType::eq_token","value":"token::Eq","parent":{"krate":0,"index":3687},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3695},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":307168,"byte_end":307170,"line_start":867,"line_end":867,"column_start":13,"column_end":15},"name":"ty","qualname":"::item::ImplItemType::ty","value":"ty::Type","parent":{"krate":0,"index":3687},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3696},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":307190,"byte_end":307200,"line_start":868,"line_end":868,"column_start":13,"column_end":23},"name":"semi_token","qualname":"::item::ImplItemType::semi_token","value":"token::Semi","parent":{"krate":0,"index":3687},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3697},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":307442,"byte_end":307455,"line_start":877,"line_end":877,"column_start":16,"column_end":29},"name":"ImplItemMacro","qualname":"::item::ImplItemMacro","value":"ImplItemMacro { attrs, mac, semi_token }","parent":null,"children":[{"krate":0,"index":3698},{"krate":0,"index":3699},{"krate":0,"index":3700}],"decl_id":null,"docs":" A macro invocation within an impl block.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3698},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":307470,"byte_end":307475,"line_start":878,"line_end":878,"column_start":13,"column_end":18},"name":"attrs","qualname":"::item::ImplItemMacro::attrs","value":"std::vec::Vec<attr::Attribute>","parent":{"krate":0,"index":3697},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3699},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":307505,"byte_end":307508,"line_start":879,"line_end":879,"column_start":13,"column_end":16},"name":"mac","qualname":"::item::ImplItemMacro::mac","value":"mac::Macro","parent":{"krate":0,"index":3697},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3700},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":307529,"byte_end":307539,"line_start":880,"line_end":880,"column_start":13,"column_end":23},"name":"semi_token","qualname":"::item::ImplItemMacro::semi_token","value":"std::option::Option<token::Semi>","parent":{"krate":0,"index":3697},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3701},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":307838,"byte_end":307847,"line_start":890,"line_end":890,"column_start":16,"column_end":25},"name":"Signature","qualname":"::item::Signature","value":"Signature { constness, asyncness, unsafety, abi, fn_token, ident, generics, paren_token, inputs, variadic, output }","parent":null,"children":[{"krate":0,"index":3702},{"krate":0,"index":3703},{"krate":0,"index":3704},{"krate":0,"index":3705},{"krate":0,"index":3706},{"krate":0,"index":3707},{"krate":0,"index":3708},{"krate":0,"index":3709},{"krate":0,"index":3710},{"krate":0,"index":3711},{"krate":0,"index":3712}],"decl_id":null,"docs":" A function signature in a trait or implementation: `unsafe fn\n initialize(&self)`.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3702},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":307862,"byte_end":307871,"line_start":891,"line_end":891,"column_start":13,"column_end":22},"name":"constness","qualname":"::item::Signature::constness","value":"std::option::Option<token::Const>","parent":{"krate":0,"index":3701},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3703},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":307908,"byte_end":307917,"line_start":892,"line_end":892,"column_start":13,"column_end":22},"name":"asyncness","qualname":"::item::Signature::asyncness","value":"std::option::Option<token::Async>","parent":{"krate":0,"index":3701},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3704},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":307954,"byte_end":307962,"line_start":893,"line_end":893,"column_start":13,"column_end":21},"name":"unsafety","qualname":"::item::Signature::unsafety","value":"std::option::Option<token::Unsafe>","parent":{"krate":0,"index":3701},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3705},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":308000,"byte_end":308003,"line_start":894,"line_end":894,"column_start":13,"column_end":16},"name":"abi","qualname":"::item::Signature::abi","value":"std::option::Option<ty::Abi>","parent":{"krate":0,"index":3701},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3706},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":308030,"byte_end":308038,"line_start":895,"line_end":895,"column_start":13,"column_end":21},"name":"fn_token","qualname":"::item::Signature::fn_token","value":"token::Fn","parent":{"krate":0,"index":3701},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3707},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":308064,"byte_end":308069,"line_start":896,"line_end":896,"column_start":13,"column_end":18},"name":"ident","qualname":"::item::Signature::ident","value":"proc_macro2::Ident","parent":{"krate":0,"index":3701},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3708},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":308090,"byte_end":308098,"line_start":897,"line_end":897,"column_start":13,"column_end":21},"name":"generics","qualname":"::item::Signature::generics","value":"generics::Generics","parent":{"krate":0,"index":3701},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3709},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":308122,"byte_end":308133,"line_start":898,"line_end":898,"column_start":13,"column_end":24},"name":"paren_token","qualname":"::item::Signature::paren_token","value":"token::Paren","parent":{"krate":0,"index":3701},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3710},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":308161,"byte_end":308167,"line_start":899,"line_end":899,"column_start":13,"column_end":19},"name":"inputs","qualname":"::item::Signature::inputs","value":"punctuated::Punctuated<item::FnArg, token::Comma>","parent":{"krate":0,"index":3701},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3711},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":308211,"byte_end":308219,"line_start":900,"line_end":900,"column_start":13,"column_end":21},"name":"variadic","qualname":"::item::Signature::variadic","value":"std::option::Option<ty::Variadic>","parent":{"krate":0,"index":3701},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3712},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":308251,"byte_end":308257,"line_start":901,"line_end":901,"column_start":13,"column_end":19},"name":"output","qualname":"::item::Signature::output","value":"ty::ReturnType","parent":{"krate":0,"index":3701},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":519},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":308382,"byte_end":308390,"line_start":907,"line_end":907,"column_start":12,"column_end":20},"name":"receiver","qualname":"<Signature>::receiver","value":"fn receiver(&Self) -> Option<&FnArg>","parent":null,"children":[],"decl_id":null,"docs":" A method's `self` receiver, such as `&self` or `self: Box<Self>`.\n","sig":null,"attributes":[{"value":"/ A method's `self` receiver, such as `&self` or `self: Box<Self>`.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":308301,"byte_end":308370,"line_start":906,"line_end":906,"column_start":5,"column_end":74}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3714},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":309349,"byte_end":309357,"line_start":934,"line_end":934,"column_start":9,"column_end":17},"name":"Receiver","qualname":"::item::FnArg::Receiver","value":"FnArg::Receiver(Receiver)","parent":{"krate":0,"index":3713},"children":[],"decl_id":null,"docs":" The `self` argument of an associated method, whether taken by value\n or by reference.","sig":null,"attributes":[{"value":"/ The `self` argument of an associated method, whether taken by value","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":309095,"byte_end":309166,"line_start":929,"line_end":929,"column_start":9,"column_end":80}},{"value":"/ or by reference.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":309175,"byte_end":309195,"line_start":930,"line_end":930,"column_start":9,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":309204,"byte_end":309207,"line_start":931,"line_end":931,"column_start":9,"column_end":12}},{"value":"/ Note that `self` receivers with a specified type, such as `self:","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":309216,"byte_end":309284,"line_start":932,"line_end":932,"column_start":9,"column_end":77}},{"value":"/ Box<Self>`, are parsed as a `FnArg::Typed`.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":309293,"byte_end":309340,"line_start":933,"line_end":933,"column_start":9,"column_end":56}}]},{"kind":"Field","id":{"krate":0,"index":3716},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":309358,"byte_end":309366,"line_start":934,"line_end":934,"column_start":18,"column_end":26},"name":"0","qualname":"::item::FnArg::Receiver::0","value":"item::Receiver","parent":{"krate":0,"index":3714},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3717},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":309440,"byte_end":309445,"line_start":937,"line_end":937,"column_start":9,"column_end":14},"name":"Typed","qualname":"::item::FnArg::Typed","value":"FnArg::Typed(PatType)","parent":{"krate":0,"index":3713},"children":[],"decl_id":null,"docs":" A function argument accepted by pattern and type.\n","sig":null,"attributes":[{"value":"/ A function argument accepted by pattern and type.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":309378,"byte_end":309431,"line_start":936,"line_end":936,"column_start":9,"column_end":62}}]},{"kind":"Field","id":{"krate":0,"index":3719},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":309446,"byte_end":309453,"line_start":937,"line_end":937,"column_start":15,"column_end":22},"name":"0","qualname":"::item::FnArg::Typed::0","value":"pat::PatType","parent":{"krate":0,"index":3717},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":3713},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":309079,"byte_end":309084,"line_start":928,"line_end":928,"column_start":14,"column_end":19},"name":"FnArg","qualname":"::item::FnArg","value":"enum FnArg { Receiver(Receiver), Typed(PatType), }","parent":null,"children":[{"krate":0,"index":3714},{"krate":0,"index":3717}],"decl_id":null,"docs":" An argument in a function signature: the `n: usize` in `fn f(n: usize)`.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3724},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":309870,"byte_end":309878,"line_start":950,"line_end":950,"column_start":16,"column_end":24},"name":"Receiver","qualname":"::item::Receiver","value":"Receiver { attrs, reference, mutability, self_token }","parent":null,"children":[{"krate":0,"index":3725},{"krate":0,"index":3726},{"krate":0,"index":3727},{"krate":0,"index":3728}],"decl_id":null,"docs":" The `self` argument of an associated method, whether taken by value\n or by reference.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3725},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":309893,"byte_end":309898,"line_start":951,"line_end":951,"column_start":13,"column_end":18},"name":"attrs","qualname":"::item::Receiver::attrs","value":"std::vec::Vec<attr::Attribute>","parent":{"krate":0,"index":3724},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3726},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":309928,"byte_end":309937,"line_start":952,"line_end":952,"column_start":13,"column_end":22},"name":"reference","qualname":"::item::Receiver::reference","value":"std::option::Option<(token::And, std::option::Option<lifetime::Lifetime>)>","parent":{"krate":0,"index":3724},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3727},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":309990,"byte_end":310000,"line_start":953,"line_end":953,"column_start":13,"column_end":23},"name":"mutability","qualname":"::item::Receiver::mutability","value":"std::option::Option<token::Mut>","parent":{"krate":0,"index":3724},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3728},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":310035,"byte_end":310045,"line_start":954,"line_end":954,"column_start":13,"column_end":23},"name":"self_token","qualname":"::item::Receiver::self_token","value":"token::SelfValue","parent":{"krate":0,"index":3724},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":521},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":310097,"byte_end":310105,"line_start":959,"line_end":959,"column_start":12,"column_end":20},"name":"lifetime","qualname":"<Receiver>::lifetime","value":"fn lifetime(&Self) -> Option<&Lifetime>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3729},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\file.rs","byte_start":398527,"byte_end":398531,"line_start":81,"line_end":81,"column_start":16,"column_end":20},"name":"File","qualname":"::file::File","value":"File { shebang, attrs, items }","parent":null,"children":[{"krate":0,"index":3730},{"krate":0,"index":3731},{"krate":0,"index":3732}],"decl_id":null,"docs":" A complete file of Rust source code.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3730},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\file.rs","byte_start":398546,"byte_end":398553,"line_start":82,"line_end":82,"column_start":13,"column_end":20},"name":"shebang","qualname":"::file::File::shebang","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":3729},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3731},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\file.rs","byte_start":398583,"byte_end":398588,"line_start":83,"line_end":83,"column_start":13,"column_end":18},"name":"attrs","qualname":"::file::File::attrs","value":"std::vec::Vec<attr::Attribute>","parent":{"krate":0,"index":3729},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3732},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\file.rs","byte_start":398618,"byte_end":398623,"line_start":84,"line_end":84,"column_start":13,"column_end":18},"name":"items","qualname":"::file::File::items","value":"std::vec::Vec<item::Item>","parent":{"krate":0,"index":3729},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":676},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lifetime.rs","byte_start":400279,"byte_end":400287,"line_start":19,"line_end":19,"column_start":12,"column_end":20},"name":"Lifetime","qualname":"::lifetime::Lifetime","value":"Lifetime { apostrophe, ident }","parent":null,"children":[{"krate":0,"index":677},{"krate":0,"index":678}],"decl_id":null,"docs":" A Rust lifetime: `'a`.","sig":null,"attributes":[{"value":"/ A Rust lifetime: `'a`.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lifetime.rs","byte_start":399884,"byte_end":399910,"line_start":9,"line_end":9,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lifetime.rs","byte_start":399911,"byte_end":399914,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ Lifetime names must conform to the following rules:","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lifetime.rs","byte_start":399915,"byte_end":399970,"line_start":11,"line_end":11,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lifetime.rs","byte_start":399971,"byte_end":399974,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ - Must start with an apostrophe.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lifetime.rs","byte_start":399975,"byte_end":400011,"line_start":13,"line_end":13,"column_start":1,"column_end":37}},{"value":"/ - Must not consist of just an apostrophe: `'`.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lifetime.rs","byte_start":400012,"byte_end":400062,"line_start":14,"line_end":14,"column_start":1,"column_end":51}},{"value":"/ - Character after the apostrophe must be `_` or a Unicode code point with","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lifetime.rs","byte_start":400063,"byte_end":400140,"line_start":15,"line_end":15,"column_start":1,"column_end":78}},{"value":"/   the XID_Start property.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lifetime.rs","byte_start":400141,"byte_end":400170,"line_start":16,"line_end":16,"column_start":1,"column_end":30}},{"value":"/ - All following characters must be Unicode code points with the XID_Continue","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lifetime.rs","byte_start":400171,"byte_end":400251,"line_start":17,"line_end":17,"column_start":1,"column_end":81}},{"value":"/   property.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lifetime.rs","byte_start":400252,"byte_end":400267,"line_start":18,"line_end":18,"column_start":1,"column_end":16}}]},{"kind":"Field","id":{"krate":0,"index":677},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lifetime.rs","byte_start":400298,"byte_end":400308,"line_start":20,"line_end":20,"column_start":9,"column_end":19},"name":"apostrophe","qualname":"::lifetime::Lifetime::apostrophe","value":"proc_macro2::Span","parent":{"krate":0,"index":676},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":678},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lifetime.rs","byte_start":400324,"byte_end":400329,"line_start":21,"line_end":21,"column_start":9,"column_end":14},"name":"ident","qualname":"::lifetime::Lifetime::ident","value":"proc_macro2::Ident","parent":{"krate":0,"index":676},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":680},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lifetime.rs","byte_start":400693,"byte_end":400696,"line_start":39,"line_end":39,"column_start":12,"column_end":15},"name":"new","qualname":"<Lifetime>::new","value":"fn new(&str, Span) -> Self","parent":null,"children":[],"decl_id":null,"docs":" # Panics","sig":null,"attributes":[{"value":"/ # Panics","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lifetime.rs","byte_start":400361,"byte_end":400373,"line_start":25,"line_end":25,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lifetime.rs","byte_start":400378,"byte_end":400381,"line_start":26,"line_end":26,"column_start":5,"column_end":8}},{"value":"/ Panics if the lifetime does not conform to the bulleted rules above.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lifetime.rs","byte_start":400386,"byte_end":400458,"line_start":27,"line_end":27,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lifetime.rs","byte_start":400463,"byte_end":400466,"line_start":28,"line_end":28,"column_start":5,"column_end":8}},{"value":"/ # Invocation","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lifetime.rs","byte_start":400471,"byte_end":400487,"line_start":29,"line_end":29,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lifetime.rs","byte_start":400492,"byte_end":400495,"line_start":30,"line_end":30,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lifetime.rs","byte_start":400500,"byte_end":400507,"line_start":31,"line_end":31,"column_start":5,"column_end":12}},{"value":"/ # use proc_macro2::Span;","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lifetime.rs","byte_start":400512,"byte_end":400540,"line_start":32,"line_end":32,"column_start":5,"column_end":33}},{"value":"/ # use syn::Lifetime;","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lifetime.rs","byte_start":400545,"byte_end":400569,"line_start":33,"line_end":33,"column_start":5,"column_end":29}},{"value":"/ #","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lifetime.rs","byte_start":400574,"byte_end":400579,"line_start":34,"line_end":34,"column_start":5,"column_end":10}},{"value":"/ # fn f() -> Lifetime {","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lifetime.rs","byte_start":400584,"byte_end":400610,"line_start":35,"line_end":35,"column_start":5,"column_end":31}},{"value":"/ Lifetime::new(\"'a\", Span::call_site())","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lifetime.rs","byte_start":400615,"byte_end":400657,"line_start":36,"line_end":36,"column_start":5,"column_end":47}},{"value":"/ # }","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lifetime.rs","byte_start":400662,"byte_end":400669,"line_start":37,"line_end":37,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lifetime.rs","byte_start":400674,"byte_end":400681,"line_start":38,"line_end":38,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":681},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lifetime.rs","byte_start":401270,"byte_end":401274,"line_start":61,"line_end":61,"column_start":12,"column_end":16},"name":"span","qualname":"<Lifetime>::span","value":"fn span(&Self) -> Span","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":682},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lifetime.rs","byte_start":401411,"byte_end":401419,"line_start":67,"line_end":67,"column_start":12,"column_end":20},"name":"set_span","qualname":"<Lifetime>::set_span","value":"fn set_span(&mut Self, Span)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":684},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lifetime.rs","byte_start":401556,"byte_end":401559,"line_start":74,"line_end":74,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Lifetime as std::fmt::Display>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10122},"children":[],"decl_id":{"krate":2,"index":10123},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":686},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lifetime.rs","byte_start":401721,"byte_end":401726,"line_start":81,"line_end":81,"column_start":8,"column_end":13},"name":"clone","qualname":"<Lifetime as std::clone::Clone>::clone","value":"fn clone(&Self) -> Self","parent":{"krate":2,"index":2801},"children":[],"decl_id":{"krate":2,"index":2802},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":688},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lifetime.rs","byte_start":401899,"byte_end":401901,"line_start":90,"line_end":90,"column_start":8,"column_end":10},"name":"eq","qualname":"<Lifetime as std::cmp::PartialEq>::eq","value":"fn eq(&Self, &Lifetime) -> bool","parent":{"krate":2,"index":2831},"children":[],"decl_id":{"krate":2,"index":2833},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":691},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lifetime.rs","byte_start":402045,"byte_end":402056,"line_start":98,"line_end":98,"column_start":8,"column_end":19},"name":"partial_cmp","qualname":"<Lifetime as std::cmp::PartialOrd>::partial_cmp","value":"fn partial_cmp(&Self, &Lifetime) -> Option<Ordering>","parent":{"krate":2,"index":2877},"children":[],"decl_id":{"krate":2,"index":2879},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":693},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lifetime.rs","byte_start":402174,"byte_end":402177,"line_start":104,"line_end":104,"column_start":8,"column_end":11},"name":"cmp","qualname":"<Lifetime as std::cmp::Ord>::cmp","value":"fn cmp(&Self, &Lifetime) -> Ordering","parent":{"krate":2,"index":2867},"children":[],"decl_id":{"krate":2,"index":2868},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":695},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lifetime.rs","byte_start":402295,"byte_end":402299,"line_start":110,"line_end":110,"column_start":8,"column_end":12},"name":"hash","qualname":"<Lifetime as std::hash::Hash>::hash","value":"fn hash<H>(&Self, &mut H) where H: Hasher","parent":{"krate":2,"index":10329},"children":[],"decl_id":{"krate":2,"index":10330},"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3734},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lit.rs","byte_start":404183,"byte_end":404186,"line_start":24,"line_end":24,"column_start":9,"column_end":12},"name":"Str","qualname":"::lit::Lit::Str","value":"Lit::Str(LitStr)","parent":{"krate":0,"index":3733},"children":[],"decl_id":null,"docs":" A UTF-8 string literal: `\"foo\"`.\n","sig":null,"attributes":[{"value":"/ A UTF-8 string literal: `\"foo\"`.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lit.rs","byte_start":404138,"byte_end":404174,"line_start":23,"line_end":23,"column_start":9,"column_end":45}}]},{"kind":"Field","id":{"krate":0,"index":3736},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lit.rs","byte_start":404187,"byte_end":404193,"line_start":24,"line_end":24,"column_start":13,"column_end":19},"name":"0","qualname":"::lit::Lit::Str::0","value":"lit::LitStr","parent":{"krate":0,"index":3734},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3737},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lit.rs","byte_start":404250,"byte_end":404257,"line_start":27,"line_end":27,"column_start":9,"column_end":16},"name":"ByteStr","qualname":"::lit::Lit::ByteStr","value":"Lit::ByteStr(LitByteStr)","parent":{"krate":0,"index":3733},"children":[],"decl_id":null,"docs":" A byte string literal: `b\"foo\"`.\n","sig":null,"attributes":[{"value":"/ A byte string literal: `b\"foo\"`.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lit.rs","byte_start":404205,"byte_end":404241,"line_start":26,"line_end":26,"column_start":9,"column_end":45}}]},{"kind":"Field","id":{"krate":0,"index":3739},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lit.rs","byte_start":404258,"byte_end":404268,"line_start":27,"line_end":27,"column_start":17,"column_end":27},"name":"0","qualname":"::lit::Lit::ByteStr::0","value":"lit::LitByteStr","parent":{"krate":0,"index":3737},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3740},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lit.rs","byte_start":404316,"byte_end":404320,"line_start":30,"line_end":30,"column_start":9,"column_end":13},"name":"Byte","qualname":"::lit::Lit::Byte","value":"Lit::Byte(LitByte)","parent":{"krate":0,"index":3733},"children":[],"decl_id":null,"docs":" A byte literal: `b'f'`.\n","sig":null,"attributes":[{"value":"/ A byte literal: `b'f'`.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lit.rs","byte_start":404280,"byte_end":404307,"line_start":29,"line_end":29,"column_start":9,"column_end":36}}]},{"kind":"Field","id":{"krate":0,"index":3742},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lit.rs","byte_start":404321,"byte_end":404328,"line_start":30,"line_end":30,"column_start":14,"column_end":21},"name":"0","qualname":"::lit::Lit::Byte::0","value":"lit::LitByte","parent":{"krate":0,"index":3740},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3743},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lit.rs","byte_start":404380,"byte_end":404384,"line_start":33,"line_end":33,"column_start":9,"column_end":13},"name":"Char","qualname":"::lit::Lit::Char","value":"Lit::Char(LitChar)","parent":{"krate":0,"index":3733},"children":[],"decl_id":null,"docs":" A character literal: `'a'`.\n","sig":null,"attributes":[{"value":"/ A character literal: `'a'`.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lit.rs","byte_start":404340,"byte_end":404371,"line_start":32,"line_end":32,"column_start":9,"column_end":40}}]},{"kind":"Field","id":{"krate":0,"index":3745},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lit.rs","byte_start":404385,"byte_end":404392,"line_start":33,"line_end":33,"column_start":14,"column_end":21},"name":"0","qualname":"::lit::Lit::Char::0","value":"lit::LitChar","parent":{"krate":0,"index":3743},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3746},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lit.rs","byte_start":404451,"byte_end":404454,"line_start":36,"line_end":36,"column_start":9,"column_end":12},"name":"Int","qualname":"::lit::Lit::Int","value":"Lit::Int(LitInt)","parent":{"krate":0,"index":3733},"children":[],"decl_id":null,"docs":" An integer literal: `1` or `1u16`.\n","sig":null,"attributes":[{"value":"/ An integer literal: `1` or `1u16`.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lit.rs","byte_start":404404,"byte_end":404442,"line_start":35,"line_end":35,"column_start":9,"column_end":47}}]},{"kind":"Field","id":{"krate":0,"index":3748},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lit.rs","byte_start":404455,"byte_end":404461,"line_start":36,"line_end":36,"column_start":13,"column_end":19},"name":"0","qualname":"::lit::Lit::Int::0","value":"lit::LitInt","parent":{"krate":0,"index":3746},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3749},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lit.rs","byte_start":404602,"byte_end":404607,"line_start":41,"line_end":41,"column_start":9,"column_end":14},"name":"Float","qualname":"::lit::Lit::Float","value":"Lit::Float(LitFloat)","parent":{"krate":0,"index":3733},"children":[],"decl_id":null,"docs":" A floating point literal: `1f64` or `1.0e10f64`.","sig":null,"attributes":[{"value":"/ A floating point literal: `1f64` or `1.0e10f64`.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lit.rs","byte_start":404473,"byte_end":404525,"line_start":38,"line_end":38,"column_start":9,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lit.rs","byte_start":404534,"byte_end":404537,"line_start":39,"line_end":39,"column_start":9,"column_end":12}},{"value":"/ Must be finite. May not be infinite or NaN.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lit.rs","byte_start":404546,"byte_end":404593,"line_start":40,"line_end":40,"column_start":9,"column_end":56}}]},{"kind":"Field","id":{"krate":0,"index":3751},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lit.rs","byte_start":404608,"byte_end":404616,"line_start":41,"line_end":41,"column_start":15,"column_end":23},"name":"0","qualname":"::lit::Lit::Float::0","value":"lit::LitFloat","parent":{"krate":0,"index":3749},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3752},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lit.rs","byte_start":404678,"byte_end":404682,"line_start":44,"line_end":44,"column_start":9,"column_end":13},"name":"Bool","qualname":"::lit::Lit::Bool","value":"Lit::Bool(LitBool)","parent":{"krate":0,"index":3733},"children":[],"decl_id":null,"docs":" A boolean literal: `true` or `false`.\n","sig":null,"attributes":[{"value":"/ A boolean literal: `true` or `false`.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lit.rs","byte_start":404628,"byte_end":404669,"line_start":43,"line_end":43,"column_start":9,"column_end":50}}]},{"kind":"Field","id":{"krate":0,"index":3754},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lit.rs","byte_start":404683,"byte_end":404690,"line_start":44,"line_end":44,"column_start":14,"column_end":21},"name":"0","qualname":"::lit::Lit::Bool::0","value":"lit::LitBool","parent":{"krate":0,"index":3752},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3755},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lit.rs","byte_start":404758,"byte_end":404766,"line_start":47,"line_end":47,"column_start":9,"column_end":17},"name":"Verbatim","qualname":"::lit::Lit::Verbatim","value":"Lit::Verbatim(Literal)","parent":{"krate":0,"index":3733},"children":[],"decl_id":null,"docs":" A raw token literal not interpreted by Syn.\n","sig":null,"attributes":[{"value":"/ A raw token literal not interpreted by Syn.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lit.rs","byte_start":404702,"byte_end":404749,"line_start":46,"line_end":46,"column_start":9,"column_end":56}}]},{"kind":"Field","id":{"krate":0,"index":3757},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lit.rs","byte_start":404767,"byte_end":404774,"line_start":47,"line_end":47,"column_start":18,"column_end":25},"name":"0","qualname":"::lit::Lit::Verbatim::0","value":"proc_macro2::Literal","parent":{"krate":0,"index":3755},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":3733},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lit.rs","byte_start":404124,"byte_end":404127,"line_start":22,"line_end":22,"column_start":14,"column_end":17},"name":"Lit","qualname":"::lit::Lit","value":"enum Lit {\n    Str(LitStr),\n    ByteStr(LitByteStr),\n    Byte(LitByte),\n    Char(LitChar),\n    Int(LitInt),\n    Float(LitFloat),\n    Bool(LitBool),\n    Verbatim(Literal),\n}","parent":null,"children":[{"krate":0,"index":3734},{"krate":0,"index":3737},{"krate":0,"index":3740},{"krate":0,"index":3743},{"krate":0,"index":3746},{"krate":0,"index":3749},{"krate":0,"index":3752},{"krate":0,"index":3755}],"decl_id":null,"docs":" A Rust literal such as a string or integer or boolean.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3772},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lit.rs","byte_start":404856,"byte_end":404862,"line_start":53,"line_end":53,"column_start":16,"column_end":22},"name":"LitStr","qualname":"::lit::LitStr","value":"LitStr {  }","parent":null,"children":[{"krate":0,"index":3773}],"decl_id":null,"docs":" A UTF-8 string literal: `\"foo\"`.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3774},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lit.rs","byte_start":404972,"byte_end":404982,"line_start":60,"line_end":60,"column_start":16,"column_end":26},"name":"LitByteStr","qualname":"::lit::LitByteStr","value":"LitByteStr {  }","parent":null,"children":[{"krate":0,"index":3775}],"decl_id":null,"docs":" A byte string literal: `b\"foo\"`.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3776},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lit.rs","byte_start":405083,"byte_end":405090,"line_start":67,"line_end":67,"column_start":16,"column_end":23},"name":"LitByte","qualname":"::lit::LitByte","value":"LitByte {  }","parent":null,"children":[{"krate":0,"index":3777}],"decl_id":null,"docs":" A byte literal: `b'f'`.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3778},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lit.rs","byte_start":405195,"byte_end":405202,"line_start":74,"line_end":74,"column_start":16,"column_end":23},"name":"LitChar","qualname":"::lit::LitChar","value":"LitChar {  }","parent":null,"children":[{"krate":0,"index":3779}],"decl_id":null,"docs":" A character literal: `'a'`.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3780},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lit.rs","byte_start":405376,"byte_end":405382,"line_start":86,"line_end":86,"column_start":16,"column_end":22},"name":"LitInt","qualname":"::lit::LitInt","value":"LitInt {  }","parent":null,"children":[{"krate":0,"index":3781}],"decl_id":null,"docs":" An integer literal: `1` or `1u16`.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3782},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lit.rs","byte_start":405658,"byte_end":405666,"line_start":101,"line_end":101,"column_start":16,"column_end":24},"name":"LitFloat","qualname":"::lit::LitFloat","value":"LitFloat {  }","parent":null,"children":[{"krate":0,"index":3783}],"decl_id":null,"docs":" A floating point literal: `1f64` or `1.0e10f64`.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3784},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lit.rs","byte_start":405875,"byte_end":405882,"line_start":114,"line_end":114,"column_start":16,"column_end":23},"name":"LitBool","qualname":"::lit::LitBool","value":"LitBool { value, span }","parent":null,"children":[{"krate":0,"index":3785},{"krate":0,"index":3786}],"decl_id":null,"docs":" A boolean literal: `true` or `false`.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3785},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lit.rs","byte_start":405897,"byte_end":405902,"line_start":115,"line_end":115,"column_start":13,"column_end":18},"name":"value","qualname":"::lit::LitBool::value","value":"bool","parent":{"krate":0,"index":3784},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3786},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lit.rs","byte_start":405922,"byte_end":405926,"line_start":116,"line_end":116,"column_start":13,"column_end":17},"name":"span","qualname":"::lit::LitBool::span","value":"proc_macro2::Span","parent":{"krate":0,"index":3784},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":744},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lit.rs","byte_start":405968,"byte_end":405971,"line_start":121,"line_end":121,"column_start":12,"column_end":15},"name":"new","qualname":"<LitStr>::new","value":"fn new(&str, Span) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":745},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lit.rs","byte_start":406253,"byte_end":406258,"line_start":132,"line_end":132,"column_start":12,"column_end":17},"name":"value","qualname":"<LitStr>::value","value":"fn value(&Self) -> String","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":746},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lit.rs","byte_start":409697,"byte_end":409701,"line_start":233,"line_end":233,"column_start":12,"column_end":16},"name":"span","qualname":"<LitStr>::span","value":"fn span(&Self) -> Span","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":747},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lit.rs","byte_start":409768,"byte_end":409776,"line_start":237,"line_end":237,"column_start":12,"column_end":20},"name":"set_span","qualname":"<LitStr>::set_span","value":"fn set_span(&mut Self, Span)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":748},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lit.rs","byte_start":409860,"byte_end":409866,"line_start":241,"line_end":241,"column_start":12,"column_end":18},"name":"suffix","qualname":"<LitStr>::suffix","value":"fn suffix(&Self) -> &str","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":749},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lit.rs","byte_start":409928,"byte_end":409933,"line_start":245,"line_end":245,"column_start":12,"column_end":17},"name":"token","qualname":"<LitStr>::token","value":"fn token(&Self) -> Literal","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":751},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lit.rs","byte_start":410024,"byte_end":410027,"line_start":251,"line_end":251,"column_start":12,"column_end":15},"name":"new","qualname":"<LitByteStr>::new","value":"fn new(&[u8], Span) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":752},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lit.rs","byte_start":410319,"byte_end":410324,"line_start":262,"line_end":262,"column_start":12,"column_end":17},"name":"value","qualname":"<LitByteStr>::value","value":"fn value(&Self) -> Vec<u8>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":753},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lit.rs","byte_start":410490,"byte_end":410494,"line_start":268,"line_end":268,"column_start":12,"column_end":16},"name":"span","qualname":"<LitByteStr>::span","value":"fn span(&Self) -> Span","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":754},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lit.rs","byte_start":410561,"byte_end":410569,"line_start":272,"line_end":272,"column_start":12,"column_end":20},"name":"set_span","qualname":"<LitByteStr>::set_span","value":"fn set_span(&mut Self, Span)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":755},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lit.rs","byte_start":410653,"byte_end":410659,"line_start":276,"line_end":276,"column_start":12,"column_end":18},"name":"suffix","qualname":"<LitByteStr>::suffix","value":"fn suffix(&Self) -> &str","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":756},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lit.rs","byte_start":410721,"byte_end":410726,"line_start":280,"line_end":280,"column_start":12,"column_end":17},"name":"token","qualname":"<LitByteStr>::token","value":"fn token(&Self) -> Literal","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":758},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lit.rs","byte_start":410814,"byte_end":410817,"line_start":286,"line_end":286,"column_start":12,"column_end":15},"name":"new","qualname":"<LitByte>::new","value":"fn new(u8, Span) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":759},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lit.rs","byte_start":411103,"byte_end":411108,"line_start":297,"line_end":297,"column_start":12,"column_end":17},"name":"value","qualname":"<LitByte>::value","value":"fn value(&Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":760},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lit.rs","byte_start":411265,"byte_end":411269,"line_start":303,"line_end":303,"column_start":12,"column_end":16},"name":"span","qualname":"<LitByte>::span","value":"fn span(&Self) -> Span","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":761},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lit.rs","byte_start":411336,"byte_end":411344,"line_start":307,"line_end":307,"column_start":12,"column_end":20},"name":"set_span","qualname":"<LitByte>::set_span","value":"fn set_span(&mut Self, Span)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":762},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lit.rs","byte_start":411428,"byte_end":411434,"line_start":311,"line_end":311,"column_start":12,"column_end":18},"name":"suffix","qualname":"<LitByte>::suffix","value":"fn suffix(&Self) -> &str","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":763},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lit.rs","byte_start":411496,"byte_end":411501,"line_start":315,"line_end":315,"column_start":12,"column_end":17},"name":"token","qualname":"<LitByte>::token","value":"fn token(&Self) -> Literal","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":765},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lit.rs","byte_start":411589,"byte_end":411592,"line_start":321,"line_end":321,"column_start":12,"column_end":15},"name":"new","qualname":"<LitChar>::new","value":"fn new(char, Span) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":766},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lit.rs","byte_start":411878,"byte_end":411883,"line_start":332,"line_end":332,"column_start":12,"column_end":17},"name":"value","qualname":"<LitChar>::value","value":"fn value(&Self) -> char","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":767},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lit.rs","byte_start":412042,"byte_end":412046,"line_start":338,"line_end":338,"column_start":12,"column_end":16},"name":"span","qualname":"<LitChar>::span","value":"fn span(&Self) -> Span","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":768},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lit.rs","byte_start":412113,"byte_end":412121,"line_start":342,"line_end":342,"column_start":12,"column_end":20},"name":"set_span","qualname":"<LitChar>::set_span","value":"fn set_span(&mut Self, Span)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":769},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lit.rs","byte_start":412205,"byte_end":412211,"line_start":346,"line_end":346,"column_start":12,"column_end":18},"name":"suffix","qualname":"<LitChar>::suffix","value":"fn suffix(&Self) -> &str","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":770},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lit.rs","byte_start":412273,"byte_end":412278,"line_start":350,"line_end":350,"column_start":12,"column_end":17},"name":"token","qualname":"<LitChar>::token","value":"fn token(&Self) -> Literal","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":772},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lit.rs","byte_start":412365,"byte_end":412368,"line_start":356,"line_end":356,"column_start":12,"column_end":15},"name":"new","qualname":"<LitInt>::new","value":"fn new(&str, Span) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":773},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lit.rs","byte_start":412974,"byte_end":412987,"line_start":377,"line_end":377,"column_start":12,"column_end":25},"name":"base10_digits","qualname":"<LitInt>::base10_digits","value":"fn base10_digits(&Self) -> &str","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":774},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lit.rs","byte_start":413735,"byte_end":413747,"line_start":403,"line_end":403,"column_start":12,"column_end":24},"name":"base10_parse","qualname":"<LitInt>::base10_parse","value":"fn base10_parse<N>(&Self) -> Result<N> where N: FromStr, N::Err: Display","parent":null,"children":[],"decl_id":null,"docs":" Parses the literal into a selected number type.","sig":null,"attributes":[{"value":"/ Parses the literal into a selected number type.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lit.rs","byte_start":413042,"byte_end":413093,"line_start":381,"line_end":381,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lit.rs","byte_start":413098,"byte_end":413101,"line_start":382,"line_end":382,"column_start":5,"column_end":8}},{"value":"/ This is equivalent to `lit.base10_digits().parse()` except that the","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lit.rs","byte_start":413106,"byte_end":413177,"line_start":383,"line_end":383,"column_start":5,"column_end":76}},{"value":"/ resulting errors will be correctly spanned to point to the literal token","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lit.rs","byte_start":413182,"byte_end":413258,"line_start":384,"line_end":384,"column_start":5,"column_end":81}},{"value":"/ in the macro input.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lit.rs","byte_start":413263,"byte_end":413286,"line_start":385,"line_end":385,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lit.rs","byte_start":413291,"byte_end":413294,"line_start":386,"line_end":386,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lit.rs","byte_start":413299,"byte_end":413306,"line_start":387,"line_end":387,"column_start":5,"column_end":12}},{"value":"/ use syn::LitInt;","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lit.rs","byte_start":413311,"byte_end":413331,"line_start":388,"line_end":388,"column_start":5,"column_end":25}},{"value":"/ use syn::parse::{Parse, ParseStream, Result};","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lit.rs","byte_start":413336,"byte_end":413385,"line_start":389,"line_end":389,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lit.rs","byte_start":413390,"byte_end":413393,"line_start":390,"line_end":390,"column_start":5,"column_end":8}},{"value":"/ struct Port {","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lit.rs","byte_start":413398,"byte_end":413415,"line_start":391,"line_end":391,"column_start":5,"column_end":22}},{"value":"/     value: u16,","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lit.rs","byte_start":413420,"byte_end":413439,"line_start":392,"line_end":392,"column_start":5,"column_end":24}},{"value":"/ }","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lit.rs","byte_start":413444,"byte_end":413449,"line_start":393,"line_end":393,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lit.rs","byte_start":413454,"byte_end":413457,"line_start":394,"line_end":394,"column_start":5,"column_end":8}},{"value":"/ impl Parse for Port {","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lit.rs","byte_start":413462,"byte_end":413487,"line_start":395,"line_end":395,"column_start":5,"column_end":30}},{"value":"/     fn parse(input: ParseStream) -> Result<Self> {","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lit.rs","byte_start":413492,"byte_end":413546,"line_start":396,"line_end":396,"column_start":5,"column_end":59}},{"value":"/         let lit: LitInt = input.parse()?;","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lit.rs","byte_start":413551,"byte_end":413596,"line_start":397,"line_end":397,"column_start":5,"column_end":50}},{"value":"/         let value = lit.base10_parse::<u16>()?;","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lit.rs","byte_start":413601,"byte_end":413652,"line_start":398,"line_end":398,"column_start":5,"column_end":56}},{"value":"/         Ok(Port { value })","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lit.rs","byte_start":413657,"byte_end":413687,"line_start":399,"line_end":399,"column_start":5,"column_end":35}},{"value":"/     }","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lit.rs","byte_start":413692,"byte_end":413701,"line_start":400,"line_end":400,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lit.rs","byte_start":413706,"byte_end":413711,"line_start":401,"line_end":401,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lit.rs","byte_start":413716,"byte_end":413723,"line_start":402,"line_end":402,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":777},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lit.rs","byte_start":413957,"byte_end":413963,"line_start":413,"line_end":413,"column_start":12,"column_end":18},"name":"suffix","qualname":"<LitInt>::suffix","value":"fn suffix(&Self) -> &str","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":778},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lit.rs","byte_start":414025,"byte_end":414029,"line_start":417,"line_end":417,"column_start":12,"column_end":16},"name":"span","qualname":"<LitInt>::span","value":"fn span(&Self) -> Span","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":779},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lit.rs","byte_start":414096,"byte_end":414104,"line_start":421,"line_end":421,"column_start":12,"column_end":20},"name":"set_span","qualname":"<LitInt>::set_span","value":"fn set_span(&mut Self, Span)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":780},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lit.rs","byte_start":414188,"byte_end":414193,"line_start":425,"line_end":425,"column_start":12,"column_end":17},"name":"token","qualname":"<LitInt>::token","value":"fn token(&Self) -> Literal","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":782},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lit.rs","byte_start":414294,"byte_end":414298,"line_start":431,"line_end":431,"column_start":8,"column_end":12},"name":"from","qualname":"<LitInt as std::convert::From>::from","value":"fn from(Literal) -> Self","parent":{"krate":2,"index":3085},"children":[],"decl_id":{"krate":2,"index":3087},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":784},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lit.rs","byte_start":414742,"byte_end":414745,"line_start":448,"line_end":448,"column_start":8,"column_end":11},"name":"fmt","qualname":"<LitInt as std::fmt::Display>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10122},"children":[],"decl_id":{"krate":2,"index":10123},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":786},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lit.rs","byte_start":414877,"byte_end":414880,"line_start":454,"line_end":454,"column_start":12,"column_end":15},"name":"new","qualname":"<LitFloat>::new","value":"fn new(&str, Span) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":787},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lit.rs","byte_start":415487,"byte_end":415500,"line_start":475,"line_end":475,"column_start":12,"column_end":25},"name":"base10_digits","qualname":"<LitFloat>::base10_digits","value":"fn base10_digits(&Self) -> &str","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":788},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lit.rs","byte_start":415562,"byte_end":415574,"line_start":479,"line_end":479,"column_start":12,"column_end":24},"name":"base10_parse","qualname":"<LitFloat>::base10_parse","value":"fn base10_parse<N>(&Self) -> Result<N> where N: FromStr, N::Err: Display","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":791},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lit.rs","byte_start":415784,"byte_end":415790,"line_start":489,"line_end":489,"column_start":12,"column_end":18},"name":"suffix","qualname":"<LitFloat>::suffix","value":"fn suffix(&Self) -> &str","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":792},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lit.rs","byte_start":415852,"byte_end":415856,"line_start":493,"line_end":493,"column_start":12,"column_end":16},"name":"span","qualname":"<LitFloat>::span","value":"fn span(&Self) -> Span","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":793},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lit.rs","byte_start":415923,"byte_end":415931,"line_start":497,"line_end":497,"column_start":12,"column_end":20},"name":"set_span","qualname":"<LitFloat>::set_span","value":"fn set_span(&mut Self, Span)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":794},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lit.rs","byte_start":416015,"byte_end":416020,"line_start":501,"line_end":501,"column_start":12,"column_end":17},"name":"token","qualname":"<LitFloat>::token","value":"fn token(&Self) -> Literal","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":796},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lit.rs","byte_start":416123,"byte_end":416127,"line_start":507,"line_end":507,"column_start":8,"column_end":12},"name":"from","qualname":"<LitFloat as std::convert::From>::from","value":"fn from(Literal) -> Self","parent":{"krate":2,"index":3085},"children":[],"decl_id":{"krate":2,"index":3087},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":798},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lit.rs","byte_start":416576,"byte_end":416579,"line_start":524,"line_end":524,"column_start":8,"column_end":11},"name":"fmt","qualname":"<LitFloat as std::fmt::Display>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10122},"children":[],"decl_id":{"krate":2,"index":10123},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":800},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lit.rs","byte_start":416710,"byte_end":416713,"line_start":530,"line_end":530,"column_start":12,"column_end":15},"name":"new","qualname":"<LitBool>::new","value":"fn new(bool, Span) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":801},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lit.rs","byte_start":416799,"byte_end":416804,"line_start":534,"line_end":534,"column_start":12,"column_end":17},"name":"value","qualname":"<LitBool>::value","value":"fn value(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":802},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lit.rs","byte_start":416859,"byte_end":416863,"line_start":538,"line_end":538,"column_start":12,"column_end":16},"name":"span","qualname":"<LitBool>::span","value":"fn span(&Self) -> Span","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":803},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lit.rs","byte_start":416917,"byte_end":416925,"line_start":542,"line_end":542,"column_start":12,"column_end":20},"name":"set_span","qualname":"<LitBool>::set_span","value":"fn set_span(&mut Self, Span)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":804},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lit.rs","byte_start":416995,"byte_end":417000,"line_start":546,"line_end":546,"column_start":12,"column_end":17},"name":"token","qualname":"<LitBool>::token","value":"fn token(&Self) -> Ident","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3788},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lit.rs","byte_start":422109,"byte_end":422115,"line_start":722,"line_end":722,"column_start":9,"column_end":15},"name":"Cooked","qualname":"::lit::StrStyle::Cooked","value":"StrStyle::Cooked","parent":{"krate":0,"index":3787},"children":[],"decl_id":null,"docs":" An ordinary string like `\"data\"`.\n","sig":null,"attributes":[{"value":"/ An ordinary string like `\"data\"`.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lit.rs","byte_start":422063,"byte_end":422100,"line_start":721,"line_end":721,"column_start":9,"column_end":46}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3790},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lit.rs","byte_start":422250,"byte_end":422253,"line_start":726,"line_end":726,"column_start":9,"column_end":12},"name":"Raw","qualname":"::lit::StrStyle::Raw","value":"StrStyle::Raw(usize)","parent":{"krate":0,"index":3787},"children":[],"decl_id":null,"docs":" A raw string like `r##\"data\"##`.","sig":null,"attributes":[{"value":"/ A raw string like `r##\"data\"##`.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lit.rs","byte_start":422125,"byte_end":422161,"line_start":723,"line_end":723,"column_start":9,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lit.rs","byte_start":422170,"byte_end":422173,"line_start":724,"line_end":724,"column_start":9,"column_end":12}},{"value":"/ The unsigned integer is the number of `#` symbols used.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lit.rs","byte_start":422182,"byte_end":422241,"line_start":725,"line_end":725,"column_start":9,"column_end":68}}]},{"kind":"Field","id":{"krate":0,"index":3792},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lit.rs","byte_start":422254,"byte_end":422259,"line_start":726,"line_end":726,"column_start":13,"column_end":18},"name":"0","qualname":"::lit::StrStyle::Raw::0","value":"usize","parent":{"krate":0,"index":3790},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":3787},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lit.rs","byte_start":422034,"byte_end":422042,"line_start":720,"line_end":720,"column_start":14,"column_end":22},"name":"StrStyle","qualname":"::lit::StrStyle","value":"enum StrStyle { Cooked, Raw(usize), }","parent":null,"children":[{"krate":0,"index":3788},{"krate":0,"index":3790}],"decl_id":null,"docs":" The style of a string literal, either plain quoted or a raw string like\n `r##\"data\"##`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":822},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lit.rs","byte_start":429274,"byte_end":429277,"line_start":958,"line_end":958,"column_start":16,"column_end":19},"name":"new","qualname":"<Lit>::new","value":"fn new(Literal) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Interpret a Syn literal from a proc-macro2 literal.\n","sig":null,"attributes":[{"value":"/ Interpret a Syn literal from a proc-macro2 literal.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lit.rs","byte_start":429203,"byte_end":429258,"line_start":957,"line_end":957,"column_start":9,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":823},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lit.rs","byte_start":431778,"byte_end":431784,"line_start":1023,"line_end":1023,"column_start":16,"column_end":22},"name":"suffix","qualname":"<Lit>::suffix","value":"fn suffix(&Self) -> &str","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":824},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lit.rs","byte_start":432212,"byte_end":432216,"line_start":1035,"line_end":1035,"column_start":16,"column_end":20},"name":"span","qualname":"<Lit>::span","value":"fn span(&Self) -> Span","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":825},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lit.rs","byte_start":432671,"byte_end":432679,"line_start":1048,"line_end":1048,"column_start":16,"column_end":24},"name":"set_span","qualname":"<Lit>::set_span","value":"fn set_span(&mut Self, Span)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3793},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\mac.rs","byte_start":451890,"byte_end":451895,"line_start":16,"line_end":16,"column_start":16,"column_end":21},"name":"Macro","qualname":"::mac::Macro","value":"Macro { path, bang_token, delimiter, tokens }","parent":null,"children":[{"krate":0,"index":3794},{"krate":0,"index":3795},{"krate":0,"index":3796},{"krate":0,"index":3797}],"decl_id":null,"docs":" A macro invocation: `println!(\"{}\", mac)`.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3794},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\mac.rs","byte_start":451910,"byte_end":451914,"line_start":17,"line_end":17,"column_start":13,"column_end":17},"name":"path","qualname":"::mac::Macro::path","value":"path::Path","parent":{"krate":0,"index":3793},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3795},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\mac.rs","byte_start":451934,"byte_end":451944,"line_start":18,"line_end":18,"column_start":13,"column_end":23},"name":"bang_token","qualname":"::mac::Macro::bang_token","value":"token::Bang","parent":{"krate":0,"index":3793},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3796},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\mac.rs","byte_start":451969,"byte_end":451978,"line_start":19,"line_end":19,"column_start":13,"column_end":22},"name":"delimiter","qualname":"::mac::Macro::delimiter","value":"mac::MacroDelimiter","parent":{"krate":0,"index":3793},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3797},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\mac.rs","byte_start":452008,"byte_end":452014,"line_start":20,"line_end":20,"column_start":13,"column_end":19},"name":"tokens","qualname":"::mac::Macro::tokens","value":"proc_macro2::TokenStream","parent":{"krate":0,"index":3793},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3799},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\mac.rs","byte_start":452368,"byte_end":452373,"line_start":31,"line_end":31,"column_start":9,"column_end":14},"name":"Paren","qualname":"::mac::MacroDelimiter::Paren","value":"MacroDelimiter::Paren(Paren)","parent":{"krate":0,"index":3798},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3801},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\mac.rs","byte_start":452374,"byte_end":452379,"line_start":31,"line_end":31,"column_start":15,"column_end":20},"name":"0","qualname":"::mac::MacroDelimiter::Paren::0","value":"token::Paren","parent":{"krate":0,"index":3799},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3802},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\mac.rs","byte_start":452390,"byte_end":452395,"line_start":32,"line_end":32,"column_start":9,"column_end":14},"name":"Brace","qualname":"::mac::MacroDelimiter::Brace","value":"MacroDelimiter::Brace(Brace)","parent":{"krate":0,"index":3798},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3804},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\mac.rs","byte_start":452396,"byte_end":452401,"line_start":32,"line_end":32,"column_start":15,"column_end":20},"name":"0","qualname":"::mac::MacroDelimiter::Brace::0","value":"token::Brace","parent":{"krate":0,"index":3802},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3805},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\mac.rs","byte_start":452412,"byte_end":452419,"line_start":33,"line_end":33,"column_start":9,"column_end":16},"name":"Bracket","qualname":"::mac::MacroDelimiter::Bracket","value":"MacroDelimiter::Bracket(Bracket)","parent":{"krate":0,"index":3798},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3807},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\mac.rs","byte_start":452420,"byte_end":452427,"line_start":33,"line_end":33,"column_start":17,"column_end":24},"name":"0","qualname":"::mac::MacroDelimiter::Bracket::0","value":"token::Bracket","parent":{"krate":0,"index":3805},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":3798},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\mac.rs","byte_start":452343,"byte_end":452357,"line_start":30,"line_end":30,"column_start":14,"column_end":28},"name":"MacroDelimiter","qualname":"::mac::MacroDelimiter","value":"enum MacroDelimiter { Paren(Paren), Brace(Brace), Bracket(Bracket), }","parent":null,"children":[{"krate":0,"index":3799},{"krate":0,"index":3802},{"krate":0,"index":3805}],"decl_id":null,"docs":" A grouping token that surrounds a macro body: `m!(...)` or `m!{...}` or `m![...]`.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3808},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\derive.rs","byte_start":459508,"byte_end":459519,"line_start":9,"line_end":9,"column_start":16,"column_end":27},"name":"DeriveInput","qualname":"::derive::DeriveInput","value":"DeriveInput { attrs, vis, ident, generics, data }","parent":null,"children":[{"krate":0,"index":3809},{"krate":0,"index":3810},{"krate":0,"index":3811},{"krate":0,"index":3812},{"krate":0,"index":3813}],"decl_id":null,"docs":" Data structure sent to a `proc_macro_derive` macro.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3809},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\derive.rs","byte_start":459593,"byte_end":459598,"line_start":11,"line_end":11,"column_start":13,"column_end":18},"name":"attrs","qualname":"::derive::DeriveInput::attrs","value":"std::vec::Vec<attr::Attribute>","parent":{"krate":0,"index":3808},"children":[],"decl_id":null,"docs":" Attributes tagged on the whole struct or enum.\n","sig":null,"attributes":[{"value":"/ Attributes tagged on the whole struct or enum.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\derive.rs","byte_start":459530,"byte_end":459580,"line_start":10,"line_end":10,"column_start":9,"column_end":59}}]},{"kind":"Field","id":{"krate":0,"index":3810},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\derive.rs","byte_start":459675,"byte_end":459678,"line_start":14,"line_end":14,"column_start":13,"column_end":16},"name":"vis","qualname":"::derive::DeriveInput::vis","value":"data::Visibility","parent":{"krate":0,"index":3808},"children":[],"decl_id":null,"docs":" Visibility of the struct or enum.\n","sig":null,"attributes":[{"value":"/ Visibility of the struct or enum.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\derive.rs","byte_start":459625,"byte_end":459662,"line_start":13,"line_end":13,"column_start":9,"column_end":46}}]},{"kind":"Field","id":{"krate":0,"index":3811},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\derive.rs","byte_start":459745,"byte_end":459750,"line_start":17,"line_end":17,"column_start":13,"column_end":18},"name":"ident","qualname":"::derive::DeriveInput::ident","value":"proc_macro2::Ident","parent":{"krate":0,"index":3808},"children":[],"decl_id":null,"docs":" Name of the struct or enum.\n","sig":null,"attributes":[{"value":"/ Name of the struct or enum.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\derive.rs","byte_start":459701,"byte_end":459732,"line_start":16,"line_end":16,"column_start":9,"column_end":40}}]},{"kind":"Field","id":{"krate":0,"index":3812},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\derive.rs","byte_start":459830,"byte_end":459838,"line_start":20,"line_end":20,"column_start":13,"column_end":21},"name":"generics","qualname":"::derive::DeriveInput::generics","value":"generics::Generics","parent":{"krate":0,"index":3808},"children":[],"decl_id":null,"docs":" Generics required to complete the definition.\n","sig":null,"attributes":[{"value":"/ Generics required to complete the definition.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\derive.rs","byte_start":459768,"byte_end":459817,"line_start":19,"line_end":19,"column_start":9,"column_end":58}}]},{"kind":"Field","id":{"krate":0,"index":3813},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\derive.rs","byte_start":459907,"byte_end":459911,"line_start":23,"line_end":23,"column_start":13,"column_end":17},"name":"data","qualname":"::derive::DeriveInput::data","value":"derive::Data","parent":{"krate":0,"index":3808},"children":[],"decl_id":null,"docs":" Data within the struct or enum.\n","sig":null,"attributes":[{"value":"/ Data within the struct or enum.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\derive.rs","byte_start":459859,"byte_end":459894,"line_start":22,"line_end":22,"column_start":9,"column_end":44}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3815},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\derive.rs","byte_start":460392,"byte_end":460398,"line_start":40,"line_end":40,"column_start":9,"column_end":15},"name":"Struct","qualname":"::derive::Data::Struct","value":"Data::Struct(DataStruct)","parent":{"krate":0,"index":3814},"children":[],"decl_id":null,"docs":" A struct input to a `proc_macro_derive` macro.\n","sig":null,"attributes":[{"value":"/ A struct input to a `proc_macro_derive` macro.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\derive.rs","byte_start":460333,"byte_end":460383,"line_start":39,"line_end":39,"column_start":9,"column_end":59}}]},{"kind":"Field","id":{"krate":0,"index":3817},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\derive.rs","byte_start":460399,"byte_end":460409,"line_start":40,"line_end":40,"column_start":16,"column_end":26},"name":"0","qualname":"::derive::Data::Struct::0","value":"derive::DataStruct","parent":{"krate":0,"index":3815},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3818},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\derive.rs","byte_start":460479,"byte_end":460483,"line_start":43,"line_end":43,"column_start":9,"column_end":13},"name":"Enum","qualname":"::derive::Data::Enum","value":"Data::Enum(DataEnum)","parent":{"krate":0,"index":3814},"children":[],"decl_id":null,"docs":" An enum input to a `proc_macro_derive` macro.\n","sig":null,"attributes":[{"value":"/ An enum input to a `proc_macro_derive` macro.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\derive.rs","byte_start":460421,"byte_end":460470,"line_start":42,"line_end":42,"column_start":9,"column_end":58}}]},{"kind":"Field","id":{"krate":0,"index":3820},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\derive.rs","byte_start":460484,"byte_end":460492,"line_start":43,"line_end":43,"column_start":14,"column_end":22},"name":"0","qualname":"::derive::Data::Enum::0","value":"derive::DataEnum","parent":{"krate":0,"index":3818},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3821},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\derive.rs","byte_start":460572,"byte_end":460577,"line_start":46,"line_end":46,"column_start":9,"column_end":14},"name":"Union","qualname":"::derive::Data::Union","value":"Data::Union(DataUnion)","parent":{"krate":0,"index":3814},"children":[],"decl_id":null,"docs":" An untagged union input to a `proc_macro_derive` macro.\n","sig":null,"attributes":[{"value":"/ An untagged union input to a `proc_macro_derive` macro.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\derive.rs","byte_start":460504,"byte_end":460563,"line_start":45,"line_end":45,"column_start":9,"column_end":68}}]},{"kind":"Field","id":{"krate":0,"index":3823},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\derive.rs","byte_start":460578,"byte_end":460587,"line_start":46,"line_end":46,"column_start":15,"column_end":24},"name":"0","qualname":"::derive::Data::Union::0","value":"derive::DataUnion","parent":{"krate":0,"index":3821},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":3814},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\derive.rs","byte_start":460318,"byte_end":460322,"line_start":38,"line_end":38,"column_start":14,"column_end":18},"name":"Data","qualname":"::derive::Data","value":"enum Data { Struct(DataStruct), Enum(DataEnum), Union(DataUnion), }","parent":null,"children":[{"krate":0,"index":3815},{"krate":0,"index":3818},{"krate":0,"index":3821}],"decl_id":null,"docs":" The storage of a struct, enum or union data structure.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3830},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\derive.rs","byte_start":460868,"byte_end":460878,"line_start":58,"line_end":58,"column_start":16,"column_end":26},"name":"DataStruct","qualname":"::derive::DataStruct","value":"DataStruct { struct_token, fields, semi_token }","parent":null,"children":[{"krate":0,"index":3831},{"krate":0,"index":3832},{"krate":0,"index":3833}],"decl_id":null,"docs":" A struct input to a `proc_macro_derive` macro.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3831},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\derive.rs","byte_start":460893,"byte_end":460905,"line_start":59,"line_end":59,"column_start":13,"column_end":25},"name":"struct_token","qualname":"::derive::DataStruct::struct_token","value":"token::Struct","parent":{"krate":0,"index":3830},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3832},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\derive.rs","byte_start":460935,"byte_end":460941,"line_start":60,"line_end":60,"column_start":13,"column_end":19},"name":"fields","qualname":"::derive::DataStruct::fields","value":"data::Fields","parent":{"krate":0,"index":3830},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3833},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\derive.rs","byte_start":460963,"byte_end":460973,"line_start":61,"line_end":61,"column_start":13,"column_end":23},"name":"semi_token","qualname":"::derive::DataStruct::semi_token","value":"std::option::Option<token::Semi>","parent":{"krate":0,"index":3830},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3834},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\derive.rs","byte_start":461240,"byte_end":461248,"line_start":71,"line_end":71,"column_start":16,"column_end":24},"name":"DataEnum","qualname":"::derive::DataEnum","value":"DataEnum { enum_token, brace_token, variants }","parent":null,"children":[{"krate":0,"index":3835},{"krate":0,"index":3836},{"krate":0,"index":3837}],"decl_id":null,"docs":" An enum input to a `proc_macro_derive` macro.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3835},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\derive.rs","byte_start":461263,"byte_end":461273,"line_start":72,"line_end":72,"column_start":13,"column_end":23},"name":"enum_token","qualname":"::derive::DataEnum::enum_token","value":"token::Enum","parent":{"krate":0,"index":3834},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3836},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\derive.rs","byte_start":461301,"byte_end":461312,"line_start":73,"line_end":73,"column_start":13,"column_end":24},"name":"brace_token","qualname":"::derive::DataEnum::brace_token","value":"token::Brace","parent":{"krate":0,"index":3834},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3837},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\derive.rs","byte_start":461340,"byte_end":461348,"line_start":74,"line_end":74,"column_start":13,"column_end":21},"name":"variants","qualname":"::derive::DataEnum::variants","value":"punctuated::Punctuated<data::Variant, token::Comma>","parent":{"krate":0,"index":3834},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3838},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\derive.rs","byte_start":461638,"byte_end":461647,"line_start":84,"line_end":84,"column_start":16,"column_end":25},"name":"DataUnion","qualname":"::derive::DataUnion","value":"DataUnion { union_token, fields }","parent":null,"children":[{"krate":0,"index":3839},{"krate":0,"index":3840}],"decl_id":null,"docs":" An untagged union input to a `proc_macro_derive` macro.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3839},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\derive.rs","byte_start":461662,"byte_end":461673,"line_start":85,"line_end":85,"column_start":13,"column_end":24},"name":"union_token","qualname":"::derive::DataUnion::union_token","value":"token::Union","parent":{"krate":0,"index":3838},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3840},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\derive.rs","byte_start":461702,"byte_end":461708,"line_start":86,"line_end":86,"column_start":13,"column_end":19},"name":"fields","qualname":"::derive::DataUnion::fields","value":"data::FieldsNamed","parent":{"krate":0,"index":3838},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3842},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\op.rs","byte_start":468720,"byte_end":468723,"line_start":9,"line_end":9,"column_start":9,"column_end":12},"name":"Add","qualname":"::op::BinOp::Add","value":"BinOp::Add(crate::token::Add)","parent":{"krate":0,"index":3841},"children":[],"decl_id":null,"docs":" The `+` operator (addition)\n","sig":null,"attributes":[{"value":"/ The `+` operator (addition)","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\op.rs","byte_start":468680,"byte_end":468711,"line_start":8,"line_end":8,"column_start":9,"column_end":40}}]},{"kind":"Field","id":{"krate":0,"index":3844},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\op.rs","byte_start":468724,"byte_end":468733,"line_start":9,"line_end":9,"column_start":13,"column_end":22},"name":"0","qualname":"::op::BinOp::Add::0","value":"token::Add","parent":{"krate":0,"index":3842},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3845},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\op.rs","byte_start":468787,"byte_end":468790,"line_start":11,"line_end":11,"column_start":9,"column_end":12},"name":"Sub","qualname":"::op::BinOp::Sub","value":"BinOp::Sub(crate::token::Sub)","parent":{"krate":0,"index":3841},"children":[],"decl_id":null,"docs":" The `-` operator (subtraction)\n","sig":null,"attributes":[{"value":"/ The `-` operator (subtraction)","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\op.rs","byte_start":468744,"byte_end":468778,"line_start":10,"line_end":10,"column_start":9,"column_end":43}}]},{"kind":"Field","id":{"krate":0,"index":3847},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\op.rs","byte_start":468791,"byte_end":468800,"line_start":11,"line_end":11,"column_start":13,"column_end":22},"name":"0","qualname":"::op::BinOp::Sub::0","value":"token::Sub","parent":{"krate":0,"index":3845},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3848},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\op.rs","byte_start":468857,"byte_end":468860,"line_start":13,"line_end":13,"column_start":9,"column_end":12},"name":"Mul","qualname":"::op::BinOp::Mul","value":"BinOp::Mul(crate::token::Star)","parent":{"krate":0,"index":3841},"children":[],"decl_id":null,"docs":" The `*` operator (multiplication)\n","sig":null,"attributes":[{"value":"/ The `*` operator (multiplication)","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\op.rs","byte_start":468811,"byte_end":468848,"line_start":12,"line_end":12,"column_start":9,"column_end":46}}]},{"kind":"Field","id":{"krate":0,"index":3850},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\op.rs","byte_start":468861,"byte_end":468870,"line_start":13,"line_end":13,"column_start":13,"column_end":22},"name":"0","qualname":"::op::BinOp::Mul::0","value":"token::Star","parent":{"krate":0,"index":3848},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3851},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\op.rs","byte_start":468921,"byte_end":468924,"line_start":15,"line_end":15,"column_start":9,"column_end":12},"name":"Div","qualname":"::op::BinOp::Div","value":"BinOp::Div(crate::token::Div)","parent":{"krate":0,"index":3841},"children":[],"decl_id":null,"docs":" The `/` operator (division)\n","sig":null,"attributes":[{"value":"/ The `/` operator (division)","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\op.rs","byte_start":468881,"byte_end":468912,"line_start":14,"line_end":14,"column_start":9,"column_end":40}}]},{"kind":"Field","id":{"krate":0,"index":3853},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\op.rs","byte_start":468925,"byte_end":468934,"line_start":15,"line_end":15,"column_start":13,"column_end":22},"name":"0","qualname":"::op::BinOp::Div::0","value":"token::Div","parent":{"krate":0,"index":3851},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3854},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\op.rs","byte_start":468984,"byte_end":468987,"line_start":17,"line_end":17,"column_start":9,"column_end":12},"name":"Rem","qualname":"::op::BinOp::Rem","value":"BinOp::Rem(crate::token::Rem)","parent":{"krate":0,"index":3841},"children":[],"decl_id":null,"docs":" The `%` operator (modulus)\n","sig":null,"attributes":[{"value":"/ The `%` operator (modulus)","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\op.rs","byte_start":468945,"byte_end":468975,"line_start":16,"line_end":16,"column_start":9,"column_end":39}}]},{"kind":"Field","id":{"krate":0,"index":3856},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\op.rs","byte_start":468988,"byte_end":468997,"line_start":17,"line_end":17,"column_start":13,"column_end":22},"name":"0","qualname":"::op::BinOp::Rem::0","value":"token::Rem","parent":{"krate":0,"index":3854},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3857},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\op.rs","byte_start":469052,"byte_end":469055,"line_start":19,"line_end":19,"column_start":9,"column_end":12},"name":"And","qualname":"::op::BinOp::And","value":"BinOp::And(crate::token::AndAnd)","parent":{"krate":0,"index":3841},"children":[],"decl_id":null,"docs":" The `&&` operator (logical and)\n","sig":null,"attributes":[{"value":"/ The `&&` operator (logical and)","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\op.rs","byte_start":469008,"byte_end":469043,"line_start":18,"line_end":18,"column_start":9,"column_end":44}}]},{"kind":"Field","id":{"krate":0,"index":3859},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\op.rs","byte_start":469056,"byte_end":469066,"line_start":19,"line_end":19,"column_start":13,"column_end":23},"name":"0","qualname":"::op::BinOp::And::0","value":"token::AndAnd","parent":{"krate":0,"index":3857},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3860},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\op.rs","byte_start":469120,"byte_end":469122,"line_start":21,"line_end":21,"column_start":9,"column_end":11},"name":"Or","qualname":"::op::BinOp::Or","value":"BinOp::Or(crate::token::OrOr)","parent":{"krate":0,"index":3841},"children":[],"decl_id":null,"docs":" The `||` operator (logical or)\n","sig":null,"attributes":[{"value":"/ The `||` operator (logical or)","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\op.rs","byte_start":469077,"byte_end":469111,"line_start":20,"line_end":20,"column_start":9,"column_end":43}}]},{"kind":"Field","id":{"krate":0,"index":3862},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\op.rs","byte_start":469123,"byte_end":469133,"line_start":21,"line_end":21,"column_start":12,"column_end":22},"name":"0","qualname":"::op::BinOp::Or::0","value":"token::OrOr","parent":{"krate":0,"index":3860},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3863},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\op.rs","byte_start":469187,"byte_end":469193,"line_start":23,"line_end":23,"column_start":9,"column_end":15},"name":"BitXor","qualname":"::op::BinOp::BitXor","value":"BinOp::BitXor(crate::token::Caret)","parent":{"krate":0,"index":3841},"children":[],"decl_id":null,"docs":" The `^` operator (bitwise xor)\n","sig":null,"attributes":[{"value":"/ The `^` operator (bitwise xor)","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\op.rs","byte_start":469144,"byte_end":469178,"line_start":22,"line_end":22,"column_start":9,"column_end":43}}]},{"kind":"Field","id":{"krate":0,"index":3865},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\op.rs","byte_start":469194,"byte_end":469203,"line_start":23,"line_end":23,"column_start":16,"column_end":25},"name":"0","qualname":"::op::BinOp::BitXor::0","value":"token::Caret","parent":{"krate":0,"index":3863},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3866},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\op.rs","byte_start":469257,"byte_end":469263,"line_start":25,"line_end":25,"column_start":9,"column_end":15},"name":"BitAnd","qualname":"::op::BinOp::BitAnd","value":"BinOp::BitAnd(crate::token::And)","parent":{"krate":0,"index":3841},"children":[],"decl_id":null,"docs":" The `&` operator (bitwise and)\n","sig":null,"attributes":[{"value":"/ The `&` operator (bitwise and)","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\op.rs","byte_start":469214,"byte_end":469248,"line_start":24,"line_end":24,"column_start":9,"column_end":43}}]},{"kind":"Field","id":{"krate":0,"index":3868},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\op.rs","byte_start":469264,"byte_end":469273,"line_start":25,"line_end":25,"column_start":16,"column_end":25},"name":"0","qualname":"::op::BinOp::BitAnd::0","value":"token::And","parent":{"krate":0,"index":3866},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3869},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\op.rs","byte_start":469326,"byte_end":469331,"line_start":27,"line_end":27,"column_start":9,"column_end":14},"name":"BitOr","qualname":"::op::BinOp::BitOr","value":"BinOp::BitOr(crate::token::Or)","parent":{"krate":0,"index":3841},"children":[],"decl_id":null,"docs":" The `|` operator (bitwise or)\n","sig":null,"attributes":[{"value":"/ The `|` operator (bitwise or)","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\op.rs","byte_start":469284,"byte_end":469317,"line_start":26,"line_end":26,"column_start":9,"column_end":42}}]},{"kind":"Field","id":{"krate":0,"index":3871},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\op.rs","byte_start":469332,"byte_end":469341,"line_start":27,"line_end":27,"column_start":15,"column_end":24},"name":"0","qualname":"::op::BinOp::BitOr::0","value":"token::Or","parent":{"krate":0,"index":3869},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3872},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\op.rs","byte_start":469395,"byte_end":469398,"line_start":29,"line_end":29,"column_start":9,"column_end":12},"name":"Shl","qualname":"::op::BinOp::Shl","value":"BinOp::Shl(crate::token::Shl)","parent":{"krate":0,"index":3841},"children":[],"decl_id":null,"docs":" The `<<` operator (shift left)\n","sig":null,"attributes":[{"value":"/ The `<<` operator (shift left)","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\op.rs","byte_start":469352,"byte_end":469386,"line_start":28,"line_end":28,"column_start":9,"column_end":43}}]},{"kind":"Field","id":{"krate":0,"index":3874},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\op.rs","byte_start":469399,"byte_end":469409,"line_start":29,"line_end":29,"column_start":13,"column_end":23},"name":"0","qualname":"::op::BinOp::Shl::0","value":"token::Shl","parent":{"krate":0,"index":3872},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3875},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\op.rs","byte_start":469464,"byte_end":469467,"line_start":31,"line_end":31,"column_start":9,"column_end":12},"name":"Shr","qualname":"::op::BinOp::Shr","value":"BinOp::Shr(crate::token::Shr)","parent":{"krate":0,"index":3841},"children":[],"decl_id":null,"docs":" The `>>` operator (shift right)\n","sig":null,"attributes":[{"value":"/ The `>>` operator (shift right)","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\op.rs","byte_start":469420,"byte_end":469455,"line_start":30,"line_end":30,"column_start":9,"column_end":44}}]},{"kind":"Field","id":{"krate":0,"index":3877},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\op.rs","byte_start":469468,"byte_end":469478,"line_start":31,"line_end":31,"column_start":13,"column_end":23},"name":"0","qualname":"::op::BinOp::Shr::0","value":"token::Shr","parent":{"krate":0,"index":3875},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3878},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\op.rs","byte_start":469530,"byte_end":469532,"line_start":33,"line_end":33,"column_start":9,"column_end":11},"name":"Eq","qualname":"::op::BinOp::Eq","value":"BinOp::Eq(crate::token::EqEq)","parent":{"krate":0,"index":3841},"children":[],"decl_id":null,"docs":" The `==` operator (equality)\n","sig":null,"attributes":[{"value":"/ The `==` operator (equality)","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\op.rs","byte_start":469489,"byte_end":469521,"line_start":32,"line_end":32,"column_start":9,"column_end":41}}]},{"kind":"Field","id":{"krate":0,"index":3880},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\op.rs","byte_start":469533,"byte_end":469543,"line_start":33,"line_end":33,"column_start":12,"column_end":22},"name":"0","qualname":"::op::BinOp::Eq::0","value":"token::EqEq","parent":{"krate":0,"index":3878},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3881},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\op.rs","byte_start":469595,"byte_end":469597,"line_start":35,"line_end":35,"column_start":9,"column_end":11},"name":"Lt","qualname":"::op::BinOp::Lt","value":"BinOp::Lt(crate::token::Lt)","parent":{"krate":0,"index":3841},"children":[],"decl_id":null,"docs":" The `<` operator (less than)\n","sig":null,"attributes":[{"value":"/ The `<` operator (less than)","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\op.rs","byte_start":469554,"byte_end":469586,"line_start":34,"line_end":34,"column_start":9,"column_end":41}}]},{"kind":"Field","id":{"krate":0,"index":3883},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\op.rs","byte_start":469598,"byte_end":469607,"line_start":35,"line_end":35,"column_start":12,"column_end":21},"name":"0","qualname":"::op::BinOp::Lt::0","value":"token::Lt","parent":{"krate":0,"index":3881},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3884},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\op.rs","byte_start":469672,"byte_end":469674,"line_start":37,"line_end":37,"column_start":9,"column_end":11},"name":"Le","qualname":"::op::BinOp::Le","value":"BinOp::Le(crate::token::Le)","parent":{"krate":0,"index":3841},"children":[],"decl_id":null,"docs":" The `<=` operator (less than or equal to)\n","sig":null,"attributes":[{"value":"/ The `<=` operator (less than or equal to)","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\op.rs","byte_start":469618,"byte_end":469663,"line_start":36,"line_end":36,"column_start":9,"column_end":54}}]},{"kind":"Field","id":{"krate":0,"index":3886},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\op.rs","byte_start":469675,"byte_end":469685,"line_start":37,"line_end":37,"column_start":12,"column_end":22},"name":"0","qualname":"::op::BinOp::Le::0","value":"token::Le","parent":{"krate":0,"index":3884},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3887},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\op.rs","byte_start":469741,"byte_end":469743,"line_start":39,"line_end":39,"column_start":9,"column_end":11},"name":"Ne","qualname":"::op::BinOp::Ne","value":"BinOp::Ne(crate::token::Ne)","parent":{"krate":0,"index":3841},"children":[],"decl_id":null,"docs":" The `!=` operator (not equal to)\n","sig":null,"attributes":[{"value":"/ The `!=` operator (not equal to)","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\op.rs","byte_start":469696,"byte_end":469732,"line_start":38,"line_end":38,"column_start":9,"column_end":45}}]},{"kind":"Field","id":{"krate":0,"index":3889},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\op.rs","byte_start":469744,"byte_end":469754,"line_start":39,"line_end":39,"column_start":12,"column_end":22},"name":"0","qualname":"::op::BinOp::Ne::0","value":"token::Ne","parent":{"krate":0,"index":3887},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3890},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\op.rs","byte_start":469822,"byte_end":469824,"line_start":41,"line_end":41,"column_start":9,"column_end":11},"name":"Ge","qualname":"::op::BinOp::Ge","value":"BinOp::Ge(crate::token::Ge)","parent":{"krate":0,"index":3841},"children":[],"decl_id":null,"docs":" The `>=` operator (greater than or equal to)\n","sig":null,"attributes":[{"value":"/ The `>=` operator (greater than or equal to)","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\op.rs","byte_start":469765,"byte_end":469813,"line_start":40,"line_end":40,"column_start":9,"column_end":57}}]},{"kind":"Field","id":{"krate":0,"index":3892},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\op.rs","byte_start":469825,"byte_end":469835,"line_start":41,"line_end":41,"column_start":12,"column_end":22},"name":"0","qualname":"::op::BinOp::Ge::0","value":"token::Ge","parent":{"krate":0,"index":3890},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3893},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\op.rs","byte_start":469890,"byte_end":469892,"line_start":43,"line_end":43,"column_start":9,"column_end":11},"name":"Gt","qualname":"::op::BinOp::Gt","value":"BinOp::Gt(crate::token::Gt)","parent":{"krate":0,"index":3841},"children":[],"decl_id":null,"docs":" The `>` operator (greater than)\n","sig":null,"attributes":[{"value":"/ The `>` operator (greater than)","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\op.rs","byte_start":469846,"byte_end":469881,"line_start":42,"line_end":42,"column_start":9,"column_end":44}}]},{"kind":"Field","id":{"krate":0,"index":3895},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\op.rs","byte_start":469893,"byte_end":469902,"line_start":43,"line_end":43,"column_start":12,"column_end":21},"name":"0","qualname":"::op::BinOp::Gt::0","value":"token::Gt","parent":{"krate":0,"index":3893},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3896},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\op.rs","byte_start":469943,"byte_end":469948,"line_start":45,"line_end":45,"column_start":9,"column_end":14},"name":"AddEq","qualname":"::op::BinOp::AddEq","value":"BinOp::AddEq(crate::token::AddEq)","parent":{"krate":0,"index":3841},"children":[],"decl_id":null,"docs":" The `+=` operator\n","sig":null,"attributes":[{"value":"/ The `+=` operator","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\op.rs","byte_start":469913,"byte_end":469934,"line_start":44,"line_end":44,"column_start":9,"column_end":30}}]},{"kind":"Field","id":{"krate":0,"index":3898},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\op.rs","byte_start":469949,"byte_end":469959,"line_start":45,"line_end":45,"column_start":15,"column_end":25},"name":"0","qualname":"::op::BinOp::AddEq::0","value":"token::AddEq","parent":{"krate":0,"index":3896},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3899},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\op.rs","byte_start":470000,"byte_end":470005,"line_start":47,"line_end":47,"column_start":9,"column_end":14},"name":"SubEq","qualname":"::op::BinOp::SubEq","value":"BinOp::SubEq(crate::token::SubEq)","parent":{"krate":0,"index":3841},"children":[],"decl_id":null,"docs":" The `-=` operator\n","sig":null,"attributes":[{"value":"/ The `-=` operator","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\op.rs","byte_start":469970,"byte_end":469991,"line_start":46,"line_end":46,"column_start":9,"column_end":30}}]},{"kind":"Field","id":{"krate":0,"index":3901},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\op.rs","byte_start":470006,"byte_end":470016,"line_start":47,"line_end":47,"column_start":15,"column_end":25},"name":"0","qualname":"::op::BinOp::SubEq::0","value":"token::SubEq","parent":{"krate":0,"index":3899},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3902},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\op.rs","byte_start":470057,"byte_end":470062,"line_start":49,"line_end":49,"column_start":9,"column_end":14},"name":"MulEq","qualname":"::op::BinOp::MulEq","value":"BinOp::MulEq(crate::token::MulEq)","parent":{"krate":0,"index":3841},"children":[],"decl_id":null,"docs":" The `*=` operator\n","sig":null,"attributes":[{"value":"/ The `*=` operator","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\op.rs","byte_start":470027,"byte_end":470048,"line_start":48,"line_end":48,"column_start":9,"column_end":30}}]},{"kind":"Field","id":{"krate":0,"index":3904},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\op.rs","byte_start":470063,"byte_end":470073,"line_start":49,"line_end":49,"column_start":15,"column_end":25},"name":"0","qualname":"::op::BinOp::MulEq::0","value":"token::MulEq","parent":{"krate":0,"index":3902},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3905},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\op.rs","byte_start":470114,"byte_end":470119,"line_start":51,"line_end":51,"column_start":9,"column_end":14},"name":"DivEq","qualname":"::op::BinOp::DivEq","value":"BinOp::DivEq(crate::token::DivEq)","parent":{"krate":0,"index":3841},"children":[],"decl_id":null,"docs":" The `/=` operator\n","sig":null,"attributes":[{"value":"/ The `/=` operator","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\op.rs","byte_start":470084,"byte_end":470105,"line_start":50,"line_end":50,"column_start":9,"column_end":30}}]},{"kind":"Field","id":{"krate":0,"index":3907},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\op.rs","byte_start":470120,"byte_end":470130,"line_start":51,"line_end":51,"column_start":15,"column_end":25},"name":"0","qualname":"::op::BinOp::DivEq::0","value":"token::DivEq","parent":{"krate":0,"index":3905},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3908},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\op.rs","byte_start":470171,"byte_end":470176,"line_start":53,"line_end":53,"column_start":9,"column_end":14},"name":"RemEq","qualname":"::op::BinOp::RemEq","value":"BinOp::RemEq(crate::token::RemEq)","parent":{"krate":0,"index":3841},"children":[],"decl_id":null,"docs":" The `%=` operator\n","sig":null,"attributes":[{"value":"/ The `%=` operator","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\op.rs","byte_start":470141,"byte_end":470162,"line_start":52,"line_end":52,"column_start":9,"column_end":30}}]},{"kind":"Field","id":{"krate":0,"index":3910},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\op.rs","byte_start":470177,"byte_end":470187,"line_start":53,"line_end":53,"column_start":15,"column_end":25},"name":"0","qualname":"::op::BinOp::RemEq::0","value":"token::RemEq","parent":{"krate":0,"index":3908},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3911},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\op.rs","byte_start":470228,"byte_end":470236,"line_start":55,"line_end":55,"column_start":9,"column_end":17},"name":"BitXorEq","qualname":"::op::BinOp::BitXorEq","value":"BinOp::BitXorEq(crate::token::CaretEq)","parent":{"krate":0,"index":3841},"children":[],"decl_id":null,"docs":" The `^=` operator\n","sig":null,"attributes":[{"value":"/ The `^=` operator","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\op.rs","byte_start":470198,"byte_end":470219,"line_start":54,"line_end":54,"column_start":9,"column_end":30}}]},{"kind":"Field","id":{"krate":0,"index":3913},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\op.rs","byte_start":470237,"byte_end":470247,"line_start":55,"line_end":55,"column_start":18,"column_end":28},"name":"0","qualname":"::op::BinOp::BitXorEq::0","value":"token::CaretEq","parent":{"krate":0,"index":3911},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3914},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\op.rs","byte_start":470288,"byte_end":470296,"line_start":57,"line_end":57,"column_start":9,"column_end":17},"name":"BitAndEq","qualname":"::op::BinOp::BitAndEq","value":"BinOp::BitAndEq(crate::token::AndEq)","parent":{"krate":0,"index":3841},"children":[],"decl_id":null,"docs":" The `&=` operator\n","sig":null,"attributes":[{"value":"/ The `&=` operator","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\op.rs","byte_start":470258,"byte_end":470279,"line_start":56,"line_end":56,"column_start":9,"column_end":30}}]},{"kind":"Field","id":{"krate":0,"index":3916},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\op.rs","byte_start":470297,"byte_end":470307,"line_start":57,"line_end":57,"column_start":18,"column_end":28},"name":"0","qualname":"::op::BinOp::BitAndEq::0","value":"token::AndEq","parent":{"krate":0,"index":3914},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3917},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\op.rs","byte_start":470348,"byte_end":470355,"line_start":59,"line_end":59,"column_start":9,"column_end":16},"name":"BitOrEq","qualname":"::op::BinOp::BitOrEq","value":"BinOp::BitOrEq(crate::token::OrEq)","parent":{"krate":0,"index":3841},"children":[],"decl_id":null,"docs":" The `|=` operator\n","sig":null,"attributes":[{"value":"/ The `|=` operator","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\op.rs","byte_start":470318,"byte_end":470339,"line_start":58,"line_end":58,"column_start":9,"column_end":30}}]},{"kind":"Field","id":{"krate":0,"index":3919},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\op.rs","byte_start":470356,"byte_end":470366,"line_start":59,"line_end":59,"column_start":17,"column_end":27},"name":"0","qualname":"::op::BinOp::BitOrEq::0","value":"token::OrEq","parent":{"krate":0,"index":3917},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3920},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\op.rs","byte_start":470408,"byte_end":470413,"line_start":61,"line_end":61,"column_start":9,"column_end":14},"name":"ShlEq","qualname":"::op::BinOp::ShlEq","value":"BinOp::ShlEq(crate::token::ShlEq)","parent":{"krate":0,"index":3841},"children":[],"decl_id":null,"docs":" The `<<=` operator\n","sig":null,"attributes":[{"value":"/ The `<<=` operator","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\op.rs","byte_start":470377,"byte_end":470399,"line_start":60,"line_end":60,"column_start":9,"column_end":31}}]},{"kind":"Field","id":{"krate":0,"index":3922},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\op.rs","byte_start":470414,"byte_end":470425,"line_start":61,"line_end":61,"column_start":15,"column_end":26},"name":"0","qualname":"::op::BinOp::ShlEq::0","value":"token::ShlEq","parent":{"krate":0,"index":3920},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3923},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\op.rs","byte_start":470467,"byte_end":470472,"line_start":63,"line_end":63,"column_start":9,"column_end":14},"name":"ShrEq","qualname":"::op::BinOp::ShrEq","value":"BinOp::ShrEq(crate::token::ShrEq)","parent":{"krate":0,"index":3841},"children":[],"decl_id":null,"docs":" The `>>=` operator\n","sig":null,"attributes":[{"value":"/ The `>>=` operator","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\op.rs","byte_start":470436,"byte_end":470458,"line_start":62,"line_end":62,"column_start":9,"column_end":31}}]},{"kind":"Field","id":{"krate":0,"index":3925},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\op.rs","byte_start":470473,"byte_end":470484,"line_start":63,"line_end":63,"column_start":15,"column_end":26},"name":"0","qualname":"::op::BinOp::ShrEq::0","value":"token::ShrEq","parent":{"krate":0,"index":3923},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":3841},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\op.rs","byte_start":468664,"byte_end":468669,"line_start":7,"line_end":7,"column_start":14,"column_end":19},"name":"BinOp","qualname":"::op::BinOp","value":"enum BinOp {\n    Add(crate::token::Add),\n    Sub(crate::token::Sub),\n    Mul(crate::token::Star),\n    Div(crate::token::Div),\n    Rem(crate::token::Rem),\n    And(crate::token::AndAnd),\n    Or(crate::token::OrOr),\n    BitXor(crate::token::Caret),\n    BitAnd(crate::token::And),\n    BitOr(crate::token::Or),\n    Shl(crate::token::Shl),\n    Shr(crate::token::Shr),\n    Eq(crate::token::EqEq),\n    Lt(crate::token::Lt),\n    Le(crate::token::Le),\n    Ne(crate::token::Ne),\n    Ge(crate::token::Ge),\n    Gt(crate::token::Gt),\n    AddEq(crate::token::AddEq),\n    SubEq(crate::token::SubEq),\n    MulEq(crate::token::MulEq),\n    DivEq(crate::token::DivEq),\n    RemEq(crate::token::RemEq),\n    BitXorEq(crate::token::CaretEq),\n    BitAndEq(crate::token::AndEq),\n    BitOrEq(crate::token::OrEq),\n    ShlEq(crate::token::ShlEq),\n    ShrEq(crate::token::ShrEq),\n}","parent":null,"children":[{"krate":0,"index":3842},{"krate":0,"index":3845},{"krate":0,"index":3848},{"krate":0,"index":3851},{"krate":0,"index":3854},{"krate":0,"index":3857},{"krate":0,"index":3860},{"krate":0,"index":3863},{"krate":0,"index":3866},{"krate":0,"index":3869},{"krate":0,"index":3872},{"krate":0,"index":3875},{"krate":0,"index":3878},{"krate":0,"index":3881},{"krate":0,"index":3884},{"krate":0,"index":3887},{"krate":0,"index":3890},{"krate":0,"index":3893},{"krate":0,"index":3896},{"krate":0,"index":3899},{"krate":0,"index":3902},{"krate":0,"index":3905},{"krate":0,"index":3908},{"krate":0,"index":3911},{"krate":0,"index":3914},{"krate":0,"index":3917},{"krate":0,"index":3920},{"krate":0,"index":3923}],"decl_id":null,"docs":" A binary operator: `+`, `+=`, `&`.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3927},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\op.rs","byte_start":470813,"byte_end":470818,"line_start":75,"line_end":75,"column_start":9,"column_end":14},"name":"Deref","qualname":"::op::UnOp::Deref","value":"UnOp::Deref(crate::token::Star)","parent":{"krate":0,"index":3926},"children":[],"decl_id":null,"docs":" The `*` operator for dereferencing\n","sig":null,"attributes":[{"value":"/ The `*` operator for dereferencing","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\op.rs","byte_start":470766,"byte_end":470804,"line_start":74,"line_end":74,"column_start":9,"column_end":47}}]},{"kind":"Field","id":{"krate":0,"index":3929},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\op.rs","byte_start":470819,"byte_end":470828,"line_start":75,"line_end":75,"column_start":15,"column_end":24},"name":"0","qualname":"::op::UnOp::Deref::0","value":"token::Star","parent":{"krate":0,"index":3927},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3930},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\op.rs","byte_start":470890,"byte_end":470893,"line_start":77,"line_end":77,"column_start":9,"column_end":12},"name":"Not","qualname":"::op::UnOp::Not","value":"UnOp::Not(crate::token::Bang)","parent":{"krate":0,"index":3926},"children":[],"decl_id":null,"docs":" The `!` operator for logical inversion\n","sig":null,"attributes":[{"value":"/ The `!` operator for logical inversion","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\op.rs","byte_start":470839,"byte_end":470881,"line_start":76,"line_end":76,"column_start":9,"column_end":51}}]},{"kind":"Field","id":{"krate":0,"index":3932},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\op.rs","byte_start":470894,"byte_end":470903,"line_start":77,"line_end":77,"column_start":13,"column_end":22},"name":"0","qualname":"::op::UnOp::Not::0","value":"token::Bang","parent":{"krate":0,"index":3930},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3933},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\op.rs","byte_start":470956,"byte_end":470959,"line_start":79,"line_end":79,"column_start":9,"column_end":12},"name":"Neg","qualname":"::op::UnOp::Neg","value":"UnOp::Neg(crate::token::Sub)","parent":{"krate":0,"index":3926},"children":[],"decl_id":null,"docs":" The `-` operator for negation\n","sig":null,"attributes":[{"value":"/ The `-` operator for negation","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\op.rs","byte_start":470914,"byte_end":470947,"line_start":78,"line_end":78,"column_start":9,"column_end":42}}]},{"kind":"Field","id":{"krate":0,"index":3935},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\op.rs","byte_start":470960,"byte_end":470969,"line_start":79,"line_end":79,"column_start":13,"column_end":22},"name":"0","qualname":"::op::UnOp::Neg::0","value":"token::Sub","parent":{"krate":0,"index":3933},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":3926},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\op.rs","byte_start":470751,"byte_end":470755,"line_start":73,"line_end":73,"column_start":14,"column_end":18},"name":"UnOp","qualname":"::op::UnOp","value":"enum UnOp {\n    Deref(crate::token::Star),\n    Not(crate::token::Bang),\n    Neg(crate::token::Sub),\n}","parent":null,"children":[{"krate":0,"index":3927},{"krate":0,"index":3930},{"krate":0,"index":3933}],"decl_id":null,"docs":" A unary operator: `*`, `!`, `-`.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3936},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\stmt.rs","byte_start":477125,"byte_end":477130,"line_start":8,"line_end":8,"column_start":16,"column_end":21},"name":"Block","qualname":"::stmt::Block","value":"Block { brace_token, stmts }","parent":null,"children":[{"krate":0,"index":3937},{"krate":0,"index":3938}],"decl_id":null,"docs":" A braced block containing Rust statements.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3937},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\stmt.rs","byte_start":477145,"byte_end":477156,"line_start":9,"line_end":9,"column_start":13,"column_end":24},"name":"brace_token","qualname":"::stmt::Block::brace_token","value":"token::Brace","parent":{"krate":0,"index":3936},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3938},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\stmt.rs","byte_start":477218,"byte_end":477223,"line_start":11,"line_end":11,"column_start":13,"column_end":18},"name":"stmts","qualname":"::stmt::Block::stmts","value":"std::vec::Vec<stmt::Stmt>","parent":{"krate":0,"index":3936},"children":[],"decl_id":null,"docs":" Statements in a block\n","sig":null,"attributes":[{"value":"/ Statements in a block","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\stmt.rs","byte_start":477180,"byte_end":477205,"line_start":10,"line_end":10,"column_start":9,"column_end":34}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3940},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\stmt.rs","byte_start":477514,"byte_end":477519,"line_start":22,"line_end":22,"column_start":9,"column_end":14},"name":"Local","qualname":"::stmt::Stmt::Local","value":"Stmt::Local(Local)","parent":{"krate":0,"index":3939},"children":[],"decl_id":null,"docs":" A local (let) binding.\n","sig":null,"attributes":[{"value":"/ A local (let) binding.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\stmt.rs","byte_start":477479,"byte_end":477505,"line_start":21,"line_end":21,"column_start":9,"column_end":35}}]},{"kind":"Field","id":{"krate":0,"index":3942},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\stmt.rs","byte_start":477520,"byte_end":477525,"line_start":22,"line_end":22,"column_start":15,"column_end":20},"name":"0","qualname":"::stmt::Stmt::Local::0","value":"stmt::Local","parent":{"krate":0,"index":3940},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3943},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\stmt.rs","byte_start":477569,"byte_end":477573,"line_start":25,"line_end":25,"column_start":9,"column_end":13},"name":"Item","qualname":"::stmt::Stmt::Item","value":"Stmt::Item(Item)","parent":{"krate":0,"index":3939},"children":[],"decl_id":null,"docs":" An item definition.\n","sig":null,"attributes":[{"value":"/ An item definition.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\stmt.rs","byte_start":477537,"byte_end":477560,"line_start":24,"line_end":24,"column_start":9,"column_end":32}}]},{"kind":"Field","id":{"krate":0,"index":3945},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\stmt.rs","byte_start":477574,"byte_end":477578,"line_start":25,"line_end":25,"column_start":14,"column_end":18},"name":"0","qualname":"::stmt::Stmt::Item::0","value":"item::Item","parent":{"krate":0,"index":3943},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3946},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\stmt.rs","byte_start":477635,"byte_end":477639,"line_start":28,"line_end":28,"column_start":9,"column_end":13},"name":"Expr","qualname":"::stmt::Stmt::Expr","value":"Stmt::Expr(Expr)","parent":{"krate":0,"index":3939},"children":[],"decl_id":null,"docs":" Expr without trailing semicolon.\n","sig":null,"attributes":[{"value":"/ Expr without trailing semicolon.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\stmt.rs","byte_start":477590,"byte_end":477626,"line_start":27,"line_end":27,"column_start":9,"column_end":45}}]},{"kind":"Field","id":{"krate":0,"index":3948},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\stmt.rs","byte_start":477640,"byte_end":477644,"line_start":28,"line_end":28,"column_start":14,"column_end":18},"name":"0","qualname":"::stmt::Stmt::Expr::0","value":"expr::Expr","parent":{"krate":0,"index":3946},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3949},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\stmt.rs","byte_start":477704,"byte_end":477708,"line_start":31,"line_end":31,"column_start":9,"column_end":13},"name":"Semi","qualname":"::stmt::Stmt::Semi","value":"Stmt::Semi(Expr, crate::token::Semi)","parent":{"krate":0,"index":3939},"children":[],"decl_id":null,"docs":" Expression with trailing semicolon.\n","sig":null,"attributes":[{"value":"/ Expression with trailing semicolon.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\stmt.rs","byte_start":477656,"byte_end":477695,"line_start":30,"line_end":30,"column_start":9,"column_end":48}}]},{"kind":"Field","id":{"krate":0,"index":3951},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\stmt.rs","byte_start":477709,"byte_end":477713,"line_start":31,"line_end":31,"column_start":14,"column_end":18},"name":"0","qualname":"::stmt::Stmt::Semi::0","value":"expr::Expr","parent":{"krate":0,"index":3949},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3952},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\stmt.rs","byte_start":477715,"byte_end":477724,"line_start":31,"line_end":31,"column_start":20,"column_end":29},"name":"1","qualname":"::stmt::Stmt::Semi::1","value":"token::Semi","parent":{"krate":0,"index":3949},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":3939},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\stmt.rs","byte_start":477464,"byte_end":477468,"line_start":20,"line_end":20,"column_start":14,"column_end":18},"name":"Stmt","qualname":"::stmt::Stmt","value":"enum Stmt {\n    Local(Local),\n    Item(Item),\n    Expr(Expr),\n    Semi(Expr, crate::token::Semi),\n}","parent":null,"children":[{"krate":0,"index":3940},{"krate":0,"index":3943},{"krate":0,"index":3946},{"krate":0,"index":3949}],"decl_id":null,"docs":" A statement, usually ending in a semicolon.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3953},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\stmt.rs","byte_start":477965,"byte_end":477970,"line_start":40,"line_end":40,"column_start":16,"column_end":21},"name":"Local","qualname":"::stmt::Local","value":"Local { attrs, let_token, pat, init, semi_token }","parent":null,"children":[{"krate":0,"index":3954},{"krate":0,"index":3955},{"krate":0,"index":3956},{"krate":0,"index":3957},{"krate":0,"index":3958}],"decl_id":null,"docs":" A local `let` binding: `let x: u64 = s.parse()?`.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3954},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\stmt.rs","byte_start":477985,"byte_end":477990,"line_start":41,"line_end":41,"column_start":13,"column_end":18},"name":"attrs","qualname":"::stmt::Local::attrs","value":"std::vec::Vec<attr::Attribute>","parent":{"krate":0,"index":3953},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3955},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\stmt.rs","byte_start":478020,"byte_end":478029,"line_start":42,"line_end":42,"column_start":13,"column_end":22},"name":"let_token","qualname":"::stmt::Local::let_token","value":"token::Let","parent":{"krate":0,"index":3953},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3956},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\stmt.rs","byte_start":478056,"byte_end":478059,"line_start":43,"line_end":43,"column_start":13,"column_end":16},"name":"pat","qualname":"::stmt::Local::pat","value":"pat::Pat","parent":{"krate":0,"index":3953},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3957},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\stmt.rs","byte_start":478078,"byte_end":478082,"line_start":44,"line_end":44,"column_start":13,"column_end":17},"name":"init","qualname":"::stmt::Local::init","value":"std::option::Option<(token::Eq, std::boxed::Box<expr::Expr>)>","parent":{"krate":0,"index":3953},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3958},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\stmt.rs","byte_start":478128,"byte_end":478138,"line_start":45,"line_end":45,"column_start":13,"column_end":23},"name":"semi_token","qualname":"::stmt::Local::semi_token","value":"token::Semi","parent":{"krate":0,"index":3953},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3960},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\ty.rs","byte_start":489080,"byte_end":489085,"line_start":20,"line_end":20,"column_start":9,"column_end":14},"name":"Array","qualname":"::ty::Type::Array","value":"Type::Array(TypeArray)","parent":{"krate":0,"index":3959},"children":[],"decl_id":null,"docs":" A fixed size array type: `[T; n]`.\n","sig":null,"attributes":[{"value":"/ A fixed size array type: `[T; n]`.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\ty.rs","byte_start":489033,"byte_end":489071,"line_start":19,"line_end":19,"column_start":9,"column_end":47}}]},{"kind":"Field","id":{"krate":0,"index":3962},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\ty.rs","byte_start":489086,"byte_end":489095,"line_start":20,"line_end":20,"column_start":15,"column_end":24},"name":"0","qualname":"::ty::Type::Array::0","value":"ty::TypeArray","parent":{"krate":0,"index":3960},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3963},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\ty.rs","byte_start":489162,"byte_end":489168,"line_start":23,"line_end":23,"column_start":9,"column_end":15},"name":"BareFn","qualname":"::ty::Type::BareFn","value":"Type::BareFn(TypeBareFn)","parent":{"krate":0,"index":3959},"children":[],"decl_id":null,"docs":" A bare function type: `fn(usize) -> bool`.\n","sig":null,"attributes":[{"value":"/ A bare function type: `fn(usize) -> bool`.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\ty.rs","byte_start":489107,"byte_end":489153,"line_start":22,"line_end":22,"column_start":9,"column_end":55}}]},{"kind":"Field","id":{"krate":0,"index":3965},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\ty.rs","byte_start":489169,"byte_end":489179,"line_start":23,"line_end":23,"column_start":16,"column_end":26},"name":"0","qualname":"::ty::Type::BareFn::0","value":"ty::TypeBareFn","parent":{"krate":0,"index":3963},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3966},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\ty.rs","byte_start":489249,"byte_end":489254,"line_start":26,"line_end":26,"column_start":9,"column_end":14},"name":"Group","qualname":"::ty::Type::Group","value":"Type::Group(TypeGroup)","parent":{"krate":0,"index":3959},"children":[],"decl_id":null,"docs":" A type contained within invisible delimiters.\n","sig":null,"attributes":[{"value":"/ A type contained within invisible delimiters.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\ty.rs","byte_start":489191,"byte_end":489240,"line_start":25,"line_end":25,"column_start":9,"column_end":58}}]},{"kind":"Field","id":{"krate":0,"index":3968},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\ty.rs","byte_start":489255,"byte_end":489264,"line_start":26,"line_end":26,"column_start":15,"column_end":24},"name":"0","qualname":"::ty::Type::Group::0","value":"ty::TypeGroup","parent":{"krate":0,"index":3966},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3969},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\ty.rs","byte_start":489380,"byte_end":489389,"line_start":30,"line_end":30,"column_start":9,"column_end":18},"name":"ImplTrait","qualname":"::ty::Type::ImplTrait","value":"Type::ImplTrait(TypeImplTrait)","parent":{"krate":0,"index":3959},"children":[],"decl_id":null,"docs":" An `impl Bound1 + Bound2 + Bound3` type where `Bound` is a trait or\n a lifetime.\n","sig":null,"attributes":[{"value":"/ An `impl Bound1 + Bound2 + Bound3` type where `Bound` is a trait or","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\ty.rs","byte_start":489276,"byte_end":489347,"line_start":28,"line_end":28,"column_start":9,"column_end":80}},{"value":"/ a lifetime.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\ty.rs","byte_start":489356,"byte_end":489371,"line_start":29,"line_end":29,"column_start":9,"column_end":24}}]},{"kind":"Field","id":{"krate":0,"index":3971},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\ty.rs","byte_start":489390,"byte_end":489403,"line_start":30,"line_end":30,"column_start":19,"column_end":32},"name":"0","qualname":"::ty::Type::ImplTrait::0","value":"ty::TypeImplTrait","parent":{"krate":0,"index":3969},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3972},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\ty.rs","byte_start":489491,"byte_end":489496,"line_start":33,"line_end":33,"column_start":9,"column_end":14},"name":"Infer","qualname":"::ty::Type::Infer","value":"Type::Infer(TypeInfer)","parent":{"krate":0,"index":3959},"children":[],"decl_id":null,"docs":" Indication that a type should be inferred by the compiler: `_`.\n","sig":null,"attributes":[{"value":"/ Indication that a type should be inferred by the compiler: `_`.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\ty.rs","byte_start":489415,"byte_end":489482,"line_start":32,"line_end":32,"column_start":9,"column_end":76}}]},{"kind":"Field","id":{"krate":0,"index":3974},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\ty.rs","byte_start":489497,"byte_end":489506,"line_start":33,"line_end":33,"column_start":15,"column_end":24},"name":"0","qualname":"::ty::Type::Infer::0","value":"ty::TypeInfer","parent":{"krate":0,"index":3972},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3975},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\ty.rs","byte_start":489560,"byte_end":489565,"line_start":36,"line_end":36,"column_start":9,"column_end":14},"name":"Macro","qualname":"::ty::Type::Macro","value":"Type::Macro(TypeMacro)","parent":{"krate":0,"index":3959},"children":[],"decl_id":null,"docs":" A macro in the type position.\n","sig":null,"attributes":[{"value":"/ A macro in the type position.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\ty.rs","byte_start":489518,"byte_end":489551,"line_start":35,"line_end":35,"column_start":9,"column_end":42}}]},{"kind":"Field","id":{"krate":0,"index":3977},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\ty.rs","byte_start":489566,"byte_end":489575,"line_start":36,"line_end":36,"column_start":15,"column_end":24},"name":"0","qualname":"::ty::Type::Macro::0","value":"ty::TypeMacro","parent":{"krate":0,"index":3975},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3978},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\ty.rs","byte_start":489620,"byte_end":489625,"line_start":39,"line_end":39,"column_start":9,"column_end":14},"name":"Never","qualname":"::ty::Type::Never","value":"Type::Never(TypeNever)","parent":{"krate":0,"index":3959},"children":[],"decl_id":null,"docs":" The never type: `!`.\n","sig":null,"attributes":[{"value":"/ The never type: `!`.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\ty.rs","byte_start":489587,"byte_end":489611,"line_start":38,"line_end":38,"column_start":9,"column_end":33}}]},{"kind":"Field","id":{"krate":0,"index":3980},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\ty.rs","byte_start":489626,"byte_end":489635,"line_start":39,"line_end":39,"column_start":15,"column_end":24},"name":"0","qualname":"::ty::Type::Never::0","value":"ty::TypeNever","parent":{"krate":0,"index":3978},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3981},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\ty.rs","byte_start":489710,"byte_end":489715,"line_start":42,"line_end":42,"column_start":9,"column_end":14},"name":"Paren","qualname":"::ty::Type::Paren","value":"Type::Paren(TypeParen)","parent":{"krate":0,"index":3959},"children":[],"decl_id":null,"docs":" A parenthesized type equivalent to the inner type.\n","sig":null,"attributes":[{"value":"/ A parenthesized type equivalent to the inner type.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\ty.rs","byte_start":489647,"byte_end":489701,"line_start":41,"line_end":41,"column_start":9,"column_end":63}}]},{"kind":"Field","id":{"krate":0,"index":3983},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\ty.rs","byte_start":489716,"byte_end":489725,"line_start":42,"line_end":42,"column_start":15,"column_end":24},"name":"0","qualname":"::ty::Type::Paren::0","value":"ty::TypeParen","parent":{"krate":0,"index":3981},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3984},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\ty.rs","byte_start":489874,"byte_end":489878,"line_start":46,"line_end":46,"column_start":9,"column_end":13},"name":"Path","qualname":"::ty::Type::Path","value":"Type::Path(TypePath)","parent":{"krate":0,"index":3959},"children":[],"decl_id":null,"docs":" A path like `std::slice::Iter`, optionally qualified with a\n self-type as in `<Vec<T> as SomeTrait>::Associated`.\n","sig":null,"attributes":[{"value":"/ A path like `std::slice::Iter`, optionally qualified with a","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\ty.rs","byte_start":489737,"byte_end":489800,"line_start":44,"line_end":44,"column_start":9,"column_end":72}},{"value":"/ self-type as in `<Vec<T> as SomeTrait>::Associated`.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\ty.rs","byte_start":489809,"byte_end":489865,"line_start":45,"line_end":45,"column_start":9,"column_end":65}}]},{"kind":"Field","id":{"krate":0,"index":3986},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\ty.rs","byte_start":489879,"byte_end":489887,"line_start":46,"line_end":46,"column_start":14,"column_end":22},"name":"0","qualname":"::ty::Type::Path::0","value":"ty::TypePath","parent":{"krate":0,"index":3984},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3987},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\ty.rs","byte_start":489955,"byte_end":489958,"line_start":49,"line_end":49,"column_start":9,"column_end":12},"name":"Ptr","qualname":"::ty::Type::Ptr","value":"Type::Ptr(TypePtr)","parent":{"krate":0,"index":3959},"children":[],"decl_id":null,"docs":" A raw pointer type: `*const T` or `*mut T`.\n","sig":null,"attributes":[{"value":"/ A raw pointer type: `*const T` or `*mut T`.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\ty.rs","byte_start":489899,"byte_end":489946,"line_start":48,"line_end":48,"column_start":9,"column_end":56}}]},{"kind":"Field","id":{"krate":0,"index":3989},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\ty.rs","byte_start":489959,"byte_end":489966,"line_start":49,"line_end":49,"column_start":13,"column_end":20},"name":"0","qualname":"::ty::Type::Ptr::0","value":"ty::TypePtr","parent":{"krate":0,"index":3987},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3990},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\ty.rs","byte_start":490032,"byte_end":490041,"line_start":52,"line_end":52,"column_start":9,"column_end":18},"name":"Reference","qualname":"::ty::Type::Reference","value":"Type::Reference(TypeReference)","parent":{"krate":0,"index":3959},"children":[],"decl_id":null,"docs":" A reference type: `&'a T` or `&'a mut T`.\n","sig":null,"attributes":[{"value":"/ A reference type: `&'a T` or `&'a mut T`.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\ty.rs","byte_start":489978,"byte_end":490023,"line_start":51,"line_end":51,"column_start":9,"column_end":54}}]},{"kind":"Field","id":{"krate":0,"index":3992},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\ty.rs","byte_start":490042,"byte_end":490055,"line_start":52,"line_end":52,"column_start":19,"column_end":32},"name":"0","qualname":"::ty::Type::Reference::0","value":"ty::TypeReference","parent":{"krate":0,"index":3990},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3993},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\ty.rs","byte_start":490118,"byte_end":490123,"line_start":55,"line_end":55,"column_start":9,"column_end":14},"name":"Slice","qualname":"::ty::Type::Slice","value":"Type::Slice(TypeSlice)","parent":{"krate":0,"index":3959},"children":[],"decl_id":null,"docs":" A dynamically sized slice type: `[T]`.\n","sig":null,"attributes":[{"value":"/ A dynamically sized slice type: `[T]`.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\ty.rs","byte_start":490067,"byte_end":490109,"line_start":54,"line_end":54,"column_start":9,"column_end":51}}]},{"kind":"Field","id":{"krate":0,"index":3995},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\ty.rs","byte_start":490124,"byte_end":490133,"line_start":55,"line_end":55,"column_start":15,"column_end":24},"name":"0","qualname":"::ty::Type::Slice::0","value":"ty::TypeSlice","parent":{"krate":0,"index":3993},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3996},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\ty.rs","byte_start":490260,"byte_end":490271,"line_start":59,"line_end":59,"column_start":9,"column_end":20},"name":"TraitObject","qualname":"::ty::Type::TraitObject","value":"Type::TraitObject(TypeTraitObject)","parent":{"krate":0,"index":3959},"children":[],"decl_id":null,"docs":" A trait object type `dyn Bound1 + Bound2 + Bound3` where `Bound` is a\n trait or a lifetime.\n","sig":null,"attributes":[{"value":"/ A trait object type `dyn Bound1 + Bound2 + Bound3` where `Bound` is a","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\ty.rs","byte_start":490145,"byte_end":490218,"line_start":57,"line_end":57,"column_start":9,"column_end":82}},{"value":"/ trait or a lifetime.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\ty.rs","byte_start":490227,"byte_end":490251,"line_start":58,"line_end":58,"column_start":9,"column_end":33}}]},{"kind":"Field","id":{"krate":0,"index":3998},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\ty.rs","byte_start":490272,"byte_end":490287,"line_start":59,"line_end":59,"column_start":21,"column_end":36},"name":"0","qualname":"::ty::Type::TraitObject::0","value":"ty::TypeTraitObject","parent":{"krate":0,"index":3996},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3999},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\ty.rs","byte_start":490346,"byte_end":490351,"line_start":62,"line_end":62,"column_start":9,"column_end":14},"name":"Tuple","qualname":"::ty::Type::Tuple","value":"Type::Tuple(TypeTuple)","parent":{"krate":0,"index":3959},"children":[],"decl_id":null,"docs":" A tuple type: `(A, B, C, String)`.\n","sig":null,"attributes":[{"value":"/ A tuple type: `(A, B, C, String)`.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\ty.rs","byte_start":490299,"byte_end":490337,"line_start":61,"line_end":61,"column_start":9,"column_end":47}}]},{"kind":"Field","id":{"krate":0,"index":4001},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\ty.rs","byte_start":490352,"byte_end":490361,"line_start":62,"line_end":62,"column_start":15,"column_end":24},"name":"0","qualname":"::ty::Type::Tuple::0","value":"ty::TypeTuple","parent":{"krate":0,"index":3999},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4002},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\ty.rs","byte_start":490433,"byte_end":490441,"line_start":65,"line_end":65,"column_start":9,"column_end":17},"name":"Verbatim","qualname":"::ty::Type::Verbatim","value":"Type::Verbatim(TokenStream)","parent":{"krate":0,"index":3959},"children":[],"decl_id":null,"docs":" Tokens in type position not interpreted by Syn.\n","sig":null,"attributes":[{"value":"/ Tokens in type position not interpreted by Syn.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\ty.rs","byte_start":490373,"byte_end":490424,"line_start":64,"line_end":64,"column_start":9,"column_end":60}}]},{"kind":"Field","id":{"krate":0,"index":4004},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\ty.rs","byte_start":490442,"byte_end":490453,"line_start":65,"line_end":65,"column_start":18,"column_end":29},"name":"0","qualname":"::ty::Type::Verbatim::0","value":"proc_macro2::TokenStream","parent":{"krate":0,"index":4002},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":3959},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\ty.rs","byte_start":489018,"byte_end":489022,"line_start":18,"line_end":18,"column_start":14,"column_end":18},"name":"Type","qualname":"::ty::Type","value":"enum Type {\n    Array(TypeArray),\n    BareFn(TypeBareFn),\n    Group(TypeGroup),\n    ImplTrait(TypeImplTrait),\n    Infer(TypeInfer),\n    Macro(TypeMacro),\n    Never(TypeNever),\n    Paren(TypeParen),\n    Path(TypePath),\n    Ptr(TypePtr),\n    Reference(TypeReference),\n    Slice(TypeSlice),\n    TraitObject(TypeTraitObject),\n    Tuple(TypeTuple),\n    Verbatim(TokenStream),\n}","parent":null,"children":[{"krate":0,"index":3960},{"krate":0,"index":3963},{"krate":0,"index":3966},{"krate":0,"index":3969},{"krate":0,"index":3972},{"krate":0,"index":3975},{"krate":0,"index":3978},{"krate":0,"index":3981},{"krate":0,"index":3984},{"krate":0,"index":3987},{"krate":0,"index":3990},{"krate":0,"index":3993},{"krate":0,"index":3996},{"krate":0,"index":3999},{"krate":0,"index":4002}],"decl_id":null,"docs":" The possible types that a Rust value could have.","sig":null,"attributes":[{"value":"non_exhaustive","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\ty.rs","byte_start":488988,"byte_end":489002,"line_start":17,"line_end":17,"column_start":44,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":4033},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\ty.rs","byte_start":491613,"byte_end":491622,"line_start":97,"line_end":97,"column_start":16,"column_end":25},"name":"TypeArray","qualname":"::ty::TypeArray","value":"TypeArray { bracket_token, elem, semi_token, len }","parent":null,"children":[{"krate":0,"index":4034},{"krate":0,"index":4035},{"krate":0,"index":4036},{"krate":0,"index":4037}],"decl_id":null,"docs":" A fixed size array type: `[T; n]`.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4034},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\ty.rs","byte_start":491637,"byte_end":491650,"line_start":98,"line_end":98,"column_start":13,"column_end":26},"name":"bracket_token","qualname":"::ty::TypeArray::bracket_token","value":"token::Bracket","parent":{"krate":0,"index":4033},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4035},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\ty.rs","byte_start":491680,"byte_end":491684,"line_start":99,"line_end":99,"column_start":13,"column_end":17},"name":"elem","qualname":"::ty::TypeArray::elem","value":"std::boxed::Box<ty::Type>","parent":{"krate":0,"index":4033},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4036},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\ty.rs","byte_start":491709,"byte_end":491719,"line_start":100,"line_end":100,"column_start":13,"column_end":23},"name":"semi_token","qualname":"::ty::TypeArray::semi_token","value":"token::Semi","parent":{"krate":0,"index":4033},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4037},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\ty.rs","byte_start":491744,"byte_end":491747,"line_start":101,"line_end":101,"column_start":13,"column_end":16},"name":"len","qualname":"::ty::TypeArray::len","value":"expr::Expr","parent":{"krate":0,"index":4033},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4038},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\ty.rs","byte_start":492033,"byte_end":492043,"line_start":111,"line_end":111,"column_start":16,"column_end":26},"name":"TypeBareFn","qualname":"::ty::TypeBareFn","value":"TypeBareFn { lifetimes, unsafety, abi, fn_token, paren_token, inputs, variadic, output }","parent":null,"children":[{"krate":0,"index":4039},{"krate":0,"index":4040},{"krate":0,"index":4041},{"krate":0,"index":4042},{"krate":0,"index":4043},{"krate":0,"index":4044},{"krate":0,"index":4045},{"krate":0,"index":4046}],"decl_id":null,"docs":" A bare function type: `fn(usize) -> bool`.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4039},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\ty.rs","byte_start":492058,"byte_end":492067,"line_start":112,"line_end":112,"column_start":13,"column_end":22},"name":"lifetimes","qualname":"::ty::TypeBareFn::lifetimes","value":"std::option::Option<generics::BoundLifetimes>","parent":{"krate":0,"index":4038},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4040},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\ty.rs","byte_start":492105,"byte_end":492113,"line_start":113,"line_end":113,"column_start":13,"column_end":21},"name":"unsafety","qualname":"::ty::TypeBareFn::unsafety","value":"std::option::Option<token::Unsafe>","parent":{"krate":0,"index":4038},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4041},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\ty.rs","byte_start":492151,"byte_end":492154,"line_start":114,"line_end":114,"column_start":13,"column_end":16},"name":"abi","qualname":"::ty::TypeBareFn::abi","value":"std::option::Option<ty::Abi>","parent":{"krate":0,"index":4038},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4042},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\ty.rs","byte_start":492181,"byte_end":492189,"line_start":115,"line_end":115,"column_start":13,"column_end":21},"name":"fn_token","qualname":"::ty::TypeBareFn::fn_token","value":"token::Fn","parent":{"krate":0,"index":4038},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4043},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\ty.rs","byte_start":492215,"byte_end":492226,"line_start":116,"line_end":116,"column_start":13,"column_end":24},"name":"paren_token","qualname":"::ty::TypeBareFn::paren_token","value":"token::Paren","parent":{"krate":0,"index":4038},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4044},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\ty.rs","byte_start":492254,"byte_end":492260,"line_start":117,"line_end":117,"column_start":13,"column_end":19},"name":"inputs","qualname":"::ty::TypeBareFn::inputs","value":"punctuated::Punctuated<ty::BareFnArg, token::Comma>","parent":{"krate":0,"index":4038},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4045},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\ty.rs","byte_start":492308,"byte_end":492316,"line_start":118,"line_end":118,"column_start":13,"column_end":21},"name":"variadic","qualname":"::ty::TypeBareFn::variadic","value":"std::option::Option<ty::Variadic>","parent":{"krate":0,"index":4038},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4046},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\ty.rs","byte_start":492348,"byte_end":492354,"line_start":119,"line_end":119,"column_start":13,"column_end":19},"name":"output","qualname":"::ty::TypeBareFn::output","value":"ty::ReturnType","parent":{"krate":0,"index":4038},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4047},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\ty.rs","byte_start":492649,"byte_end":492658,"line_start":129,"line_end":129,"column_start":16,"column_end":25},"name":"TypeGroup","qualname":"::ty::TypeGroup","value":"TypeGroup { group_token, elem }","parent":null,"children":[{"krate":0,"index":4048},{"krate":0,"index":4049}],"decl_id":null,"docs":" A type contained within invisible delimiters.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4048},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\ty.rs","byte_start":492673,"byte_end":492684,"line_start":130,"line_end":130,"column_start":13,"column_end":24},"name":"group_token","qualname":"::ty::TypeGroup::group_token","value":"token::Group","parent":{"krate":0,"index":4047},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4049},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\ty.rs","byte_start":492712,"byte_end":492716,"line_start":131,"line_end":131,"column_start":13,"column_end":17},"name":"elem","qualname":"::ty::TypeGroup::elem","value":"std::boxed::Box<ty::Type>","parent":{"krate":0,"index":4047},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4050},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\ty.rs","byte_start":493052,"byte_end":493065,"line_start":142,"line_end":142,"column_start":16,"column_end":29},"name":"TypeImplTrait","qualname":"::ty::TypeImplTrait","value":"TypeImplTrait { impl_token, bounds }","parent":null,"children":[{"krate":0,"index":4051},{"krate":0,"index":4052}],"decl_id":null,"docs":" An `impl Bound1 + Bound2 + Bound3` type where `Bound` is a trait or\n a lifetime.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4051},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\ty.rs","byte_start":493080,"byte_end":493090,"line_start":143,"line_end":143,"column_start":13,"column_end":23},"name":"impl_token","qualname":"::ty::TypeImplTrait::impl_token","value":"token::Impl","parent":{"krate":0,"index":4050},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4052},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\ty.rs","byte_start":493118,"byte_end":493124,"line_start":144,"line_end":144,"column_start":13,"column_end":19},"name":"bounds","qualname":"::ty::TypeImplTrait::bounds","value":"punctuated::Punctuated<generics::TypeParamBound, token::Add>","parent":{"krate":0,"index":4050},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4053},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\ty.rs","byte_start":493464,"byte_end":493473,"line_start":154,"line_end":154,"column_start":16,"column_end":25},"name":"TypeInfer","qualname":"::ty::TypeInfer","value":"TypeInfer { underscore_token }","parent":null,"children":[{"krate":0,"index":4054}],"decl_id":null,"docs":" Indication that a type should be inferred by the compiler: `_`.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4054},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\ty.rs","byte_start":493488,"byte_end":493504,"line_start":155,"line_end":155,"column_start":13,"column_end":29},"name":"underscore_token","qualname":"::ty::TypeInfer::underscore_token","value":"token::Underscore","parent":{"krate":0,"index":4053},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4055},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\ty.rs","byte_start":493782,"byte_end":493791,"line_start":165,"line_end":165,"column_start":16,"column_end":25},"name":"TypeMacro","qualname":"::ty::TypeMacro","value":"TypeMacro { mac }","parent":null,"children":[{"krate":0,"index":4056}],"decl_id":null,"docs":" A macro in the type position.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4056},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\ty.rs","byte_start":493806,"byte_end":493809,"line_start":166,"line_end":166,"column_start":13,"column_end":16},"name":"mac","qualname":"::ty::TypeMacro::mac","value":"mac::Macro","parent":{"krate":0,"index":4055},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4057},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\ty.rs","byte_start":494074,"byte_end":494083,"line_start":176,"line_end":176,"column_start":16,"column_end":25},"name":"TypeNever","qualname":"::ty::TypeNever","value":"TypeNever { bang_token }","parent":null,"children":[{"krate":0,"index":4058}],"decl_id":null,"docs":" The never type: `!`.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4058},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\ty.rs","byte_start":494098,"byte_end":494108,"line_start":177,"line_end":177,"column_start":13,"column_end":23},"name":"bang_token","qualname":"::ty::TypeNever::bang_token","value":"token::Bang","parent":{"krate":0,"index":4057},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4059},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\ty.rs","byte_start":494407,"byte_end":494416,"line_start":187,"line_end":187,"column_start":16,"column_end":25},"name":"TypeParen","qualname":"::ty::TypeParen","value":"TypeParen { paren_token, elem }","parent":null,"children":[{"krate":0,"index":4060},{"krate":0,"index":4061}],"decl_id":null,"docs":" A parenthesized type equivalent to the inner type.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4060},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\ty.rs","byte_start":494431,"byte_end":494442,"line_start":188,"line_end":188,"column_start":13,"column_end":24},"name":"paren_token","qualname":"::ty::TypeParen::paren_token","value":"token::Paren","parent":{"krate":0,"index":4059},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4061},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\ty.rs","byte_start":494470,"byte_end":494474,"line_start":189,"line_end":189,"column_start":13,"column_end":17},"name":"elem","qualname":"::ty::TypeParen::elem","value":"std::boxed::Box<ty::Type>","parent":{"krate":0,"index":4059},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4062},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\ty.rs","byte_start":494843,"byte_end":494851,"line_start":200,"line_end":200,"column_start":16,"column_end":24},"name":"TypePath","qualname":"::ty::TypePath","value":"TypePath { qself, path }","parent":null,"children":[{"krate":0,"index":4063},{"krate":0,"index":4064}],"decl_id":null,"docs":" A path like `std::slice::Iter`, optionally qualified with a\n self-type as in `<Vec<T> as SomeTrait>::Associated`.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4063},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\ty.rs","byte_start":494866,"byte_end":494871,"line_start":201,"line_end":201,"column_start":13,"column_end":18},"name":"qself","qualname":"::ty::TypePath::qself","value":"std::option::Option<path::QSelf>","parent":{"krate":0,"index":4062},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4064},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\ty.rs","byte_start":494900,"byte_end":494904,"line_start":202,"line_end":202,"column_start":13,"column_end":17},"name":"path","qualname":"::ty::TypePath::path","value":"path::Path","parent":{"krate":0,"index":4062},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4065},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\ty.rs","byte_start":495191,"byte_end":495198,"line_start":212,"line_end":212,"column_start":16,"column_end":23},"name":"TypePtr","qualname":"::ty::TypePtr","value":"TypePtr { star_token, const_token, mutability, elem }","parent":null,"children":[{"krate":0,"index":4066},{"krate":0,"index":4067},{"krate":0,"index":4068},{"krate":0,"index":4069}],"decl_id":null,"docs":" A raw pointer type: `*const T` or `*mut T`.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4066},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\ty.rs","byte_start":495213,"byte_end":495223,"line_start":213,"line_end":213,"column_start":13,"column_end":23},"name":"star_token","qualname":"::ty::TypePtr::star_token","value":"token::Star","parent":{"krate":0,"index":4065},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4067},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\ty.rs","byte_start":495248,"byte_end":495259,"line_start":214,"line_end":214,"column_start":13,"column_end":24},"name":"const_token","qualname":"::ty::TypePtr::const_token","value":"std::option::Option<token::Const>","parent":{"krate":0,"index":4065},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4068},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\ty.rs","byte_start":495296,"byte_end":495306,"line_start":215,"line_end":215,"column_start":13,"column_end":23},"name":"mutability","qualname":"::ty::TypePtr::mutability","value":"std::option::Option<token::Mut>","parent":{"krate":0,"index":4065},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4069},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\ty.rs","byte_start":495341,"byte_end":495345,"line_start":216,"line_end":216,"column_start":13,"column_end":17},"name":"elem","qualname":"::ty::TypePtr::elem","value":"std::boxed::Box<ty::Type>","parent":{"krate":0,"index":4065},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4070},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\ty.rs","byte_start":495635,"byte_end":495648,"line_start":226,"line_end":226,"column_start":16,"column_end":29},"name":"TypeReference","qualname":"::ty::TypeReference","value":"TypeReference { and_token, lifetime, mutability, elem }","parent":null,"children":[{"krate":0,"index":4071},{"krate":0,"index":4072},{"krate":0,"index":4073},{"krate":0,"index":4074}],"decl_id":null,"docs":" A reference type: `&'a T` or `&'a mut T`.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4071},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\ty.rs","byte_start":495663,"byte_end":495672,"line_start":227,"line_end":227,"column_start":13,"column_end":22},"name":"and_token","qualname":"::ty::TypeReference::and_token","value":"token::And","parent":{"krate":0,"index":4070},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4072},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\ty.rs","byte_start":495697,"byte_end":495705,"line_start":228,"line_end":228,"column_start":13,"column_end":21},"name":"lifetime","qualname":"::ty::TypeReference::lifetime","value":"std::option::Option<lifetime::Lifetime>","parent":{"krate":0,"index":4070},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4073},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\ty.rs","byte_start":495737,"byte_end":495747,"line_start":229,"line_end":229,"column_start":13,"column_end":23},"name":"mutability","qualname":"::ty::TypeReference::mutability","value":"std::option::Option<token::Mut>","parent":{"krate":0,"index":4070},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4074},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\ty.rs","byte_start":495782,"byte_end":495786,"line_start":230,"line_end":230,"column_start":13,"column_end":17},"name":"elem","qualname":"::ty::TypeReference::elem","value":"std::boxed::Box<ty::Type>","parent":{"krate":0,"index":4070},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4075},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\ty.rs","byte_start":496073,"byte_end":496082,"line_start":240,"line_end":240,"column_start":16,"column_end":25},"name":"TypeSlice","qualname":"::ty::TypeSlice","value":"TypeSlice { bracket_token, elem }","parent":null,"children":[{"krate":0,"index":4076},{"krate":0,"index":4077}],"decl_id":null,"docs":" A dynamically sized slice type: `[T]`.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4076},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\ty.rs","byte_start":496097,"byte_end":496110,"line_start":241,"line_end":241,"column_start":13,"column_end":26},"name":"bracket_token","qualname":"::ty::TypeSlice::bracket_token","value":"token::Bracket","parent":{"krate":0,"index":4075},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4077},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\ty.rs","byte_start":496140,"byte_end":496144,"line_start":242,"line_end":242,"column_start":13,"column_end":17},"name":"elem","qualname":"::ty::TypeSlice::elem","value":"std::boxed::Box<ty::Type>","parent":{"krate":0,"index":4075},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4078},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\ty.rs","byte_start":496491,"byte_end":496506,"line_start":253,"line_end":253,"column_start":16,"column_end":31},"name":"TypeTraitObject","qualname":"::ty::TypeTraitObject","value":"TypeTraitObject { dyn_token, bounds }","parent":null,"children":[{"krate":0,"index":4079},{"krate":0,"index":4080}],"decl_id":null,"docs":" A trait object type `dyn Bound1 + Bound2 + Bound3` where `Bound` is a\n trait or a lifetime.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4079},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\ty.rs","byte_start":496521,"byte_end":496530,"line_start":254,"line_end":254,"column_start":13,"column_end":22},"name":"dyn_token","qualname":"::ty::TypeTraitObject::dyn_token","value":"std::option::Option<token::Dyn>","parent":{"krate":0,"index":4078},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4080},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\ty.rs","byte_start":496565,"byte_end":496571,"line_start":255,"line_end":255,"column_start":13,"column_end":19},"name":"bounds","qualname":"::ty::TypeTraitObject::bounds","value":"punctuated::Punctuated<generics::TypeParamBound, token::Add>","parent":{"krate":0,"index":4078},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4081},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\ty.rs","byte_start":496882,"byte_end":496891,"line_start":265,"line_end":265,"column_start":16,"column_end":25},"name":"TypeTuple","qualname":"::ty::TypeTuple","value":"TypeTuple { paren_token, elems }","parent":null,"children":[{"krate":0,"index":4082},{"krate":0,"index":4083}],"decl_id":null,"docs":" A tuple type: `(A, B, C, String)`.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4082},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\ty.rs","byte_start":496906,"byte_end":496917,"line_start":266,"line_end":266,"column_start":13,"column_end":24},"name":"paren_token","qualname":"::ty::TypeTuple::paren_token","value":"token::Paren","parent":{"krate":0,"index":4081},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4083},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\ty.rs","byte_start":496945,"byte_end":496950,"line_start":267,"line_end":267,"column_start":13,"column_end":18},"name":"elems","qualname":"::ty::TypeTuple::elems","value":"punctuated::Punctuated<ty::Type, token::Comma>","parent":{"krate":0,"index":4081},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4084},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\ty.rs","byte_start":497266,"byte_end":497269,"line_start":277,"line_end":277,"column_start":16,"column_end":19},"name":"Abi","qualname":"::ty::Abi","value":"Abi { extern_token, name }","parent":null,"children":[{"krate":0,"index":4085},{"krate":0,"index":4086}],"decl_id":null,"docs":" The binary interface of a function: `extern \"C\"`.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4085},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\ty.rs","byte_start":497284,"byte_end":497296,"line_start":278,"line_end":278,"column_start":13,"column_end":25},"name":"extern_token","qualname":"::ty::Abi::extern_token","value":"token::Extern","parent":{"krate":0,"index":4084},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4086},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\ty.rs","byte_start":497326,"byte_end":497330,"line_start":279,"line_end":279,"column_start":13,"column_end":17},"name":"name","qualname":"::ty::Abi::name","value":"std::option::Option<lit::LitStr>","parent":{"krate":0,"index":4084},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4087},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\ty.rs","byte_start":497651,"byte_end":497660,"line_start":289,"line_end":289,"column_start":16,"column_end":25},"name":"BareFnArg","qualname":"::ty::BareFnArg","value":"BareFnArg { attrs, name, ty }","parent":null,"children":[{"krate":0,"index":4088},{"krate":0,"index":4089},{"krate":0,"index":4090}],"decl_id":null,"docs":" An argument in a function type: the `usize` in `fn(usize) -> bool`.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4088},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\ty.rs","byte_start":497675,"byte_end":497680,"line_start":290,"line_end":290,"column_start":13,"column_end":18},"name":"attrs","qualname":"::ty::BareFnArg::attrs","value":"std::vec::Vec<attr::Attribute>","parent":{"krate":0,"index":4087},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4089},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\ty.rs","byte_start":497710,"byte_end":497714,"line_start":291,"line_end":291,"column_start":13,"column_end":17},"name":"name","qualname":"::ty::BareFnArg::name","value":"std::option::Option<(proc_macro2::Ident, token::Colon)>","parent":{"krate":0,"index":4087},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4090},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\ty.rs","byte_start":497756,"byte_end":497758,"line_start":292,"line_end":292,"column_start":13,"column_end":15},"name":"ty","qualname":"::ty::BareFnArg::ty","value":"ty::Type","parent":{"krate":0,"index":4087},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4091},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\ty.rs","byte_start":498281,"byte_end":498289,"line_start":312,"line_end":312,"column_start":16,"column_end":24},"name":"Variadic","qualname":"::ty::Variadic","value":"Variadic { attrs, dots }","parent":null,"children":[{"krate":0,"index":4092},{"krate":0,"index":4093}],"decl_id":null,"docs":" The variadic argument of a foreign function.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4092},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\ty.rs","byte_start":498304,"byte_end":498309,"line_start":313,"line_end":313,"column_start":13,"column_end":18},"name":"attrs","qualname":"::ty::Variadic::attrs","value":"std::vec::Vec<attr::Attribute>","parent":{"krate":0,"index":4091},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4093},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\ty.rs","byte_start":498339,"byte_end":498343,"line_start":314,"line_end":314,"column_start":13,"column_end":17},"name":"dots","qualname":"::ty::Variadic::dots","value":"token::Dot3","parent":{"krate":0,"index":4091},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4095},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\ty.rs","byte_start":498779,"byte_end":498786,"line_start":328,"line_end":328,"column_start":9,"column_end":16},"name":"Default","qualname":"::ty::ReturnType::Default","value":"ReturnType::Default","parent":{"krate":0,"index":4094},"children":[],"decl_id":null,"docs":" Return type is not specified.","sig":null,"attributes":[{"value":"/ Return type is not specified.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\ty.rs","byte_start":498647,"byte_end":498680,"line_start":325,"line_end":325,"column_start":9,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\ty.rs","byte_start":498689,"byte_end":498692,"line_start":326,"line_end":326,"column_start":9,"column_end":12}},{"value":"/ Functions default to `()` and closures default to type inference.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\ty.rs","byte_start":498701,"byte_end":498770,"line_start":327,"line_end":327,"column_start":9,"column_end":78}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4097},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\ty.rs","byte_start":498839,"byte_end":498843,"line_start":330,"line_end":330,"column_start":9,"column_end":13},"name":"Type","qualname":"::ty::ReturnType::Type","value":"ReturnType::Type(crate::token::RArrow, Box<Type>)","parent":{"krate":0,"index":4094},"children":[],"decl_id":null,"docs":" A particular type is returned.\n","sig":null,"attributes":[{"value":"/ A particular type is returned.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\ty.rs","byte_start":498796,"byte_end":498830,"line_start":329,"line_end":329,"column_start":9,"column_end":43}}]},{"kind":"Field","id":{"krate":0,"index":4099},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\ty.rs","byte_start":498844,"byte_end":498854,"line_start":330,"line_end":330,"column_start":14,"column_end":24},"name":"0","qualname":"::ty::ReturnType::Type::0","value":"token::RArrow","parent":{"krate":0,"index":4097},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4100},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\ty.rs","byte_start":498856,"byte_end":498865,"line_start":330,"line_end":330,"column_start":26,"column_end":35},"name":"1","qualname":"::ty::ReturnType::Type::1","value":"std::boxed::Box<ty::Type>","parent":{"krate":0,"index":4097},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":4094},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\ty.rs","byte_start":498626,"byte_end":498636,"line_start":324,"line_end":324,"column_start":14,"column_end":24},"name":"ReturnType","qualname":"::ty::ReturnType","value":"enum ReturnType { Default, Type(crate::token::RArrow, Box<Type>), }","parent":null,"children":[{"krate":0,"index":4095},{"krate":0,"index":4097}],"decl_id":null,"docs":" Return type of a function signature.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4102},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\pat.rs","byte_start":532277,"byte_end":532280,"line_start":20,"line_end":20,"column_start":9,"column_end":12},"name":"Box","qualname":"::pat::Pat::Box","value":"Pat::Box(PatBox)","parent":{"krate":0,"index":4101},"children":[],"decl_id":null,"docs":" A box pattern: `box v`.\n","sig":null,"attributes":[{"value":"/ A box pattern: `box v`.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\pat.rs","byte_start":532241,"byte_end":532268,"line_start":19,"line_end":19,"column_start":9,"column_end":36}}]},{"kind":"Field","id":{"krate":0,"index":4104},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\pat.rs","byte_start":532281,"byte_end":532287,"line_start":20,"line_end":20,"column_start":13,"column_end":19},"name":"0","qualname":"::pat::Pat::Box::0","value":"pat::PatBox","parent":{"krate":0,"index":4102},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4105},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\pat.rs","byte_start":532380,"byte_end":532385,"line_start":23,"line_end":23,"column_start":9,"column_end":14},"name":"Ident","qualname":"::pat::Pat::Ident","value":"Pat::Ident(PatIdent)","parent":{"krate":0,"index":4101},"children":[],"decl_id":null,"docs":" A pattern that binds a new variable: `ref mut binding @ SUBPATTERN`.\n","sig":null,"attributes":[{"value":"/ A pattern that binds a new variable: `ref mut binding @ SUBPATTERN`.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\pat.rs","byte_start":532299,"byte_end":532371,"line_start":22,"line_end":22,"column_start":9,"column_end":81}}]},{"kind":"Field","id":{"krate":0,"index":4107},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\pat.rs","byte_start":532386,"byte_end":532394,"line_start":23,"line_end":23,"column_start":15,"column_end":23},"name":"0","qualname":"::pat::Pat::Ident::0","value":"pat::PatIdent","parent":{"krate":0,"index":4105},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4108},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\pat.rs","byte_start":532581,"byte_end":532584,"line_start":29,"line_end":29,"column_start":9,"column_end":12},"name":"Lit","qualname":"::pat::Pat::Lit","value":"Pat::Lit(PatLit)","parent":{"krate":0,"index":4101},"children":[],"decl_id":null,"docs":" A literal pattern: `0`.","sig":null,"attributes":[{"value":"/ A literal pattern: `0`.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\pat.rs","byte_start":532406,"byte_end":532433,"line_start":25,"line_end":25,"column_start":9,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\pat.rs","byte_start":532442,"byte_end":532445,"line_start":26,"line_end":26,"column_start":9,"column_end":12}},{"value":"/ This holds an `Expr` rather than a `Lit` because negative numbers","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\pat.rs","byte_start":532454,"byte_end":532523,"line_start":27,"line_end":27,"column_start":9,"column_end":78}},{"value":"/ are represented as an `Expr::Unary`.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\pat.rs","byte_start":532532,"byte_end":532572,"line_start":28,"line_end":28,"column_start":9,"column_end":49}}]},{"kind":"Field","id":{"krate":0,"index":4110},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\pat.rs","byte_start":532585,"byte_end":532591,"line_start":29,"line_end":29,"column_start":13,"column_end":19},"name":"0","qualname":"::pat::Pat::Lit::0","value":"pat::PatLit","parent":{"krate":0,"index":4108},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4111},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\pat.rs","byte_start":532644,"byte_end":532649,"line_start":32,"line_end":32,"column_start":9,"column_end":14},"name":"Macro","qualname":"::pat::Pat::Macro","value":"Pat::Macro(PatMacro)","parent":{"krate":0,"index":4101},"children":[],"decl_id":null,"docs":" A macro in pattern position.\n","sig":null,"attributes":[{"value":"/ A macro in pattern position.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\pat.rs","byte_start":532603,"byte_end":532635,"line_start":31,"line_end":31,"column_start":9,"column_end":41}}]},{"kind":"Field","id":{"krate":0,"index":4113},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\pat.rs","byte_start":532650,"byte_end":532658,"line_start":32,"line_end":32,"column_start":15,"column_end":23},"name":"0","qualname":"::pat::Pat::Macro::0","value":"pat::PatMacro","parent":{"krate":0,"index":4111},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4114},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\pat.rs","byte_start":532732,"byte_end":532734,"line_start":35,"line_end":35,"column_start":9,"column_end":11},"name":"Or","qualname":"::pat::Pat::Or","value":"Pat::Or(PatOr)","parent":{"krate":0,"index":4101},"children":[],"decl_id":null,"docs":" A pattern that matches any one of a set of cases.\n","sig":null,"attributes":[{"value":"/ A pattern that matches any one of a set of cases.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\pat.rs","byte_start":532670,"byte_end":532723,"line_start":34,"line_end":34,"column_start":9,"column_end":62}}]},{"kind":"Field","id":{"krate":0,"index":4116},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\pat.rs","byte_start":532735,"byte_end":532740,"line_start":35,"line_end":35,"column_start":12,"column_end":17},"name":"0","qualname":"::pat::Pat::Or::0","value":"pat::PatOr","parent":{"krate":0,"index":4114},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4117},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\pat.rs","byte_start":533124,"byte_end":533128,"line_start":44,"line_end":44,"column_start":9,"column_end":13},"name":"Path","qualname":"::pat::Pat::Path","value":"Pat::Path(PatPath)","parent":{"krate":0,"index":4101},"children":[],"decl_id":null,"docs":" A path pattern like `Color::Red`, optionally qualified with a\n self-type.","sig":null,"attributes":[{"value":"/ A path pattern like `Color::Red`, optionally qualified with a","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\pat.rs","byte_start":532752,"byte_end":532817,"line_start":37,"line_end":37,"column_start":9,"column_end":74}},{"value":"/ self-type.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\pat.rs","byte_start":532826,"byte_end":532840,"line_start":38,"line_end":38,"column_start":9,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\pat.rs","byte_start":532849,"byte_end":532852,"line_start":39,"line_end":39,"column_start":9,"column_end":12}},{"value":"/ Unqualified path patterns can legally refer to variants, structs,","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\pat.rs","byte_start":532861,"byte_end":532930,"line_start":40,"line_end":40,"column_start":9,"column_end":78}},{"value":"/ constants or associated constants. Qualified path patterns like","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\pat.rs","byte_start":532939,"byte_end":533006,"line_start":41,"line_end":41,"column_start":9,"column_end":76}},{"value":"/ `<A>::B::C` and `<A as Trait>::B::C` can only legally refer to","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\pat.rs","byte_start":533015,"byte_end":533081,"line_start":42,"line_end":42,"column_start":9,"column_end":75}},{"value":"/ associated constants.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\pat.rs","byte_start":533090,"byte_end":533115,"line_start":43,"line_end":43,"column_start":9,"column_end":34}}]},{"kind":"Field","id":{"krate":0,"index":4119},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\pat.rs","byte_start":533129,"byte_end":533136,"line_start":44,"line_end":44,"column_start":14,"column_end":21},"name":"0","qualname":"::pat::Pat::Path::0","value":"pat::PatPath","parent":{"krate":0,"index":4117},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4120},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\pat.rs","byte_start":533186,"byte_end":533191,"line_start":47,"line_end":47,"column_start":9,"column_end":14},"name":"Range","qualname":"::pat::Pat::Range","value":"Pat::Range(PatRange)","parent":{"krate":0,"index":4101},"children":[],"decl_id":null,"docs":" A range pattern: `1..=2`.\n","sig":null,"attributes":[{"value":"/ A range pattern: `1..=2`.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\pat.rs","byte_start":533148,"byte_end":533177,"line_start":46,"line_end":46,"column_start":9,"column_end":38}}]},{"kind":"Field","id":{"krate":0,"index":4122},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\pat.rs","byte_start":533192,"byte_end":533200,"line_start":47,"line_end":47,"column_start":15,"column_end":23},"name":"0","qualname":"::pat::Pat::Range::0","value":"pat::PatRange","parent":{"krate":0,"index":4120},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4123},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\pat.rs","byte_start":533257,"byte_end":533266,"line_start":50,"line_end":50,"column_start":9,"column_end":18},"name":"Reference","qualname":"::pat::Pat::Reference","value":"Pat::Reference(PatReference)","parent":{"krate":0,"index":4101},"children":[],"decl_id":null,"docs":" A reference pattern: `&mut var`.\n","sig":null,"attributes":[{"value":"/ A reference pattern: `&mut var`.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\pat.rs","byte_start":533212,"byte_end":533248,"line_start":49,"line_end":49,"column_start":9,"column_end":45}}]},{"kind":"Field","id":{"krate":0,"index":4125},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\pat.rs","byte_start":533267,"byte_end":533279,"line_start":50,"line_end":50,"column_start":19,"column_end":31},"name":"0","qualname":"::pat::Pat::Reference::0","value":"pat::PatReference","parent":{"krate":0,"index":4123},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4126},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\pat.rs","byte_start":533354,"byte_end":533358,"line_start":53,"line_end":53,"column_start":9,"column_end":13},"name":"Rest","qualname":"::pat::Pat::Rest","value":"Pat::Rest(PatRest)","parent":{"krate":0,"index":4101},"children":[],"decl_id":null,"docs":" The dots in a tuple or slice pattern: `[0, 1, ..]`\n","sig":null,"attributes":[{"value":"/ The dots in a tuple or slice pattern: `[0, 1, ..]`","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\pat.rs","byte_start":533291,"byte_end":533345,"line_start":52,"line_end":52,"column_start":9,"column_end":63}}]},{"kind":"Field","id":{"krate":0,"index":4128},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\pat.rs","byte_start":533359,"byte_end":533366,"line_start":53,"line_end":53,"column_start":14,"column_end":21},"name":"0","qualname":"::pat::Pat::Rest::0","value":"pat::PatRest","parent":{"krate":0,"index":4126},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4129},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\pat.rs","byte_start":533453,"byte_end":533458,"line_start":56,"line_end":56,"column_start":9,"column_end":14},"name":"Slice","qualname":"::pat::Pat::Slice","value":"Pat::Slice(PatSlice)","parent":{"krate":0,"index":4101},"children":[],"decl_id":null,"docs":" A dynamically sized slice pattern: `[a, b, ref i @ .., y, z]`.\n","sig":null,"attributes":[{"value":"/ A dynamically sized slice pattern: `[a, b, ref i @ .., y, z]`.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\pat.rs","byte_start":533378,"byte_end":533444,"line_start":55,"line_end":55,"column_start":9,"column_end":75}}]},{"kind":"Field","id":{"krate":0,"index":4131},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\pat.rs","byte_start":533459,"byte_end":533467,"line_start":56,"line_end":56,"column_start":15,"column_end":23},"name":"0","qualname":"::pat::Pat::Slice::0","value":"pat::PatSlice","parent":{"krate":0,"index":4129},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4132},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\pat.rs","byte_start":533551,"byte_end":533557,"line_start":59,"line_end":59,"column_start":9,"column_end":15},"name":"Struct","qualname":"::pat::Pat::Struct","value":"Pat::Struct(PatStruct)","parent":{"krate":0,"index":4101},"children":[],"decl_id":null,"docs":" A struct or struct variant pattern: `Variant { x, y, .. }`.\n","sig":null,"attributes":[{"value":"/ A struct or struct variant pattern: `Variant { x, y, .. }`.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\pat.rs","byte_start":533479,"byte_end":533542,"line_start":58,"line_end":58,"column_start":9,"column_end":72}}]},{"kind":"Field","id":{"krate":0,"index":4134},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\pat.rs","byte_start":533558,"byte_end":533567,"line_start":59,"line_end":59,"column_start":16,"column_end":25},"name":"0","qualname":"::pat::Pat::Struct::0","value":"pat::PatStruct","parent":{"krate":0,"index":4132},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4135},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\pat.rs","byte_start":533618,"byte_end":533623,"line_start":62,"line_end":62,"column_start":9,"column_end":14},"name":"Tuple","qualname":"::pat::Pat::Tuple","value":"Pat::Tuple(PatTuple)","parent":{"krate":0,"index":4101},"children":[],"decl_id":null,"docs":" A tuple pattern: `(a, b)`.\n","sig":null,"attributes":[{"value":"/ A tuple pattern: `(a, b)`.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\pat.rs","byte_start":533579,"byte_end":533609,"line_start":61,"line_end":61,"column_start":9,"column_end":39}}]},{"kind":"Field","id":{"krate":0,"index":4137},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\pat.rs","byte_start":533624,"byte_end":533632,"line_start":62,"line_end":62,"column_start":15,"column_end":23},"name":"0","qualname":"::pat::Pat::Tuple::0","value":"pat::PatTuple","parent":{"krate":0,"index":4135},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4138},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\pat.rs","byte_start":533721,"byte_end":533732,"line_start":65,"line_end":65,"column_start":9,"column_end":20},"name":"TupleStruct","qualname":"::pat::Pat::TupleStruct","value":"Pat::TupleStruct(PatTupleStruct)","parent":{"krate":0,"index":4101},"children":[],"decl_id":null,"docs":" A tuple struct or tuple variant pattern: `Variant(x, y, .., z)`.\n","sig":null,"attributes":[{"value":"/ A tuple struct or tuple variant pattern: `Variant(x, y, .., z)`.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\pat.rs","byte_start":533644,"byte_end":533712,"line_start":64,"line_end":64,"column_start":9,"column_end":77}}]},{"kind":"Field","id":{"krate":0,"index":4140},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\pat.rs","byte_start":533733,"byte_end":533747,"line_start":65,"line_end":65,"column_start":21,"column_end":35},"name":"0","qualname":"::pat::Pat::TupleStruct::0","value":"pat::PatTupleStruct","parent":{"krate":0,"index":4138},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4141},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\pat.rs","byte_start":533810,"byte_end":533814,"line_start":68,"line_end":68,"column_start":9,"column_end":13},"name":"Type","qualname":"::pat::Pat::Type","value":"Pat::Type(PatType)","parent":{"krate":0,"index":4101},"children":[],"decl_id":null,"docs":" A type ascription pattern: `foo: f64`.\n","sig":null,"attributes":[{"value":"/ A type ascription pattern: `foo: f64`.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\pat.rs","byte_start":533759,"byte_end":533801,"line_start":67,"line_end":67,"column_start":9,"column_end":51}}]},{"kind":"Field","id":{"krate":0,"index":4143},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\pat.rs","byte_start":533815,"byte_end":533822,"line_start":68,"line_end":68,"column_start":14,"column_end":21},"name":"0","qualname":"::pat::Pat::Type::0","value":"pat::PatType","parent":{"krate":0,"index":4141},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4144},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\pat.rs","byte_start":533897,"byte_end":533905,"line_start":71,"line_end":71,"column_start":9,"column_end":17},"name":"Verbatim","qualname":"::pat::Pat::Verbatim","value":"Pat::Verbatim(TokenStream)","parent":{"krate":0,"index":4101},"children":[],"decl_id":null,"docs":" Tokens in pattern position not interpreted by Syn.\n","sig":null,"attributes":[{"value":"/ Tokens in pattern position not interpreted by Syn.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\pat.rs","byte_start":533834,"byte_end":533888,"line_start":70,"line_end":70,"column_start":9,"column_end":63}}]},{"kind":"Field","id":{"krate":0,"index":4146},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\pat.rs","byte_start":533906,"byte_end":533917,"line_start":71,"line_end":71,"column_start":18,"column_end":29},"name":"0","qualname":"::pat::Pat::Verbatim::0","value":"proc_macro2::TokenStream","parent":{"krate":0,"index":4144},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4147},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\pat.rs","byte_start":533980,"byte_end":533984,"line_start":74,"line_end":74,"column_start":9,"column_end":13},"name":"Wild","qualname":"::pat::Pat::Wild","value":"Pat::Wild(PatWild)","parent":{"krate":0,"index":4101},"children":[],"decl_id":null,"docs":" A pattern that matches any value: `_`.\n","sig":null,"attributes":[{"value":"/ A pattern that matches any value: `_`.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\pat.rs","byte_start":533929,"byte_end":533971,"line_start":73,"line_end":73,"column_start":9,"column_end":51}}]},{"kind":"Field","id":{"krate":0,"index":4149},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\pat.rs","byte_start":533985,"byte_end":533992,"line_start":74,"line_end":74,"column_start":14,"column_end":21},"name":"0","qualname":"::pat::Pat::Wild::0","value":"pat::PatWild","parent":{"krate":0,"index":4147},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":4101},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\pat.rs","byte_start":532227,"byte_end":532230,"line_start":18,"line_end":18,"column_start":14,"column_end":17},"name":"Pat","qualname":"::pat::Pat","value":"enum Pat {\n    Box(PatBox),\n    Ident(PatIdent),\n    Lit(PatLit),\n    Macro(PatMacro),\n    Or(PatOr),\n    Path(PatPath),\n    Range(PatRange),\n    Reference(PatReference),\n    Rest(PatRest),\n    Slice(PatSlice),\n    Struct(PatStruct),\n    Tuple(PatTuple),\n    TupleStruct(PatTupleStruct),\n    Type(PatType),\n    Verbatim(TokenStream),\n    Wild(PatWild),\n}","parent":null,"children":[{"krate":0,"index":4102},{"krate":0,"index":4105},{"krate":0,"index":4108},{"krate":0,"index":4111},{"krate":0,"index":4114},{"krate":0,"index":4117},{"krate":0,"index":4120},{"krate":0,"index":4123},{"krate":0,"index":4126},{"krate":0,"index":4129},{"krate":0,"index":4132},{"krate":0,"index":4135},{"krate":0,"index":4138},{"krate":0,"index":4141},{"krate":0,"index":4144},{"krate":0,"index":4147}],"decl_id":null,"docs":" A pattern in a local binding, function signature, match expression, or\n various other places.","sig":null,"attributes":[{"value":"non_exhaustive","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\pat.rs","byte_start":532197,"byte_end":532211,"line_start":17,"line_end":17,"column_start":44,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":4180},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\pat.rs","byte_start":535088,"byte_end":535094,"line_start":105,"line_end":105,"column_start":16,"column_end":22},"name":"PatBox","qualname":"::pat::PatBox","value":"PatBox { attrs, box_token, pat }","parent":null,"children":[{"krate":0,"index":4181},{"krate":0,"index":4182},{"krate":0,"index":4183}],"decl_id":null,"docs":" A box pattern: `box v`.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4181},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\pat.rs","byte_start":535109,"byte_end":535114,"line_start":106,"line_end":106,"column_start":13,"column_end":18},"name":"attrs","qualname":"::pat::PatBox::attrs","value":"std::vec::Vec<attr::Attribute>","parent":{"krate":0,"index":4180},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4182},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\pat.rs","byte_start":535144,"byte_end":535153,"line_start":107,"line_end":107,"column_start":13,"column_end":22},"name":"box_token","qualname":"::pat::PatBox::box_token","value":"token::Box","parent":{"krate":0,"index":4180},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4183},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\pat.rs","byte_start":535180,"byte_end":535183,"line_start":108,"line_end":108,"column_start":13,"column_end":16},"name":"pat","qualname":"::pat::PatBox::pat","value":"std::boxed::Box<pat::Pat>","parent":{"krate":0,"index":4180},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4184},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\pat.rs","byte_start":535598,"byte_end":535606,"line_start":120,"line_end":120,"column_start":16,"column_end":24},"name":"PatIdent","qualname":"::pat::PatIdent","value":"PatIdent { attrs, by_ref, mutability, ident, subpat }","parent":null,"children":[{"krate":0,"index":4185},{"krate":0,"index":4186},{"krate":0,"index":4187},{"krate":0,"index":4188},{"krate":0,"index":4189}],"decl_id":null,"docs":" A pattern that binds a new variable: `ref mut binding @ SUBPATTERN`.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4185},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\pat.rs","byte_start":535621,"byte_end":535626,"line_start":121,"line_end":121,"column_start":13,"column_end":18},"name":"attrs","qualname":"::pat::PatIdent::attrs","value":"std::vec::Vec<attr::Attribute>","parent":{"krate":0,"index":4184},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4186},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\pat.rs","byte_start":535656,"byte_end":535662,"line_start":122,"line_end":122,"column_start":13,"column_end":19},"name":"by_ref","qualname":"::pat::PatIdent::by_ref","value":"std::option::Option<token::Ref>","parent":{"krate":0,"index":4184},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4187},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\pat.rs","byte_start":535697,"byte_end":535707,"line_start":123,"line_end":123,"column_start":13,"column_end":23},"name":"mutability","qualname":"::pat::PatIdent::mutability","value":"std::option::Option<token::Mut>","parent":{"krate":0,"index":4184},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4188},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\pat.rs","byte_start":535742,"byte_end":535747,"line_start":124,"line_end":124,"column_start":13,"column_end":18},"name":"ident","qualname":"::pat::PatIdent::ident","value":"proc_macro2::Ident","parent":{"krate":0,"index":4184},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4189},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\pat.rs","byte_start":535768,"byte_end":535774,"line_start":125,"line_end":125,"column_start":13,"column_end":19},"name":"subpat","qualname":"::pat::PatIdent::subpat","value":"std::option::Option<(token::At, std::boxed::Box<pat::Pat>)>","parent":{"krate":0,"index":4184},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4190},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\pat.rs","byte_start":536146,"byte_end":536152,"line_start":137,"line_end":137,"column_start":16,"column_end":22},"name":"PatLit","qualname":"::pat::PatLit","value":"PatLit { attrs, expr }","parent":null,"children":[{"krate":0,"index":4191},{"krate":0,"index":4192}],"decl_id":null,"docs":" A literal pattern: `0`.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4191},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\pat.rs","byte_start":536167,"byte_end":536172,"line_start":138,"line_end":138,"column_start":13,"column_end":18},"name":"attrs","qualname":"::pat::PatLit::attrs","value":"std::vec::Vec<attr::Attribute>","parent":{"krate":0,"index":4190},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4192},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\pat.rs","byte_start":536202,"byte_end":536206,"line_start":139,"line_end":139,"column_start":13,"column_end":17},"name":"expr","qualname":"::pat::PatLit::expr","value":"std::boxed::Box<expr::Expr>","parent":{"krate":0,"index":4190},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4193},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\pat.rs","byte_start":536436,"byte_end":536444,"line_start":148,"line_end":148,"column_start":16,"column_end":24},"name":"PatMacro","qualname":"::pat::PatMacro","value":"PatMacro { attrs, mac }","parent":null,"children":[{"krate":0,"index":4194},{"krate":0,"index":4195}],"decl_id":null,"docs":" A macro in pattern position.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4194},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\pat.rs","byte_start":536459,"byte_end":536464,"line_start":149,"line_end":149,"column_start":13,"column_end":18},"name":"attrs","qualname":"::pat::PatMacro::attrs","value":"std::vec::Vec<attr::Attribute>","parent":{"krate":0,"index":4193},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4195},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\pat.rs","byte_start":536494,"byte_end":536497,"line_start":150,"line_end":150,"column_start":13,"column_end":16},"name":"mac","qualname":"::pat::PatMacro::mac","value":"mac::Macro","parent":{"krate":0,"index":4193},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4196},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\pat.rs","byte_start":536744,"byte_end":536749,"line_start":159,"line_end":159,"column_start":16,"column_end":21},"name":"PatOr","qualname":"::pat::PatOr","value":"PatOr { attrs, leading_vert, cases }","parent":null,"children":[{"krate":0,"index":4197},{"krate":0,"index":4198},{"krate":0,"index":4199}],"decl_id":null,"docs":" A pattern that matches any one of a set of cases.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4197},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\pat.rs","byte_start":536764,"byte_end":536769,"line_start":160,"line_end":160,"column_start":13,"column_end":18},"name":"attrs","qualname":"::pat::PatOr::attrs","value":"std::vec::Vec<attr::Attribute>","parent":{"krate":0,"index":4196},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4198},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\pat.rs","byte_start":536799,"byte_end":536811,"line_start":161,"line_end":161,"column_start":13,"column_end":25},"name":"leading_vert","qualname":"::pat::PatOr::leading_vert","value":"std::option::Option<token::Or>","parent":{"krate":0,"index":4196},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4199},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\pat.rs","byte_start":536844,"byte_end":536849,"line_start":162,"line_end":162,"column_start":13,"column_end":18},"name":"cases","qualname":"::pat::PatOr::cases","value":"punctuated::Punctuated<pat::Pat, token::Or>","parent":{"krate":0,"index":4196},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4200},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\pat.rs","byte_start":537403,"byte_end":537410,"line_start":177,"line_end":177,"column_start":16,"column_end":23},"name":"PatPath","qualname":"::pat::PatPath","value":"PatPath { attrs, qself, path }","parent":null,"children":[{"krate":0,"index":4201},{"krate":0,"index":4202},{"krate":0,"index":4203}],"decl_id":null,"docs":" A path pattern like `Color::Red`, optionally qualified with a\n self-type.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4201},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\pat.rs","byte_start":537425,"byte_end":537430,"line_start":178,"line_end":178,"column_start":13,"column_end":18},"name":"attrs","qualname":"::pat::PatPath::attrs","value":"std::vec::Vec<attr::Attribute>","parent":{"krate":0,"index":4200},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4202},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\pat.rs","byte_start":537460,"byte_end":537465,"line_start":179,"line_end":179,"column_start":13,"column_end":18},"name":"qself","qualname":"::pat::PatPath::qself","value":"std::option::Option<path::QSelf>","parent":{"krate":0,"index":4200},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4203},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\pat.rs","byte_start":537494,"byte_end":537498,"line_start":180,"line_end":180,"column_start":13,"column_end":17},"name":"path","qualname":"::pat::PatPath::path","value":"path::Path","parent":{"krate":0,"index":4200},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4204},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\pat.rs","byte_start":537720,"byte_end":537728,"line_start":189,"line_end":189,"column_start":16,"column_end":24},"name":"PatRange","qualname":"::pat::PatRange","value":"PatRange { attrs, lo, limits, hi }","parent":null,"children":[{"krate":0,"index":4205},{"krate":0,"index":4206},{"krate":0,"index":4207},{"krate":0,"index":4208}],"decl_id":null,"docs":" A range pattern: `1..=2`.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4205},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\pat.rs","byte_start":537743,"byte_end":537748,"line_start":190,"line_end":190,"column_start":13,"column_end":18},"name":"attrs","qualname":"::pat::PatRange::attrs","value":"std::vec::Vec<attr::Attribute>","parent":{"krate":0,"index":4204},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4206},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\pat.rs","byte_start":537778,"byte_end":537780,"line_start":191,"line_end":191,"column_start":13,"column_end":15},"name":"lo","qualname":"::pat::PatRange::lo","value":"std::boxed::Box<expr::Expr>","parent":{"krate":0,"index":4204},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4207},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\pat.rs","byte_start":537805,"byte_end":537811,"line_start":192,"line_end":192,"column_start":13,"column_end":19},"name":"limits","qualname":"::pat::PatRange::limits","value":"expr::RangeLimits","parent":{"krate":0,"index":4204},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4208},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\pat.rs","byte_start":537838,"byte_end":537840,"line_start":193,"line_end":193,"column_start":13,"column_end":15},"name":"hi","qualname":"::pat::PatRange::hi","value":"std::boxed::Box<expr::Expr>","parent":{"krate":0,"index":4204},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4209},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\pat.rs","byte_start":538074,"byte_end":538086,"line_start":202,"line_end":202,"column_start":16,"column_end":28},"name":"PatReference","qualname":"::pat::PatReference","value":"PatReference { attrs, and_token, mutability, pat }","parent":null,"children":[{"krate":0,"index":4210},{"krate":0,"index":4211},{"krate":0,"index":4212},{"krate":0,"index":4213}],"decl_id":null,"docs":" A reference pattern: `&mut var`.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4210},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\pat.rs","byte_start":538101,"byte_end":538106,"line_start":203,"line_end":203,"column_start":13,"column_end":18},"name":"attrs","qualname":"::pat::PatReference::attrs","value":"std::vec::Vec<attr::Attribute>","parent":{"krate":0,"index":4209},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4211},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\pat.rs","byte_start":538136,"byte_end":538145,"line_start":204,"line_end":204,"column_start":13,"column_end":22},"name":"and_token","qualname":"::pat::PatReference::and_token","value":"token::And","parent":{"krate":0,"index":4209},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4212},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\pat.rs","byte_start":538170,"byte_end":538180,"line_start":205,"line_end":205,"column_start":13,"column_end":23},"name":"mutability","qualname":"::pat::PatReference::mutability","value":"std::option::Option<token::Mut>","parent":{"krate":0,"index":4209},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4213},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\pat.rs","byte_start":538215,"byte_end":538218,"line_start":206,"line_end":206,"column_start":13,"column_end":16},"name":"pat","qualname":"::pat::PatReference::pat","value":"std::boxed::Box<pat::Pat>","parent":{"krate":0,"index":4209},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4214},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\pat.rs","byte_start":538469,"byte_end":538476,"line_start":215,"line_end":215,"column_start":16,"column_end":23},"name":"PatRest","qualname":"::pat::PatRest","value":"PatRest { attrs, dot2_token }","parent":null,"children":[{"krate":0,"index":4215},{"krate":0,"index":4216}],"decl_id":null,"docs":" The dots in a tuple or slice pattern: `[0, 1, ..]`","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4215},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\pat.rs","byte_start":538491,"byte_end":538496,"line_start":216,"line_end":216,"column_start":13,"column_end":18},"name":"attrs","qualname":"::pat::PatRest::attrs","value":"std::vec::Vec<attr::Attribute>","parent":{"krate":0,"index":4214},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4216},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\pat.rs","byte_start":538526,"byte_end":538536,"line_start":217,"line_end":217,"column_start":13,"column_end":23},"name":"dot2_token","qualname":"::pat::PatRest::dot2_token","value":"token::Dot2","parent":{"krate":0,"index":4214},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4217},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\pat.rs","byte_start":538801,"byte_end":538809,"line_start":226,"line_end":226,"column_start":16,"column_end":24},"name":"PatSlice","qualname":"::pat::PatSlice","value":"PatSlice { attrs, bracket_token, elems }","parent":null,"children":[{"krate":0,"index":4218},{"krate":0,"index":4219},{"krate":0,"index":4220}],"decl_id":null,"docs":" A dynamically sized slice pattern: `[a, b, ref i @ .., y, z]`.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4218},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\pat.rs","byte_start":538824,"byte_end":538829,"line_start":227,"line_end":227,"column_start":13,"column_end":18},"name":"attrs","qualname":"::pat::PatSlice::attrs","value":"std::vec::Vec<attr::Attribute>","parent":{"krate":0,"index":4217},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4219},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\pat.rs","byte_start":538859,"byte_end":538872,"line_start":228,"line_end":228,"column_start":13,"column_end":26},"name":"bracket_token","qualname":"::pat::PatSlice::bracket_token","value":"token::Bracket","parent":{"krate":0,"index":4217},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4220},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\pat.rs","byte_start":538902,"byte_end":538907,"line_start":229,"line_end":229,"column_start":13,"column_end":18},"name":"elems","qualname":"::pat::PatSlice::elems","value":"punctuated::Punctuated<pat::Pat, token::Comma>","parent":{"krate":0,"index":4217},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4221},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\pat.rs","byte_start":539185,"byte_end":539194,"line_start":238,"line_end":238,"column_start":16,"column_end":25},"name":"PatStruct","qualname":"::pat::PatStruct","value":"PatStruct { attrs, path, brace_token, fields, dot2_token }","parent":null,"children":[{"krate":0,"index":4222},{"krate":0,"index":4223},{"krate":0,"index":4224},{"krate":0,"index":4225},{"krate":0,"index":4226}],"decl_id":null,"docs":" A struct or struct variant pattern: `Variant { x, y, .. }`.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4222},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\pat.rs","byte_start":539209,"byte_end":539214,"line_start":239,"line_end":239,"column_start":13,"column_end":18},"name":"attrs","qualname":"::pat::PatStruct::attrs","value":"std::vec::Vec<attr::Attribute>","parent":{"krate":0,"index":4221},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4223},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\pat.rs","byte_start":539244,"byte_end":539248,"line_start":240,"line_end":240,"column_start":13,"column_end":17},"name":"path","qualname":"::pat::PatStruct::path","value":"path::Path","parent":{"krate":0,"index":4221},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4224},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\pat.rs","byte_start":539268,"byte_end":539279,"line_start":241,"line_end":241,"column_start":13,"column_end":24},"name":"brace_token","qualname":"::pat::PatStruct::brace_token","value":"token::Brace","parent":{"krate":0,"index":4221},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4225},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\pat.rs","byte_start":539307,"byte_end":539313,"line_start":242,"line_end":242,"column_start":13,"column_end":19},"name":"fields","qualname":"::pat::PatStruct::fields","value":"punctuated::Punctuated<pat::FieldPat, token::Comma>","parent":{"krate":0,"index":4221},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4226},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\pat.rs","byte_start":539360,"byte_end":539370,"line_start":243,"line_end":243,"column_start":13,"column_end":23},"name":"dot2_token","qualname":"::pat::PatStruct::dot2_token","value":"std::option::Option<token::Dot2>","parent":{"krate":0,"index":4221},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4227},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\pat.rs","byte_start":539607,"byte_end":539615,"line_start":252,"line_end":252,"column_start":16,"column_end":24},"name":"PatTuple","qualname":"::pat::PatTuple","value":"PatTuple { attrs, paren_token, elems }","parent":null,"children":[{"krate":0,"index":4228},{"krate":0,"index":4229},{"krate":0,"index":4230}],"decl_id":null,"docs":" A tuple pattern: `(a, b)`.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4228},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\pat.rs","byte_start":539630,"byte_end":539635,"line_start":253,"line_end":253,"column_start":13,"column_end":18},"name":"attrs","qualname":"::pat::PatTuple::attrs","value":"std::vec::Vec<attr::Attribute>","parent":{"krate":0,"index":4227},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4229},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\pat.rs","byte_start":539665,"byte_end":539676,"line_start":254,"line_end":254,"column_start":13,"column_end":24},"name":"paren_token","qualname":"::pat::PatTuple::paren_token","value":"token::Paren","parent":{"krate":0,"index":4227},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4230},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\pat.rs","byte_start":539704,"byte_end":539709,"line_start":255,"line_end":255,"column_start":13,"column_end":18},"name":"elems","qualname":"::pat::PatTuple::elems","value":"punctuated::Punctuated<pat::Pat, token::Comma>","parent":{"krate":0,"index":4227},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4231},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\pat.rs","byte_start":539992,"byte_end":540006,"line_start":264,"line_end":264,"column_start":16,"column_end":30},"name":"PatTupleStruct","qualname":"::pat::PatTupleStruct","value":"PatTupleStruct { attrs, path, pat }","parent":null,"children":[{"krate":0,"index":4232},{"krate":0,"index":4233},{"krate":0,"index":4234}],"decl_id":null,"docs":" A tuple struct or tuple variant pattern: `Variant(x, y, .., z)`.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4232},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\pat.rs","byte_start":540021,"byte_end":540026,"line_start":265,"line_end":265,"column_start":13,"column_end":18},"name":"attrs","qualname":"::pat::PatTupleStruct::attrs","value":"std::vec::Vec<attr::Attribute>","parent":{"krate":0,"index":4231},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4233},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\pat.rs","byte_start":540056,"byte_end":540060,"line_start":266,"line_end":266,"column_start":13,"column_end":17},"name":"path","qualname":"::pat::PatTupleStruct::path","value":"path::Path","parent":{"krate":0,"index":4231},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4234},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\pat.rs","byte_start":540080,"byte_end":540083,"line_start":267,"line_end":267,"column_start":13,"column_end":16},"name":"pat","qualname":"::pat::PatTupleStruct::pat","value":"pat::PatTuple","parent":{"krate":0,"index":4231},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4235},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\pat.rs","byte_start":540322,"byte_end":540329,"line_start":276,"line_end":276,"column_start":16,"column_end":23},"name":"PatType","qualname":"::pat::PatType","value":"PatType { attrs, pat, colon_token, ty }","parent":null,"children":[{"krate":0,"index":4236},{"krate":0,"index":4237},{"krate":0,"index":4238},{"krate":0,"index":4239}],"decl_id":null,"docs":" A type ascription pattern: `foo: f64`.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4236},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\pat.rs","byte_start":540344,"byte_end":540349,"line_start":277,"line_end":277,"column_start":13,"column_end":18},"name":"attrs","qualname":"::pat::PatType::attrs","value":"std::vec::Vec<attr::Attribute>","parent":{"krate":0,"index":4235},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4237},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\pat.rs","byte_start":540379,"byte_end":540382,"line_start":278,"line_end":278,"column_start":13,"column_end":16},"name":"pat","qualname":"::pat::PatType::pat","value":"std::boxed::Box<pat::Pat>","parent":{"krate":0,"index":4235},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4238},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\pat.rs","byte_start":540406,"byte_end":540417,"line_start":279,"line_end":279,"column_start":13,"column_end":24},"name":"colon_token","qualname":"::pat::PatType::colon_token","value":"token::Colon","parent":{"krate":0,"index":4235},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4239},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\pat.rs","byte_start":540442,"byte_end":540444,"line_start":280,"line_end":280,"column_start":13,"column_end":15},"name":"ty","qualname":"::pat::PatType::ty","value":"std::boxed::Box<ty::Type>","parent":{"krate":0,"index":4235},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4240},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\pat.rs","byte_start":540684,"byte_end":540691,"line_start":289,"line_end":289,"column_start":16,"column_end":23},"name":"PatWild","qualname":"::pat::PatWild","value":"PatWild { attrs, underscore_token }","parent":null,"children":[{"krate":0,"index":4241},{"krate":0,"index":4242}],"decl_id":null,"docs":" A pattern that matches any value: `_`.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4241},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\pat.rs","byte_start":540706,"byte_end":540711,"line_start":290,"line_end":290,"column_start":13,"column_end":18},"name":"attrs","qualname":"::pat::PatWild::attrs","value":"std::vec::Vec<attr::Attribute>","parent":{"krate":0,"index":4240},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4242},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\pat.rs","byte_start":540741,"byte_end":540757,"line_start":291,"line_end":291,"column_start":13,"column_end":29},"name":"underscore_token","qualname":"::pat::PatWild::underscore_token","value":"token::Underscore","parent":{"krate":0,"index":4240},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4243},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\pat.rs","byte_start":541160,"byte_end":541168,"line_start":303,"line_end":303,"column_start":16,"column_end":24},"name":"FieldPat","qualname":"::pat::FieldPat","value":"FieldPat { attrs, member, colon_token, pat }","parent":null,"children":[{"krate":0,"index":4244},{"krate":0,"index":4245},{"krate":0,"index":4246},{"krate":0,"index":4247}],"decl_id":null,"docs":" A single field in a struct pattern.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4244},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\pat.rs","byte_start":541183,"byte_end":541188,"line_start":304,"line_end":304,"column_start":13,"column_end":18},"name":"attrs","qualname":"::pat::FieldPat::attrs","value":"std::vec::Vec<attr::Attribute>","parent":{"krate":0,"index":4243},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4245},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\pat.rs","byte_start":541218,"byte_end":541224,"line_start":305,"line_end":305,"column_start":13,"column_end":19},"name":"member","qualname":"::pat::FieldPat::member","value":"expr::Member","parent":{"krate":0,"index":4243},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4246},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\pat.rs","byte_start":541246,"byte_end":541257,"line_start":306,"line_end":306,"column_start":13,"column_end":24},"name":"colon_token","qualname":"::pat::FieldPat::colon_token","value":"std::option::Option<token::Colon>","parent":{"krate":0,"index":4243},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4247},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\pat.rs","byte_start":541290,"byte_end":541293,"line_start":307,"line_end":307,"column_start":13,"column_end":16},"name":"pat","qualname":"::pat::FieldPat::pat","value":"std::boxed::Box<pat::Pat>","parent":{"krate":0,"index":4243},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4248},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\path.rs","byte_start":561843,"byte_end":561847,"line_start":10,"line_end":10,"column_start":16,"column_end":20},"name":"Path","qualname":"::path::Path","value":"Path { leading_colon, segments }","parent":null,"children":[{"krate":0,"index":4249},{"krate":0,"index":4250}],"decl_id":null,"docs":" A path at which a named item is exported (e.g. `std::collections::HashMap`).","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4249},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\path.rs","byte_start":561862,"byte_end":561875,"line_start":11,"line_end":11,"column_start":13,"column_end":26},"name":"leading_colon","qualname":"::path::Path::leading_colon","value":"std::option::Option<token::Colon2>","parent":{"krate":0,"index":4248},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4250},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\path.rs","byte_start":561909,"byte_end":561917,"line_start":12,"line_end":12,"column_start":13,"column_end":21},"name":"segments","qualname":"::path::Path::segments","value":"punctuated::Punctuated<path::PathSegment, token::Colon2>","parent":{"krate":0,"index":4248},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1053},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\path.rs","byte_start":562031,"byte_end":562035,"line_start":20,"line_end":20,"column_start":8,"column_end":12},"name":"from","qualname":"<Path as std::convert::From>::from","value":"fn from(T) -> Self","parent":{"krate":2,"index":3085},"children":[],"decl_id":{"krate":2,"index":3087},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4251},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\path.rs","byte_start":562541,"byte_end":562552,"line_start":36,"line_end":36,"column_start":16,"column_end":27},"name":"PathSegment","qualname":"::path::PathSegment","value":"PathSegment { ident, arguments }","parent":null,"children":[{"krate":0,"index":4252},{"krate":0,"index":4253}],"decl_id":null,"docs":" A segment of a path together with any path arguments on that segment.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4252},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\path.rs","byte_start":562567,"byte_end":562572,"line_start":37,"line_end":37,"column_start":13,"column_end":18},"name":"ident","qualname":"::path::PathSegment::ident","value":"proc_macro2::Ident","parent":{"krate":0,"index":4251},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4253},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\path.rs","byte_start":562593,"byte_end":562602,"line_start":38,"line_end":38,"column_start":13,"column_end":22},"name":"arguments","qualname":"::path::PathSegment::arguments","value":"path::PathArguments","parent":{"krate":0,"index":4251},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1056},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\path.rs","byte_start":562695,"byte_end":562699,"line_start":46,"line_end":46,"column_start":8,"column_end":12},"name":"from","qualname":"<PathSegment as std::convert::From>::from","value":"fn from(T) -> Self","parent":{"krate":2,"index":3085},"children":[],"decl_id":{"krate":2,"index":3087},"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4255},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\path.rs","byte_start":563328,"byte_end":563332,"line_start":69,"line_end":69,"column_start":9,"column_end":13},"name":"None","qualname":"::path::PathArguments::None","value":"PathArguments::None","parent":{"krate":0,"index":4254},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4257},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\path.rs","byte_start":563398,"byte_end":563412,"line_start":71,"line_end":71,"column_start":9,"column_end":23},"name":"AngleBracketed","qualname":"::path::PathArguments::AngleBracketed","value":"PathArguments::AngleBracketed(AngleBracketedGenericArguments)","parent":{"krate":0,"index":4254},"children":[],"decl_id":null,"docs":" The `<'a, T>` in `std::slice::iter<'a, T>`.\n","sig":null,"attributes":[{"value":"/ The `<'a, T>` in `std::slice::iter<'a, T>`.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\path.rs","byte_start":563342,"byte_end":563389,"line_start":70,"line_end":70,"column_start":9,"column_end":56}}]},{"kind":"Field","id":{"krate":0,"index":4259},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\path.rs","byte_start":563413,"byte_end":563443,"line_start":71,"line_end":71,"column_start":24,"column_end":54},"name":"0","qualname":"::path::PathArguments::AngleBracketed::0","value":"path::AngleBracketedGenericArguments","parent":{"krate":0,"index":4257},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4260},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\path.rs","byte_start":563504,"byte_end":563517,"line_start":73,"line_end":73,"column_start":9,"column_end":22},"name":"Parenthesized","qualname":"::path::PathArguments::Parenthesized","value":"PathArguments::Parenthesized(ParenthesizedGenericArguments)","parent":{"krate":0,"index":4254},"children":[],"decl_id":null,"docs":" The `(A, B) -> C` in `Fn(A, B) -> C`.\n","sig":null,"attributes":[{"value":"/ The `(A, B) -> C` in `Fn(A, B) -> C`.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\path.rs","byte_start":563454,"byte_end":563495,"line_start":72,"line_end":72,"column_start":9,"column_end":50}}]},{"kind":"Field","id":{"krate":0,"index":4262},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\path.rs","byte_start":563518,"byte_end":563547,"line_start":73,"line_end":73,"column_start":23,"column_end":52},"name":"0","qualname":"::path::PathArguments::Parenthesized::0","value":"path::ParenthesizedGenericArguments","parent":{"krate":0,"index":4260},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":4254},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\path.rs","byte_start":563304,"byte_end":563317,"line_start":68,"line_end":68,"column_start":14,"column_end":27},"name":"PathArguments","qualname":"::path::PathArguments","value":"enum PathArguments {\n    None,\n    AngleBracketed(AngleBracketedGenericArguments),\n    Parenthesized(ParenthesizedGenericArguments),\n}","parent":null,"children":[{"krate":0,"index":4255},{"krate":0,"index":4257},{"krate":0,"index":4260}],"decl_id":null,"docs":" Angle bracketed or parenthesized arguments of a path segment.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1058},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\path.rs","byte_start":563599,"byte_end":563606,"line_start":78,"line_end":78,"column_start":8,"column_end":15},"name":"default","qualname":"<PathArguments as std::default::Default>::default","value":"fn default() -> Self","parent":{"krate":2,"index":3157},"children":[],"decl_id":{"krate":2,"index":3158},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1060},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\path.rs","byte_start":563688,"byte_end":563696,"line_start":84,"line_end":84,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<PathArguments>::is_empty","value":"fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4264},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\path.rs","byte_start":564509,"byte_end":564517,"line_start":109,"line_end":109,"column_start":9,"column_end":17},"name":"Lifetime","qualname":"::path::GenericArgument::Lifetime","value":"GenericArgument::Lifetime(Lifetime)","parent":{"krate":0,"index":4263},"children":[],"decl_id":null,"docs":" A lifetime argument.\n","sig":null,"attributes":[{"value":"/ A lifetime argument.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\path.rs","byte_start":564476,"byte_end":564500,"line_start":108,"line_end":108,"column_start":9,"column_end":33}}]},{"kind":"Field","id":{"krate":0,"index":4266},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\path.rs","byte_start":564518,"byte_end":564526,"line_start":109,"line_end":109,"column_start":18,"column_end":26},"name":"0","qualname":"::path::GenericArgument::Lifetime::0","value":"lifetime::Lifetime","parent":{"krate":0,"index":4264},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4267},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\path.rs","byte_start":564566,"byte_end":564570,"line_start":111,"line_end":111,"column_start":9,"column_end":13},"name":"Type","qualname":"::path::GenericArgument::Type","value":"GenericArgument::Type(Type)","parent":{"krate":0,"index":4263},"children":[],"decl_id":null,"docs":" A type argument.\n","sig":null,"attributes":[{"value":"/ A type argument.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\path.rs","byte_start":564537,"byte_end":564557,"line_start":110,"line_end":110,"column_start":9,"column_end":29}}]},{"kind":"Field","id":{"krate":0,"index":4269},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\path.rs","byte_start":564571,"byte_end":564575,"line_start":111,"line_end":111,"column_start":14,"column_end":18},"name":"0","qualname":"::path::GenericArgument::Type::0","value":"ty::Type","parent":{"krate":0,"index":4267},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4270},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\path.rs","byte_start":564707,"byte_end":564714,"line_start":114,"line_end":114,"column_start":9,"column_end":16},"name":"Binding","qualname":"::path::GenericArgument::Binding","value":"GenericArgument::Binding(Binding)","parent":{"krate":0,"index":4263},"children":[],"decl_id":null,"docs":" A binding (equality constraint) on an associated type: the `Item =\n u8` in `Iterator<Item = u8>`.\n","sig":null,"attributes":[{"value":"/ A binding (equality constraint) on an associated type: the `Item =","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\path.rs","byte_start":564586,"byte_end":564656,"line_start":112,"line_end":112,"column_start":9,"column_end":79}},{"value":"/ u8` in `Iterator<Item = u8>`.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\path.rs","byte_start":564665,"byte_end":564698,"line_start":113,"line_end":113,"column_start":9,"column_end":42}}]},{"kind":"Field","id":{"krate":0,"index":4272},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\path.rs","byte_start":564715,"byte_end":564722,"line_start":114,"line_end":114,"column_start":17,"column_end":24},"name":"0","qualname":"::path::GenericArgument::Binding::0","value":"path::Binding","parent":{"krate":0,"index":4270},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4273},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\path.rs","byte_start":564798,"byte_end":564808,"line_start":116,"line_end":116,"column_start":9,"column_end":19},"name":"Constraint","qualname":"::path::GenericArgument::Constraint","value":"GenericArgument::Constraint(Constraint)","parent":{"krate":0,"index":4263},"children":[],"decl_id":null,"docs":" An associated type bound: `Iterator<Item: Display>`.\n","sig":null,"attributes":[{"value":"/ An associated type bound: `Iterator<Item: Display>`.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\path.rs","byte_start":564733,"byte_end":564789,"line_start":115,"line_end":115,"column_start":9,"column_end":65}}]},{"kind":"Field","id":{"krate":0,"index":4275},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\path.rs","byte_start":564809,"byte_end":564819,"line_start":116,"line_end":116,"column_start":20,"column_end":30},"name":"0","qualname":"::path::GenericArgument::Constraint::0","value":"path::Constraint","parent":{"krate":0,"index":4273},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4276},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\path.rs","byte_start":565032,"byte_end":565037,"line_start":121,"line_end":121,"column_start":9,"column_end":14},"name":"Const","qualname":"::path::GenericArgument::Const","value":"GenericArgument::Const(Expr)","parent":{"krate":0,"index":4263},"children":[],"decl_id":null,"docs":" A const expression. Must be inside of a block.","sig":null,"attributes":[{"value":"/ A const expression. Must be inside of a block.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\path.rs","byte_start":564830,"byte_end":564880,"line_start":117,"line_end":117,"column_start":9,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\path.rs","byte_start":564889,"byte_end":564892,"line_start":118,"line_end":118,"column_start":9,"column_end":12}},{"value":"/ NOTE: Identity expressions are represented as Type arguments, as","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\path.rs","byte_start":564901,"byte_end":564969,"line_start":119,"line_end":119,"column_start":9,"column_end":77}},{"value":"/ they are indistinguishable syntactically.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\path.rs","byte_start":564978,"byte_end":565023,"line_start":120,"line_end":120,"column_start":9,"column_end":54}}]},{"kind":"Field","id":{"krate":0,"index":4278},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\path.rs","byte_start":565038,"byte_end":565042,"line_start":121,"line_end":121,"column_start":15,"column_end":19},"name":"0","qualname":"::path::GenericArgument::Const::0","value":"expr::Expr","parent":{"krate":0,"index":4276},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":4263},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\path.rs","byte_start":564450,"byte_end":564465,"line_start":107,"line_end":107,"column_start":14,"column_end":29},"name":"GenericArgument","qualname":"::path::GenericArgument","value":"enum GenericArgument {\n    Lifetime(Lifetime),\n    Type(Type),\n    Binding(Binding),\n    Constraint(Constraint),\n    Const(Expr),\n}","parent":null,"children":[{"krate":0,"index":4264},{"krate":0,"index":4267},{"krate":0,"index":4270},{"krate":0,"index":4273},{"krate":0,"index":4276}],"decl_id":null,"docs":" An individual generic argument, like `'a`, `T`, or `Item = T`.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4279},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\path.rs","byte_start":565366,"byte_end":565396,"line_start":132,"line_end":132,"column_start":16,"column_end":46},"name":"AngleBracketedGenericArguments","qualname":"::path::AngleBracketedGenericArguments","value":"AngleBracketedGenericArguments { colon2_token, lt_token, args, gt_token }","parent":null,"children":[{"krate":0,"index":4280},{"krate":0,"index":4281},{"krate":0,"index":4282},{"krate":0,"index":4283}],"decl_id":null,"docs":" Angle bracketed arguments of a path segment: the `<K, V>` in `HashMap<K,\n V>`.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4280},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\path.rs","byte_start":565411,"byte_end":565423,"line_start":133,"line_end":133,"column_start":13,"column_end":25},"name":"colon2_token","qualname":"::path::AngleBracketedGenericArguments::colon2_token","value":"std::option::Option<token::Colon2>","parent":{"krate":0,"index":4279},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4281},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\path.rs","byte_start":565457,"byte_end":565465,"line_start":134,"line_end":134,"column_start":13,"column_end":21},"name":"lt_token","qualname":"::path::AngleBracketedGenericArguments::lt_token","value":"token::Lt","parent":{"krate":0,"index":4279},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4282},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\path.rs","byte_start":565490,"byte_end":565494,"line_start":135,"line_end":135,"column_start":13,"column_end":17},"name":"args","qualname":"::path::AngleBracketedGenericArguments::args","value":"punctuated::Punctuated<path::GenericArgument, token::Comma>","parent":{"krate":0,"index":4279},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4283},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\path.rs","byte_start":565548,"byte_end":565556,"line_start":136,"line_end":136,"column_start":13,"column_end":21},"name":"gt_token","qualname":"::path::AngleBracketedGenericArguments::gt_token","value":"token::Gt","parent":{"krate":0,"index":4279},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4284},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\path.rs","byte_start":565872,"byte_end":565879,"line_start":146,"line_end":146,"column_start":16,"column_end":23},"name":"Binding","qualname":"::path::Binding","value":"Binding { ident, eq_token, ty }","parent":null,"children":[{"krate":0,"index":4285},{"krate":0,"index":4286},{"krate":0,"index":4287}],"decl_id":null,"docs":" A binding (equality constraint) on an associated type: `Item = u8`.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4285},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\path.rs","byte_start":565894,"byte_end":565899,"line_start":147,"line_end":147,"column_start":13,"column_end":18},"name":"ident","qualname":"::path::Binding::ident","value":"proc_macro2::Ident","parent":{"krate":0,"index":4284},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4286},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\path.rs","byte_start":565920,"byte_end":565928,"line_start":148,"line_end":148,"column_start":13,"column_end":21},"name":"eq_token","qualname":"::path::Binding::eq_token","value":"token::Eq","parent":{"krate":0,"index":4284},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4287},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\path.rs","byte_start":565953,"byte_end":565955,"line_start":149,"line_end":149,"column_start":13,"column_end":15},"name":"ty","qualname":"::path::Binding::ty","value":"ty::Type","parent":{"krate":0,"index":4284},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4288},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\path.rs","byte_start":566251,"byte_end":566261,"line_start":159,"line_end":159,"column_start":16,"column_end":26},"name":"Constraint","qualname":"::path::Constraint","value":"Constraint { ident, colon_token, bounds }","parent":null,"children":[{"krate":0,"index":4289},{"krate":0,"index":4290},{"krate":0,"index":4291}],"decl_id":null,"docs":" An associated type bound: `Iterator<Item: Display>`.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4289},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\path.rs","byte_start":566276,"byte_end":566281,"line_start":160,"line_end":160,"column_start":13,"column_end":18},"name":"ident","qualname":"::path::Constraint::ident","value":"proc_macro2::Ident","parent":{"krate":0,"index":4288},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4290},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\path.rs","byte_start":566302,"byte_end":566313,"line_start":161,"line_end":161,"column_start":13,"column_end":24},"name":"colon_token","qualname":"::path::Constraint::colon_token","value":"token::Colon","parent":{"krate":0,"index":4288},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4291},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\path.rs","byte_start":566338,"byte_end":566344,"line_start":162,"line_end":162,"column_start":13,"column_end":19},"name":"bounds","qualname":"::path::Constraint::bounds","value":"punctuated::Punctuated<generics::TypeParamBound, token::Add>","parent":{"krate":0,"index":4288},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4292},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\path.rs","byte_start":566703,"byte_end":566732,"line_start":173,"line_end":173,"column_start":16,"column_end":45},"name":"ParenthesizedGenericArguments","qualname":"::path::ParenthesizedGenericArguments","value":"ParenthesizedGenericArguments { paren_token, inputs, output }","parent":null,"children":[{"krate":0,"index":4293},{"krate":0,"index":4294},{"krate":0,"index":4295}],"decl_id":null,"docs":" Arguments of a function path segment: the `(A, B) -> C` in `Fn(A,B) ->\n C`.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4293},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\path.rs","byte_start":566747,"byte_end":566758,"line_start":174,"line_end":174,"column_start":13,"column_end":24},"name":"paren_token","qualname":"::path::ParenthesizedGenericArguments::paren_token","value":"token::Paren","parent":{"krate":0,"index":4292},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4294},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\path.rs","byte_start":566807,"byte_end":566813,"line_start":176,"line_end":176,"column_start":13,"column_end":19},"name":"inputs","qualname":"::path::ParenthesizedGenericArguments::inputs","value":"punctuated::Punctuated<ty::Type, token::Comma>","parent":{"krate":0,"index":4292},"children":[],"decl_id":null,"docs":" `(A, B)`\n","sig":null,"attributes":[{"value":"/ `(A, B)`","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\path.rs","byte_start":566782,"byte_end":566794,"line_start":175,"line_end":175,"column_start":9,"column_end":21}}]},{"kind":"Field","id":{"krate":0,"index":4295},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\path.rs","byte_start":566872,"byte_end":566878,"line_start":178,"line_end":178,"column_start":13,"column_end":19},"name":"output","qualname":"::path::ParenthesizedGenericArguments::output","value":"ty::ReturnType","parent":{"krate":0,"index":4292},"children":[],"decl_id":null,"docs":" `C`\n","sig":null,"attributes":[{"value":"/ `C`","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\path.rs","byte_start":566852,"byte_end":566859,"line_start":177,"line_end":177,"column_start":9,"column_end":16}}]},{"kind":"Struct","id":{"krate":0,"index":4296},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\path.rs","byte_start":567668,"byte_end":567673,"line_start":203,"line_end":203,"column_start":16,"column_end":21},"name":"QSelf","qualname":"::path::QSelf","value":"QSelf { lt_token, ty, position, as_token, gt_token }","parent":null,"children":[{"krate":0,"index":4297},{"krate":0,"index":4298},{"krate":0,"index":4299},{"krate":0,"index":4300},{"krate":0,"index":4301}],"decl_id":null,"docs":" The explicit Self type in a qualified path: the `T` in `<T as\n Display>::fmt`.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4297},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\path.rs","byte_start":567688,"byte_end":567696,"line_start":204,"line_end":204,"column_start":13,"column_end":21},"name":"lt_token","qualname":"::path::QSelf::lt_token","value":"token::Lt","parent":{"krate":0,"index":4296},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4298},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\path.rs","byte_start":567721,"byte_end":567723,"line_start":205,"line_end":205,"column_start":13,"column_end":15},"name":"ty","qualname":"::path::QSelf::ty","value":"std::boxed::Box<ty::Type>","parent":{"krate":0,"index":4296},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4299},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\path.rs","byte_start":567748,"byte_end":567756,"line_start":206,"line_end":206,"column_start":13,"column_end":21},"name":"position","qualname":"::path::QSelf::position","value":"usize","parent":{"krate":0,"index":4296},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4300},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\path.rs","byte_start":567777,"byte_end":567785,"line_start":207,"line_end":207,"column_start":13,"column_end":21},"name":"as_token","qualname":"::path::QSelf::as_token","value":"std::option::Option<token::As>","parent":{"krate":0,"index":4296},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4301},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\path.rs","byte_start":567819,"byte_end":567827,"line_start":208,"line_end":208,"column_start":13,"column_end":21},"name":"gt_token","qualname":"::path::QSelf::gt_token","value":"token::Gt","parent":{"krate":0,"index":4296},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":1089},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\punctuated.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"punctuated","qualname":"::punctuated","value":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\punctuated.rs","parent":null,"children":[{"krate":0,"index":1090},{"krate":0,"index":1093},{"krate":0,"index":1096},{"krate":0,"index":1097},{"krate":0,"index":1100},{"krate":0,"index":1103},{"krate":0,"index":1106},{"krate":0,"index":1109},{"krate":0,"index":1110},{"krate":0,"index":1112},{"krate":0,"index":1117},{"krate":0,"index":1143},{"krate":0,"index":1148},{"krate":0,"index":1153},{"krate":0,"index":1158},{"krate":0,"index":1163},{"krate":0,"index":1171},{"krate":0,"index":1178},{"krate":0,"index":1185},{"krate":0,"index":1189},{"krate":0,"index":1195},{"krate":0,"index":1204},{"krate":0,"index":1211},{"krate":0,"index":1216},{"krate":0,"index":1221},{"krate":0,"index":1227},{"krate":0,"index":1236},{"krate":0,"index":1243},{"krate":0,"index":1248},{"krate":0,"index":1253},{"krate":0,"index":1261},{"krate":0,"index":1267},{"krate":0,"index":1271},{"krate":0,"index":1275},{"krate":0,"index":1278},{"krate":0,"index":1283},{"krate":0,"index":1286},{"krate":0,"index":1289},{"krate":0,"index":1292},{"krate":0,"index":1296},{"krate":0,"index":1300},{"krate":0,"index":1306},{"krate":0,"index":1309},{"krate":0,"index":1313},{"krate":0,"index":1319},{"krate":0,"index":1323},{"krate":0,"index":1327},{"krate":0,"index":1335},{"krate":0,"index":1342},{"krate":0,"index":1347},{"krate":0,"index":1352},{"krate":0,"index":1357},{"krate":0,"index":1361},{"krate":0,"index":1364},{"krate":0,"index":1370},{"krate":0,"index":1373},{"krate":0,"index":1379},{"krate":0,"index":1383},{"krate":0,"index":1387},{"krate":0,"index":1395},{"krate":0,"index":1402},{"krate":0,"index":1407},{"krate":0,"index":1411},{"krate":0,"index":1421},{"krate":0,"index":1431},{"krate":0,"index":1436}],"decl_id":null,"docs":" A punctuated sequence of syntax tree nodes separated by punctuation.","sig":null,"attributes":[{"value":"/ A punctuated sequence of syntax tree nodes separated by punctuation.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\punctuated.rs","byte_start":591323,"byte_end":591395,"line_start":1,"line_end":1,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\punctuated.rs","byte_start":591396,"byte_end":591399,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ Lots of things in Rust are punctuated sequences.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\punctuated.rs","byte_start":591400,"byte_end":591452,"line_start":3,"line_end":3,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\punctuated.rs","byte_start":591453,"byte_end":591456,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ - The fields of a struct are `Punctuated<Field, Token![,]>`.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\punctuated.rs","byte_start":591457,"byte_end":591521,"line_start":5,"line_end":5,"column_start":1,"column_end":65}},{"value":"/ - The segments of a path are `Punctuated<PathSegment, Token![::]>`.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\punctuated.rs","byte_start":591522,"byte_end":591593,"line_start":6,"line_end":6,"column_start":1,"column_end":72}},{"value":"/ - The bounds on a generic parameter are `Punctuated<TypeParamBound,","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\punctuated.rs","byte_start":591594,"byte_end":591665,"line_start":7,"line_end":7,"column_start":1,"column_end":72}},{"value":"/   Token![+]>`.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\punctuated.rs","byte_start":591666,"byte_end":591684,"line_start":8,"line_end":8,"column_start":1,"column_end":19}},{"value":"/ - The arguments to a function call are `Punctuated<Expr, Token![,]>`.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\punctuated.rs","byte_start":591685,"byte_end":591758,"line_start":9,"line_end":9,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\punctuated.rs","byte_start":591759,"byte_end":591762,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ This module provides a common representation for these punctuated sequences","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\punctuated.rs","byte_start":591763,"byte_end":591842,"line_start":11,"line_end":11,"column_start":1,"column_end":80}},{"value":"/ in the form of the [`Punctuated<T, P>`] type. We store a vector of pairs of","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\punctuated.rs","byte_start":591843,"byte_end":591922,"line_start":12,"line_end":12,"column_start":1,"column_end":80}},{"value":"/ syntax tree node + punctuation, where every node in the sequence is followed","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\punctuated.rs","byte_start":591923,"byte_end":592003,"line_start":13,"line_end":13,"column_start":1,"column_end":81}},{"value":"/ by punctuation except for possibly the final one.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\punctuated.rs","byte_start":592004,"byte_end":592057,"line_start":14,"line_end":14,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\punctuated.rs","byte_start":592058,"byte_end":592061,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ [`Punctuated<T, P>`]: Punctuated","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\punctuated.rs","byte_start":592062,"byte_end":592098,"line_start":16,"line_end":16,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\punctuated.rs","byte_start":592099,"byte_end":592102,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\punctuated.rs","byte_start":592103,"byte_end":592114,"line_start":18,"line_end":18,"column_start":1,"column_end":12}},{"value":"/ a_function_call(arg1, arg2, arg3);","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\punctuated.rs","byte_start":592115,"byte_end":592153,"line_start":19,"line_end":19,"column_start":1,"column_end":39}},{"value":"/                 ~~~~^ ~~~~^ ~~~~","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\punctuated.rs","byte_start":592154,"byte_end":592190,"line_start":20,"line_end":20,"column_start":1,"column_end":37}},{"value":"/ ```","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\punctuated.rs","byte_start":592191,"byte_end":592198,"line_start":21,"line_end":21,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":1112},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\punctuated.rs","byte_start":592864,"byte_end":592874,"line_start":46,"line_end":46,"column_start":12,"column_end":22},"name":"Punctuated","qualname":"::punctuated::Punctuated","value":"Punctuated {  }","parent":null,"children":[{"krate":0,"index":1115},{"krate":0,"index":1116}],"decl_id":null,"docs":" A punctuated sequence of syntax tree nodes of type `T` separated by\n punctuation of type `P`.","sig":null,"attributes":[{"value":"/ A punctuated sequence of syntax tree nodes of type `T` separated by","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\punctuated.rs","byte_start":592631,"byte_end":592702,"line_start":40,"line_end":40,"column_start":1,"column_end":72}},{"value":"/ punctuation of type `P`.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\punctuated.rs","byte_start":592703,"byte_end":592731,"line_start":41,"line_end":41,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\punctuated.rs","byte_start":592732,"byte_end":592735,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ Refer to the [module documentation] for details about punctuated sequences.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\punctuated.rs","byte_start":592736,"byte_end":592815,"line_start":43,"line_end":43,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\punctuated.rs","byte_start":592816,"byte_end":592819,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ [module documentation]: self","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\punctuated.rs","byte_start":592820,"byte_end":592852,"line_start":45,"line_end":45,"column_start":1,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":1120},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\punctuated.rs","byte_start":593067,"byte_end":593070,"line_start":54,"line_end":54,"column_start":18,"column_end":21},"name":"new","qualname":"<Punctuated<T, P>>::new","value":"const fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates an empty punctuated sequence.\n","sig":null,"attributes":[{"value":"/ Creates an empty punctuated sequence.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\punctuated.rs","byte_start":592970,"byte_end":593011,"line_start":52,"line_end":52,"column_start":5,"column_end":46}},{"value":"cfg(not(syn_no_const_vec_new))","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\punctuated.rs","byte_start":593016,"byte_end":593049,"line_start":53,"line_end":53,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":1121},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\punctuated.rs","byte_start":593513,"byte_end":593521,"line_start":72,"line_end":72,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<Punctuated<T, P>>::is_empty","value":"fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Determines whether this punctuated sequence is empty, meaning it\n contains no syntax tree nodes or punctuation.\n","sig":null,"attributes":[{"value":"/ Determines whether this punctuated sequence is empty, meaning it","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\punctuated.rs","byte_start":593379,"byte_end":593447,"line_start":70,"line_end":70,"column_start":5,"column_end":73}},{"value":"/ contains no syntax tree nodes or punctuation.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\punctuated.rs","byte_start":593452,"byte_end":593501,"line_start":71,"line_end":71,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":1122},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\punctuated.rs","byte_start":593794,"byte_end":593797,"line_start":80,"line_end":80,"column_start":12,"column_end":15},"name":"len","qualname":"<Punctuated<T, P>>::len","value":"fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of syntax tree nodes in this punctuated sequence.","sig":null,"attributes":[{"value":"/ Returns the number of syntax tree nodes in this punctuated sequence.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\punctuated.rs","byte_start":593603,"byte_end":593675,"line_start":76,"line_end":76,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\punctuated.rs","byte_start":593680,"byte_end":593683,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ This is the number of nodes of type `T`, not counting the punctuation of","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\punctuated.rs","byte_start":593688,"byte_end":593764,"line_start":78,"line_end":78,"column_start":5,"column_end":81}},{"value":"/ type `P`.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\punctuated.rs","byte_start":593769,"byte_end":593782,"line_start":79,"line_end":79,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":1123},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\punctuated.rs","byte_start":593953,"byte_end":593958,"line_start":85,"line_end":85,"column_start":12,"column_end":17},"name":"first","qualname":"<Punctuated<T, P>>::first","value":"fn first(&Self) -> Option<&T>","parent":null,"children":[],"decl_id":null,"docs":" Borrows the first element in this sequence.\n","sig":null,"attributes":[{"value":"/ Borrows the first element in this sequence.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\punctuated.rs","byte_start":593894,"byte_end":593941,"line_start":84,"line_end":84,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":1124},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\punctuated.rs","byte_start":594087,"byte_end":594096,"line_start":90,"line_end":90,"column_start":12,"column_end":21},"name":"first_mut","qualname":"<Punctuated<T, P>>::first_mut","value":"fn first_mut(&mut Self) -> Option<&mut T>","parent":null,"children":[],"decl_id":null,"docs":" Mutably borrows the first element in this sequence.\n","sig":null,"attributes":[{"value":"/ Mutably borrows the first element in this sequence.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\punctuated.rs","byte_start":594020,"byte_end":594075,"line_start":89,"line_end":89,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1125},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\punctuated.rs","byte_start":594228,"byte_end":594232,"line_start":95,"line_end":95,"column_start":12,"column_end":16},"name":"last","qualname":"<Punctuated<T, P>>::last","value":"fn last(&Self) -> Option<&T>","parent":null,"children":[],"decl_id":null,"docs":" Borrows the last element in this sequence.\n","sig":null,"attributes":[{"value":"/ Borrows the last element in this sequence.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\punctuated.rs","byte_start":594170,"byte_end":594216,"line_start":94,"line_end":94,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":1126},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\punctuated.rs","byte_start":594365,"byte_end":594373,"line_start":100,"line_end":100,"column_start":12,"column_end":20},"name":"last_mut","qualname":"<Punctuated<T, P>>::last_mut","value":"fn last_mut(&mut Self) -> Option<&mut T>","parent":null,"children":[],"decl_id":null,"docs":" Mutably borrows the last element in this sequence.\n","sig":null,"attributes":[{"value":"/ Mutably borrows the last element in this sequence.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\punctuated.rs","byte_start":594299,"byte_end":594353,"line_start":99,"line_end":99,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":1127},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\punctuated.rs","byte_start":594533,"byte_end":594537,"line_start":105,"line_end":105,"column_start":12,"column_end":16},"name":"iter","qualname":"<Punctuated<T, P>>::iter","value":"fn iter(&Self) -> Iter<, T>","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over borrowed syntax tree nodes of type `&T`.\n","sig":null,"attributes":[{"value":"/ Returns an iterator over borrowed syntax tree nodes of type `&T`.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\punctuated.rs","byte_start":594452,"byte_end":594521,"line_start":104,"line_end":104,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":1128},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\punctuated.rs","byte_start":594866,"byte_end":594874,"line_start":116,"line_end":116,"column_start":12,"column_end":20},"name":"iter_mut","qualname":"<Punctuated<T, P>>::iter_mut","value":"fn iter_mut(&mut Self) -> IterMut<, T>","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over mutably borrowed syntax tree nodes of type\n `&mut T`.\n","sig":null,"attributes":[{"value":"/ Returns an iterator over mutably borrowed syntax tree nodes of type","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\punctuated.rs","byte_start":594765,"byte_end":594836,"line_start":114,"line_end":114,"column_start":5,"column_end":76}},{"value":"/ `&mut T`.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\punctuated.rs","byte_start":594841,"byte_end":594854,"line_start":115,"line_end":115,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":1129},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\punctuated.rs","byte_start":595227,"byte_end":595232,"line_start":127,"line_end":127,"column_start":12,"column_end":17},"name":"pairs","qualname":"<Punctuated<T, P>>::pairs","value":"fn pairs(&Self) -> Pairs<, T, P>","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over the contents of this sequence as borrowed\n punctuated pairs.\n","sig":null,"attributes":[{"value":"/ Returns an iterator over the contents of this sequence as borrowed","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\punctuated.rs","byte_start":595119,"byte_end":595189,"line_start":125,"line_end":125,"column_start":5,"column_end":75}},{"value":"/ punctuated pairs.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\punctuated.rs","byte_start":595194,"byte_end":595215,"line_start":126,"line_end":126,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":1130},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\punctuated.rs","byte_start":595515,"byte_end":595524,"line_start":136,"line_end":136,"column_start":12,"column_end":21},"name":"pairs_mut","qualname":"<Punctuated<T, P>>::pairs_mut","value":"fn pairs_mut(&mut Self) -> PairsMut<, T, P>","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over the contents of this sequence as mutably\n borrowed punctuated pairs.\n","sig":null,"attributes":[{"value":"/ Returns an iterator over the contents of this sequence as mutably","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\punctuated.rs","byte_start":595399,"byte_end":595468,"line_start":134,"line_end":134,"column_start":5,"column_end":74}},{"value":"/ borrowed punctuated pairs.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\punctuated.rs","byte_start":595473,"byte_end":595503,"line_start":135,"line_end":135,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":1131},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\punctuated.rs","byte_start":595810,"byte_end":595820,"line_start":145,"line_end":145,"column_start":12,"column_end":22},"name":"into_pairs","qualname":"<Punctuated<T, P>>::into_pairs","value":"fn into_pairs(Self) -> IntoPairs<T, P>","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over the contents of this sequence as owned\n punctuated pairs.\n","sig":null,"attributes":[{"value":"/ Returns an iterator over the contents of this sequence as owned","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\punctuated.rs","byte_start":595705,"byte_end":595772,"line_start":143,"line_end":143,"column_start":5,"column_end":72}},{"value":"/ punctuated pairs.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\punctuated.rs","byte_start":595777,"byte_end":595798,"line_start":144,"line_end":144,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":1133},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\punctuated.rs","byte_start":596445,"byte_end":596455,"line_start":164,"line_end":164,"column_start":12,"column_end":22},"name":"push_value","qualname":"<Punctuated<T, P>>::push_value","value":"fn push_value(&mut Self, T)","parent":null,"children":[],"decl_id":null,"docs":" Appends a syntax tree node onto the end of this punctuated sequence. The\n sequence must previously have a trailing punctuation.","sig":null,"attributes":[{"value":"/ Appends a syntax tree node onto the end of this punctuated sequence. The","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\punctuated.rs","byte_start":595985,"byte_end":596061,"line_start":152,"line_end":152,"column_start":5,"column_end":81}},{"value":"/ sequence must previously have a trailing punctuation.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\punctuated.rs","byte_start":596066,"byte_end":596123,"line_start":153,"line_end":153,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\punctuated.rs","byte_start":596128,"byte_end":596131,"line_start":154,"line_end":154,"column_start":5,"column_end":8}},{"value":"/ Use [`push`] instead if the punctuated sequence may or may not already","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\punctuated.rs","byte_start":596136,"byte_end":596210,"line_start":155,"line_end":155,"column_start":5,"column_end":79}},{"value":"/ have trailing punctuation.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\punctuated.rs","byte_start":596215,"byte_end":596245,"line_start":156,"line_end":156,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\punctuated.rs","byte_start":596250,"byte_end":596253,"line_start":157,"line_end":157,"column_start":5,"column_end":8}},{"value":"/ [`push`]: Punctuated::push","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\punctuated.rs","byte_start":596258,"byte_end":596288,"line_start":158,"line_end":158,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\punctuated.rs","byte_start":596293,"byte_end":596296,"line_start":159,"line_end":159,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\punctuated.rs","byte_start":596301,"byte_end":596313,"line_start":160,"line_end":160,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\punctuated.rs","byte_start":596318,"byte_end":596321,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ Panics if the sequence does not already have a trailing punctuation when","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\punctuated.rs","byte_start":596326,"byte_end":596402,"line_start":162,"line_end":162,"column_start":5,"column_end":81}},{"value":"/ this method is called.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\punctuated.rs","byte_start":596407,"byte_end":596433,"line_start":163,"line_end":163,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":1134},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\punctuated.rs","byte_start":596998,"byte_end":597008,"line_start":180,"line_end":180,"column_start":12,"column_end":22},"name":"push_punct","qualname":"<Punctuated<T, P>>::push_punct","value":"fn push_punct(&mut Self, P)","parent":null,"children":[],"decl_id":null,"docs":" Appends a trailing punctuation onto the end of this punctuated sequence.\n The sequence must be non-empty and must not already have trailing\n punctuation.","sig":null,"attributes":[{"value":"/ Appends a trailing punctuation onto the end of this punctuated sequence.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\punctuated.rs","byte_start":596703,"byte_end":596779,"line_start":173,"line_end":173,"column_start":5,"column_end":81}},{"value":"/ The sequence must be non-empty and must not already have trailing","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\punctuated.rs","byte_start":596784,"byte_end":596853,"line_start":174,"line_end":174,"column_start":5,"column_end":74}},{"value":"/ punctuation.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\punctuated.rs","byte_start":596858,"byte_end":596874,"line_start":175,"line_end":175,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\punctuated.rs","byte_start":596879,"byte_end":596882,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\punctuated.rs","byte_start":596887,"byte_end":596899,"line_start":177,"line_end":177,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\punctuated.rs","byte_start":596904,"byte_end":596907,"line_start":178,"line_end":178,"column_start":5,"column_end":8}},{"value":"/ Panics if the sequence is empty or already has a trailing punctuation.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\punctuated.rs","byte_start":596912,"byte_end":596986,"line_start":179,"line_end":179,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":1135},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\punctuated.rs","byte_start":597438,"byte_end":597441,"line_start":192,"line_end":192,"column_start":12,"column_end":15},"name":"pop","qualname":"<Punctuated<T, P>>::pop","value":"fn pop(&mut Self) -> Option<Pair<T, P>>","parent":null,"children":[],"decl_id":null,"docs":" Removes the last punctuated pair from this sequence, or `None` if the\n sequence is empty.\n","sig":null,"attributes":[{"value":"/ Removes the last punctuated pair from this sequence, or `None` if the","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\punctuated.rs","byte_start":597326,"byte_end":597399,"line_start":190,"line_end":190,"column_start":5,"column_end":78}},{"value":"/ sequence is empty.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\punctuated.rs","byte_start":597404,"byte_end":597426,"line_start":191,"line_end":191,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":1138},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\punctuated.rs","byte_start":597767,"byte_end":597781,"line_start":202,"line_end":202,"column_start":12,"column_end":26},"name":"trailing_punct","qualname":"<Punctuated<T, P>>::trailing_punct","value":"fn trailing_punct(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Determines whether this punctuated sequence ends with a trailing\n punctuation.\n","sig":null,"attributes":[{"value":"/ Determines whether this punctuated sequence ends with a trailing","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\punctuated.rs","byte_start":597666,"byte_end":597734,"line_start":200,"line_end":200,"column_start":5,"column_end":73}},{"value":"/ punctuation.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\punctuated.rs","byte_start":597739,"byte_end":597755,"line_start":201,"line_end":201,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":1139},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\punctuated.rs","byte_start":598052,"byte_end":598069,"line_start":210,"line_end":210,"column_start":12,"column_end":29},"name":"empty_or_trailing","qualname":"<Punctuated<T, P>>::empty_or_trailing","value":"fn empty_or_trailing(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if either this `Punctuated` is empty, or it has a trailing\n punctuation.","sig":null,"attributes":[{"value":"/ Returns true if either this `Punctuated` is empty, or it has a trailing","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\punctuated.rs","byte_start":597858,"byte_end":597933,"line_start":206,"line_end":206,"column_start":5,"column_end":80}},{"value":"/ punctuation.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\punctuated.rs","byte_start":597938,"byte_end":597954,"line_start":207,"line_end":207,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\punctuated.rs","byte_start":597959,"byte_end":597962,"line_start":208,"line_end":208,"column_start":5,"column_end":8}},{"value":"/ Equivalent to `punctuated.is_empty() || punctuated.trailing_punct()`.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\punctuated.rs","byte_start":597967,"byte_end":598040,"line_start":209,"line_end":209,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":1140},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\punctuated.rs","byte_start":598416,"byte_end":598420,"line_start":219,"line_end":219,"column_start":12,"column_end":16},"name":"push","qualname":"<Punctuated<T, P>>::push","value":"fn push(&mut Self, T) where P: Default","parent":null,"children":[],"decl_id":null,"docs":" Appends a syntax tree node onto the end of this punctuated sequence.","sig":null,"attributes":[{"value":"/ Appends a syntax tree node onto the end of this punctuated sequence.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\punctuated.rs","byte_start":598126,"byte_end":598198,"line_start":214,"line_end":214,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\punctuated.rs","byte_start":598203,"byte_end":598206,"line_start":215,"line_end":215,"column_start":5,"column_end":8}},{"value":"/ If there is not a trailing punctuation in this sequence when this method","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\punctuated.rs","byte_start":598211,"byte_end":598287,"line_start":216,"line_end":216,"column_start":5,"column_end":81}},{"value":"/ is called, the default value of punctuation type `P` is inserted before","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\punctuated.rs","byte_start":598292,"byte_end":598367,"line_start":217,"line_end":217,"column_start":5,"column_end":80}},{"value":"/ the given value of type `T`.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\punctuated.rs","byte_start":598372,"byte_end":598404,"line_start":218,"line_end":218,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":1141},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\punctuated.rs","byte_start":598820,"byte_end":598826,"line_start":235,"line_end":235,"column_start":12,"column_end":18},"name":"insert","qualname":"<Punctuated<T, P>>::insert","value":"fn insert(&mut Self, usize, T) where P: Default","parent":null,"children":[],"decl_id":null,"docs":" Inserts an element at position `index`.","sig":null,"attributes":[{"value":"/ Inserts an element at position `index`.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\punctuated.rs","byte_start":598619,"byte_end":598662,"line_start":229,"line_end":229,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\punctuated.rs","byte_start":598667,"byte_end":598670,"line_start":230,"line_end":230,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\punctuated.rs","byte_start":598675,"byte_end":598687,"line_start":231,"line_end":231,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\punctuated.rs","byte_start":598692,"byte_end":598695,"line_start":232,"line_end":232,"column_start":5,"column_end":8}},{"value":"/ Panics if `index` is greater than the number of elements previously in","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\punctuated.rs","byte_start":598700,"byte_end":598774,"line_start":233,"line_end":233,"column_start":5,"column_end":79}},{"value":"/ this punctuated sequence.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\punctuated.rs","byte_start":598779,"byte_end":598808,"line_start":234,"line_end":234,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":1142},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\punctuated.rs","byte_start":599265,"byte_end":599270,"line_start":252,"line_end":252,"column_start":12,"column_end":17},"name":"clear","qualname":"<Punctuated<T, P>>::clear","value":"fn clear(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Clears the sequence of all values and punctuation, making it empty.\n","sig":null,"attributes":[{"value":"/ Clears the sequence of all values and punctuation, making it empty.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\punctuated.rs","byte_start":599182,"byte_end":599253,"line_start":251,"line_end":251,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":1146},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\punctuated.rs","byte_start":604627,"byte_end":604636,"line_start":440,"line_end":440,"column_start":8,"column_end":17},"name":"from_iter","qualname":"<Punctuated<T, P> as std::iter::FromIterator>::from_iter","value":"fn from_iter<I>(I) -> Self where I: IntoIterator<Item = T>","parent":{"krate":2,"index":8282},"children":[],"decl_id":{"krate":2,"index":8284},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1151},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\punctuated.rs","byte_start":604838,"byte_end":604844,"line_start":451,"line_end":451,"column_start":8,"column_end":14},"name":"extend","qualname":"<Punctuated<T, P> as std::iter::Extend>::extend","value":"fn extend<I>(&mut Self, I) where I: IntoIterator<Item = T>","parent":{"krate":2,"index":8295},"children":[],"decl_id":{"krate":2,"index":8297},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1156},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\punctuated.rs","byte_start":605031,"byte_end":605040,"line_start":459,"line_end":459,"column_start":8,"column_end":17},"name":"from_iter","qualname":"<Punctuated<T, P> as std::iter::FromIterator>::from_iter","value":"fn from_iter<I>(I) -> Self where I: IntoIterator<Item = Pair<T, P>>","parent":{"krate":2,"index":8282},"children":[],"decl_id":{"krate":2,"index":8284},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1161},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\punctuated.rs","byte_start":605238,"byte_end":605244,"line_start":467,"line_end":467,"column_start":8,"column_end":14},"name":"extend","qualname":"<Punctuated<T, P> as std::iter::Extend>::extend","value":"fn extend<I>(&mut Self, I) where I: IntoIterator<Item = Pair<T, P>>","parent":{"krate":2,"index":8295},"children":[],"decl_id":{"krate":2,"index":8297},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1168},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\punctuated.rs","byte_start":606006,"byte_end":606015,"line_start":493,"line_end":493,"column_start":8,"column_end":17},"name":"into_iter","qualname":"<Punctuated<T, P> as std::iter::IntoIterator>::into_iter","value":"fn into_iter(Self) -> Self::IntoIter","parent":{"krate":2,"index":8286},"children":[],"decl_id":{"krate":2,"index":8289},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1177},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\punctuated.rs","byte_start":606416,"byte_end":606425,"line_start":508,"line_end":508,"column_start":8,"column_end":17},"name":"into_iter","qualname":"<&'a Punctuated<T, P> as std::iter::IntoIterator>::into_iter","value":"fn into_iter(Self) -> Self::IntoIter","parent":{"krate":2,"index":8286},"children":[],"decl_id":{"krate":2,"index":8289},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1184},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\punctuated.rs","byte_start":606622,"byte_end":606631,"line_start":517,"line_end":517,"column_start":8,"column_end":17},"name":"into_iter","qualname":"<&'a mut Punctuated<T, P> as std::iter::IntoIterator>::into_iter","value":"fn into_iter(Self) -> Self::IntoIter","parent":{"krate":2,"index":8286},"children":[],"decl_id":{"krate":2,"index":8289},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1188},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\punctuated.rs","byte_start":606751,"byte_end":606758,"line_start":523,"line_end":523,"column_start":8,"column_end":15},"name":"default","qualname":"<Punctuated<T, P> as std::default::Default>::default","value":"fn default() -> Self","parent":{"krate":2,"index":3157},"children":[],"decl_id":{"krate":2,"index":3158},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1189},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\punctuated.rs","byte_start":606998,"byte_end":607003,"line_start":533,"line_end":533,"column_start":12,"column_end":17},"name":"Pairs","qualname":"::punctuated::Pairs","value":"Pairs {  }","parent":null,"children":[{"krate":0,"index":1193},{"krate":0,"index":1194}],"decl_id":null,"docs":" An iterator over borrowed pairs of type `Pair<&T, &P>`.","sig":null,"attributes":[{"value":"/ An iterator over borrowed pairs of type `Pair<&T, &P>`.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\punctuated.rs","byte_start":606806,"byte_end":606865,"line_start":528,"line_end":528,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\punctuated.rs","byte_start":606866,"byte_end":606869,"line_start":529,"line_end":529,"column_start":1,"column_end":4}},{"value":"/ Refer to the [module documentation] for details about punctuated sequences.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\punctuated.rs","byte_start":606870,"byte_end":606949,"line_start":530,"line_end":530,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\punctuated.rs","byte_start":606950,"byte_end":606953,"line_start":531,"line_end":531,"column_start":1,"column_end":4}},{"value":"/ [module documentation]: self","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\punctuated.rs","byte_start":606954,"byte_end":606986,"line_start":532,"line_end":532,"column_start":1,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":1200},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\punctuated.rs","byte_start":607188,"byte_end":607192,"line_start":541,"line_end":541,"column_start":8,"column_end":12},"name":"next","qualname":"<Pairs as std::iter::Iterator>::next","value":"fn next(&mut Self) -> Option<Self::Item>","parent":{"krate":2,"index":8481},"children":[],"decl_id":{"krate":2,"index":8483},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1203},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\punctuated.rs","byte_start":607388,"byte_end":607397,"line_start":548,"line_end":548,"column_start":8,"column_end":17},"name":"size_hint","qualname":"<Pairs as std::iter::Iterator>::size_hint","value":"fn size_hint(&Self) -> (usize, Option<usize>)","parent":{"krate":2,"index":8481},"children":[],"decl_id":{"krate":2,"index":8484},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1208},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\punctuated.rs","byte_start":607545,"byte_end":607554,"line_start":554,"line_end":554,"column_start":8,"column_end":17},"name":"next_back","qualname":"<Pairs as std::iter::DoubleEndedIterator>::next_back","value":"fn next_back(&mut Self) -> Option<Self::Item>","parent":{"krate":2,"index":8330},"children":[],"decl_id":{"krate":2,"index":8331},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1215},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\punctuated.rs","byte_start":607812,"byte_end":607815,"line_start":563,"line_end":563,"column_start":8,"column_end":11},"name":"len","qualname":"<Pairs as std::iter::ExactSizeIterator>::len","value":"fn len(&Self) -> usize","parent":{"krate":2,"index":8355},"children":[],"decl_id":{"krate":2,"index":8356},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1220},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\punctuated.rs","byte_start":607965,"byte_end":607970,"line_start":570,"line_end":570,"column_start":8,"column_end":13},"name":"clone","qualname":"<Pairs as std::clone::Clone>::clone","value":"fn clone(&Self) -> Self","parent":{"krate":2,"index":2801},"children":[],"decl_id":{"krate":2,"index":2802},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1221},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\punctuated.rs","byte_start":608307,"byte_end":608315,"line_start":583,"line_end":583,"column_start":12,"column_end":20},"name":"PairsMut","qualname":"::punctuated::PairsMut","value":"PairsMut {  }","parent":null,"children":[{"krate":0,"index":1225},{"krate":0,"index":1226}],"decl_id":null,"docs":" An iterator over mutably borrowed pairs of type `Pair<&mut T, &mut P>`.","sig":null,"attributes":[{"value":"/ An iterator over mutably borrowed pairs of type `Pair<&mut T, &mut P>`.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\punctuated.rs","byte_start":608099,"byte_end":608174,"line_start":578,"line_end":578,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\punctuated.rs","byte_start":608175,"byte_end":608178,"line_start":579,"line_end":579,"column_start":1,"column_end":4}},{"value":"/ Refer to the [module documentation] for details about punctuated sequences.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\punctuated.rs","byte_start":608179,"byte_end":608258,"line_start":580,"line_end":580,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\punctuated.rs","byte_start":608259,"byte_end":608262,"line_start":581,"line_end":581,"column_start":1,"column_end":4}},{"value":"/ [module documentation]: self","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\punctuated.rs","byte_start":608263,"byte_end":608295,"line_start":582,"line_end":582,"column_start":1,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":1232},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\punctuated.rs","byte_start":608518,"byte_end":608522,"line_start":591,"line_end":591,"column_start":8,"column_end":12},"name":"next","qualname":"<PairsMut as std::iter::Iterator>::next","value":"fn next(&mut Self) -> Option<Self::Item>","parent":{"krate":2,"index":8481},"children":[],"decl_id":{"krate":2,"index":8483},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1235},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\punctuated.rs","byte_start":608718,"byte_end":608727,"line_start":598,"line_end":598,"column_start":8,"column_end":17},"name":"size_hint","qualname":"<PairsMut as std::iter::Iterator>::size_hint","value":"fn size_hint(&Self) -> (usize, Option<usize>)","parent":{"krate":2,"index":8481},"children":[],"decl_id":{"krate":2,"index":8484},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1240},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\punctuated.rs","byte_start":608878,"byte_end":608887,"line_start":604,"line_end":604,"column_start":8,"column_end":17},"name":"next_back","qualname":"<PairsMut as std::iter::DoubleEndedIterator>::next_back","value":"fn next_back(&mut Self) -> Option<Self::Item>","parent":{"krate":2,"index":8330},"children":[],"decl_id":{"krate":2,"index":8331},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1247},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\punctuated.rs","byte_start":609148,"byte_end":609151,"line_start":613,"line_end":613,"column_start":8,"column_end":11},"name":"len","qualname":"<PairsMut as std::iter::ExactSizeIterator>::len","value":"fn len(&Self) -> usize","parent":{"krate":2,"index":8355},"children":[],"decl_id":{"krate":2,"index":8356},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1248},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\punctuated.rs","byte_start":609409,"byte_end":609418,"line_start":623,"line_end":623,"column_start":12,"column_end":21},"name":"IntoPairs","qualname":"::punctuated::IntoPairs","value":"IntoPairs {  }","parent":null,"children":[{"krate":0,"index":1251},{"krate":0,"index":1252}],"decl_id":null,"docs":" An iterator over owned pairs of type `Pair<T, P>`.","sig":null,"attributes":[{"value":"/ An iterator over owned pairs of type `Pair<T, P>`.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\punctuated.rs","byte_start":609222,"byte_end":609276,"line_start":618,"line_end":618,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\punctuated.rs","byte_start":609277,"byte_end":609280,"line_start":619,"line_end":619,"column_start":1,"column_end":4}},{"value":"/ Refer to the [module documentation] for details about punctuated sequences.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\punctuated.rs","byte_start":609281,"byte_end":609360,"line_start":620,"line_end":620,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\punctuated.rs","byte_start":609361,"byte_end":609364,"line_start":621,"line_end":621,"column_start":1,"column_end":4}},{"value":"/ [module documentation]: self","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\punctuated.rs","byte_start":609365,"byte_end":609397,"line_start":622,"line_end":622,"column_start":1,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":1257},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\punctuated.rs","byte_start":609573,"byte_end":609577,"line_start":631,"line_end":631,"column_start":8,"column_end":12},"name":"next","qualname":"<IntoPairs<T, P> as std::iter::Iterator>::next","value":"fn next(&mut Self) -> Option<Self::Item>","parent":{"krate":2,"index":8481},"children":[],"decl_id":{"krate":2,"index":8483},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1260},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\punctuated.rs","byte_start":609773,"byte_end":609782,"line_start":638,"line_end":638,"column_start":8,"column_end":17},"name":"size_hint","qualname":"<IntoPairs<T, P> as std::iter::Iterator>::size_hint","value":"fn size_hint(&Self) -> (usize, Option<usize>)","parent":{"krate":2,"index":8481},"children":[],"decl_id":{"krate":2,"index":8484},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1264},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\punctuated.rs","byte_start":609926,"byte_end":609935,"line_start":644,"line_end":644,"column_start":8,"column_end":17},"name":"next_back","qualname":"<IntoPairs<T, P> as std::iter::DoubleEndedIterator>::next_back","value":"fn next_back(&mut Self) -> Option<Self::Item>","parent":{"krate":2,"index":8330},"children":[],"decl_id":{"krate":2,"index":8331},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1270},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\punctuated.rs","byte_start":610189,"byte_end":610192,"line_start":653,"line_end":653,"column_start":8,"column_end":11},"name":"len","qualname":"<IntoPairs<T, P> as std::iter::ExactSizeIterator>::len","value":"fn len(&Self) -> usize","parent":{"krate":2,"index":8355},"children":[],"decl_id":{"krate":2,"index":8356},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1274},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\punctuated.rs","byte_start":610343,"byte_end":610348,"line_start":663,"line_end":663,"column_start":8,"column_end":13},"name":"clone","qualname":"<IntoPairs<T, P> as std::clone::Clone>::clone","value":"fn clone(&Self) -> Self","parent":{"krate":2,"index":2801},"children":[],"decl_id":{"krate":2,"index":2802},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1275},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\punctuated.rs","byte_start":610660,"byte_end":610668,"line_start":676,"line_end":676,"column_start":12,"column_end":20},"name":"IntoIter","qualname":"::punctuated::IntoIter","value":"IntoIter {  }","parent":null,"children":[{"krate":0,"index":1277}],"decl_id":null,"docs":" An iterator over owned values of type `T`.","sig":null,"attributes":[{"value":"/ An iterator over owned values of type `T`.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\punctuated.rs","byte_start":610481,"byte_end":610527,"line_start":671,"line_end":671,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\punctuated.rs","byte_start":610528,"byte_end":610531,"line_start":672,"line_end":672,"column_start":1,"column_end":4}},{"value":"/ Refer to the [module documentation] for details about punctuated sequences.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\punctuated.rs","byte_start":610532,"byte_end":610611,"line_start":673,"line_end":673,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\punctuated.rs","byte_start":610612,"byte_end":610615,"line_start":674,"line_end":674,"column_start":1,"column_end":4}},{"value":"/ [module documentation]: self","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\punctuated.rs","byte_start":610616,"byte_end":610648,"line_start":675,"line_end":675,"column_start":1,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":1281},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\punctuated.rs","byte_start":610768,"byte_end":610772,"line_start":683,"line_end":683,"column_start":8,"column_end":12},"name":"next","qualname":"<IntoIter<T> as std::iter::Iterator>::next","value":"fn next(&mut Self) -> Option<Self::Item>","parent":{"krate":2,"index":8481},"children":[],"decl_id":{"krate":2,"index":8483},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1282},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\punctuated.rs","byte_start":610848,"byte_end":610857,"line_start":687,"line_end":687,"column_start":8,"column_end":17},"name":"size_hint","qualname":"<IntoIter<T> as std::iter::Iterator>::size_hint","value":"fn size_hint(&Self) -> (usize, Option<usize>)","parent":{"krate":2,"index":8481},"children":[],"decl_id":{"krate":2,"index":8484},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1285},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\punctuated.rs","byte_start":610994,"byte_end":611003,"line_start":693,"line_end":693,"column_start":8,"column_end":17},"name":"next_back","qualname":"<IntoIter<T> as std::iter::DoubleEndedIterator>::next_back","value":"fn next_back(&mut Self) -> Option<Self::Item>","parent":{"krate":2,"index":8330},"children":[],"decl_id":{"krate":2,"index":8331},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1288},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\punctuated.rs","byte_start":611130,"byte_end":611133,"line_start":699,"line_end":699,"column_start":8,"column_end":11},"name":"len","qualname":"<IntoIter<T> as std::iter::ExactSizeIterator>::len","value":"fn len(&Self) -> usize","parent":{"krate":2,"index":8355},"children":[],"decl_id":{"krate":2,"index":8356},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1291},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\punctuated.rs","byte_start":611245,"byte_end":611250,"line_start":708,"line_end":708,"column_start":8,"column_end":13},"name":"clone","qualname":"<IntoIter<T> as std::clone::Clone>::clone","value":"fn clone(&Self) -> Self","parent":{"krate":2,"index":2801},"children":[],"decl_id":{"krate":2,"index":2802},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1292},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\punctuated.rs","byte_start":611528,"byte_end":611532,"line_start":720,"line_end":720,"column_start":12,"column_end":16},"name":"Iter","qualname":"::punctuated::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":1295}],"decl_id":null,"docs":" An iterator over borrowed values of type `&T`.","sig":null,"attributes":[{"value":"/ An iterator over borrowed values of type `&T`.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\punctuated.rs","byte_start":611345,"byte_end":611395,"line_start":715,"line_end":715,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\punctuated.rs","byte_start":611396,"byte_end":611399,"line_start":716,"line_end":716,"column_start":1,"column_end":4}},{"value":"/ Refer to the [module documentation] for details about punctuated sequences.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\punctuated.rs","byte_start":611400,"byte_end":611479,"line_start":717,"line_end":717,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\punctuated.rs","byte_start":611480,"byte_end":611483,"line_start":718,"line_end":718,"column_start":1,"column_end":4}},{"value":"/ [module documentation]: self","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\punctuated.rs","byte_start":611484,"byte_end":611516,"line_start":719,"line_end":719,"column_start":1,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":1312},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\punctuated.rs","byte_start":612361,"byte_end":612366,"line_start":747,"line_end":747,"column_start":8,"column_end":13},"name":"clone","qualname":"<Iter as std::clone::Clone>::clone","value":"fn clone(&Self) -> Self","parent":{"krate":2,"index":2801},"children":[],"decl_id":{"krate":2,"index":2802},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1317},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\punctuated.rs","byte_start":612531,"byte_end":612535,"line_start":757,"line_end":757,"column_start":8,"column_end":12},"name":"next","qualname":"<Iter as std::iter::Iterator>::next","value":"fn next(&mut Self) -> Option<Self::Item>","parent":{"krate":2,"index":8481},"children":[],"decl_id":{"krate":2,"index":8483},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1318},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\punctuated.rs","byte_start":612611,"byte_end":612620,"line_start":761,"line_end":761,"column_start":8,"column_end":17},"name":"size_hint","qualname":"<Iter as std::iter::Iterator>::size_hint","value":"fn size_hint(&Self) -> (usize, Option<usize>)","parent":{"krate":2,"index":8481},"children":[],"decl_id":{"krate":2,"index":8484},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1322},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\punctuated.rs","byte_start":612761,"byte_end":612770,"line_start":767,"line_end":767,"column_start":8,"column_end":17},"name":"next_back","qualname":"<Iter as std::iter::DoubleEndedIterator>::next_back","value":"fn next_back(&mut Self) -> Option<Self::Item>","parent":{"krate":2,"index":8330},"children":[],"decl_id":{"krate":2,"index":8331},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1326},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\punctuated.rs","byte_start":612901,"byte_end":612904,"line_start":773,"line_end":773,"column_start":8,"column_end":11},"name":"len","qualname":"<Iter as std::iter::ExactSizeIterator>::len","value":"fn len(&Self) -> usize","parent":{"krate":2,"index":8355},"children":[],"decl_id":{"krate":2,"index":8356},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1357},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\punctuated.rs","byte_start":614255,"byte_end":614262,"line_start":828,"line_end":828,"column_start":12,"column_end":19},"name":"IterMut","qualname":"::punctuated::IterMut","value":"IterMut {  }","parent":null,"children":[{"krate":0,"index":1360}],"decl_id":null,"docs":" An iterator over mutably borrowed values of type `&mut T`.","sig":null,"attributes":[{"value":"/ An iterator over mutably borrowed values of type `&mut T`.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\punctuated.rs","byte_start":614060,"byte_end":614122,"line_start":823,"line_end":823,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\punctuated.rs","byte_start":614123,"byte_end":614126,"line_start":824,"line_end":824,"column_start":1,"column_end":4}},{"value":"/ Refer to the [module documentation] for details about punctuated sequences.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\punctuated.rs","byte_start":614127,"byte_end":614206,"line_start":825,"line_end":825,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\punctuated.rs","byte_start":614207,"byte_end":614210,"line_start":826,"line_end":826,"column_start":1,"column_end":4}},{"value":"/ [module documentation]: self","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\punctuated.rs","byte_start":614211,"byte_end":614243,"line_start":827,"line_end":827,"column_start":1,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":1377},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\punctuated.rs","byte_start":614841,"byte_end":614845,"line_start":852,"line_end":852,"column_start":8,"column_end":12},"name":"next","qualname":"<IterMut as std::iter::Iterator>::next","value":"fn next(&mut Self) -> Option<Self::Item>","parent":{"krate":2,"index":8481},"children":[],"decl_id":{"krate":2,"index":8483},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1378},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\punctuated.rs","byte_start":614921,"byte_end":614930,"line_start":856,"line_end":856,"column_start":8,"column_end":17},"name":"size_hint","qualname":"<IterMut as std::iter::Iterator>::size_hint","value":"fn size_hint(&Self) -> (usize, Option<usize>)","parent":{"krate":2,"index":8481},"children":[],"decl_id":{"krate":2,"index":8484},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1382},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\punctuated.rs","byte_start":615074,"byte_end":615083,"line_start":862,"line_end":862,"column_start":8,"column_end":17},"name":"next_back","qualname":"<IterMut as std::iter::DoubleEndedIterator>::next_back","value":"fn next_back(&mut Self) -> Option<Self::Item>","parent":{"krate":2,"index":8330},"children":[],"decl_id":{"krate":2,"index":8331},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1386},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\punctuated.rs","byte_start":615217,"byte_end":615220,"line_start":868,"line_end":868,"column_start":8,"column_end":11},"name":"len","qualname":"<IterMut as std::iter::ExactSizeIterator>::len","value":"fn len(&Self) -> usize","parent":{"krate":2,"index":8355},"children":[],"decl_id":{"krate":2,"index":8356},"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1414},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\punctuated.rs","byte_start":616314,"byte_end":616324,"line_start":912,"line_end":912,"column_start":5,"column_end":15},"name":"Punctuated","qualname":"::punctuated::Pair::Punctuated","value":"Pair::Punctuated(T, P)","parent":{"krate":0,"index":1411},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1416},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\punctuated.rs","byte_start":616325,"byte_end":616326,"line_start":912,"line_end":912,"column_start":16,"column_end":17},"name":"0","qualname":"::punctuated::Pair::Punctuated::0","value":"T","parent":{"krate":0,"index":1414},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1417},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\punctuated.rs","byte_start":616328,"byte_end":616329,"line_start":912,"line_end":912,"column_start":19,"column_end":20},"name":"1","qualname":"::punctuated::Pair::Punctuated::1","value":"P","parent":{"krate":0,"index":1414},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1418},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\punctuated.rs","byte_start":616336,"byte_end":616339,"line_start":913,"line_end":913,"column_start":5,"column_end":8},"name":"End","qualname":"::punctuated::Pair::End","value":"Pair::End(T)","parent":{"krate":0,"index":1411},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1420},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\punctuated.rs","byte_start":616340,"byte_end":616341,"line_start":913,"line_end":913,"column_start":9,"column_end":10},"name":"0","qualname":"::punctuated::Pair::End::0","value":"T","parent":{"krate":0,"index":1418},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1411},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\punctuated.rs","byte_start":616297,"byte_end":616301,"line_start":911,"line_end":911,"column_start":10,"column_end":14},"name":"Pair","qualname":"::punctuated::Pair","value":"enum Pair<T, P> { Punctuated(T, P), End(T), }","parent":null,"children":[{"krate":0,"index":1414},{"krate":0,"index":1418}],"decl_id":null,"docs":" A single syntax tree node of type `T` followed by its trailing punctuation\n of type `P` if any.","sig":null,"attributes":[{"value":"/ A single syntax tree node of type `T` followed by its trailing punctuation","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\punctuated.rs","byte_start":616064,"byte_end":616142,"line_start":905,"line_end":905,"column_start":1,"column_end":79}},{"value":"/ of type `P` if any.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\punctuated.rs","byte_start":616143,"byte_end":616166,"line_start":906,"line_end":906,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\punctuated.rs","byte_start":616167,"byte_end":616170,"line_start":907,"line_end":907,"column_start":1,"column_end":4}},{"value":"/ Refer to the [module documentation] for details about punctuated sequences.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\punctuated.rs","byte_start":616171,"byte_end":616250,"line_start":908,"line_end":908,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\punctuated.rs","byte_start":616251,"byte_end":616254,"line_start":909,"line_end":909,"column_start":1,"column_end":4}},{"value":"/ [module documentation]: self","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\punctuated.rs","byte_start":616255,"byte_end":616287,"line_start":910,"line_end":910,"column_start":1,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":1424},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\punctuated.rs","byte_start":616493,"byte_end":616503,"line_start":919,"line_end":919,"column_start":12,"column_end":22},"name":"into_value","qualname":"<Pair<T, P>>::into_value","value":"fn into_value(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Extracts the syntax tree node from this punctuated pair, discarding the\n following punctuation.\n","sig":null,"attributes":[{"value":"/ Extracts the syntax tree node from this punctuated pair, discarding the","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\punctuated.rs","byte_start":616375,"byte_end":616450,"line_start":917,"line_end":917,"column_start":5,"column_end":80}},{"value":"/ following punctuation.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\punctuated.rs","byte_start":616455,"byte_end":616481,"line_start":918,"line_end":918,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":1425},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\punctuated.rs","byte_start":616686,"byte_end":616691,"line_start":926,"line_end":926,"column_start":12,"column_end":17},"name":"value","qualname":"<Pair<T, P>>::value","value":"fn value(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Borrows the syntax tree node from this punctuated pair.\n","sig":null,"attributes":[{"value":"/ Borrows the syntax tree node from this punctuated pair.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\punctuated.rs","byte_start":616615,"byte_end":616674,"line_start":925,"line_end":925,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":1426},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\punctuated.rs","byte_start":616884,"byte_end":616893,"line_start":933,"line_end":933,"column_start":12,"column_end":21},"name":"value_mut","qualname":"<Pair<T, P>>::value_mut","value":"fn value_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Mutably borrows the syntax tree node from this punctuated pair.\n","sig":null,"attributes":[{"value":"/ Mutably borrows the syntax tree node from this punctuated pair.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\punctuated.rs","byte_start":616805,"byte_end":616872,"line_start":932,"line_end":932,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":1427},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\punctuated.rs","byte_start":617161,"byte_end":617166,"line_start":941,"line_end":941,"column_start":12,"column_end":17},"name":"punct","qualname":"<Pair<T, P>>::punct","value":"fn punct(&Self) -> Option<&P>","parent":null,"children":[],"decl_id":null,"docs":" Borrows the punctuation from this punctuated pair, unless this pair is\n the final one and there is no trailing punctuation.\n","sig":null,"attributes":[{"value":"/ Borrows the punctuation from this punctuated pair, unless this pair is","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\punctuated.rs","byte_start":617015,"byte_end":617089,"line_start":939,"line_end":939,"column_start":5,"column_end":79}},{"value":"/ the final one and there is no trailing punctuation.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\punctuated.rs","byte_start":617094,"byte_end":617149,"line_start":940,"line_end":940,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1428},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\punctuated.rs","byte_start":617974,"byte_end":617983,"line_start":966,"line_end":966,"column_start":12,"column_end":21},"name":"punct_mut","qualname":"<Pair<T, P>>::punct_mut","value":"fn punct_mut(&mut Self) -> Option<&mut P>","parent":null,"children":[],"decl_id":null,"docs":" Mutably borrows the punctuation from this punctuated pair, unless the\n pair is the final one and there is no trailing punctuation.","sig":null,"attributes":[{"value":"/ Mutably borrows the punctuation from this punctuated pair, unless the","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\punctuated.rs","byte_start":617313,"byte_end":617386,"line_start":948,"line_end":948,"column_start":5,"column_end":78}},{"value":"/ pair is the final one and there is no trailing punctuation.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\punctuated.rs","byte_start":617391,"byte_end":617454,"line_start":949,"line_end":949,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\punctuated.rs","byte_start":617459,"byte_end":617462,"line_start":950,"line_end":950,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\punctuated.rs","byte_start":617467,"byte_end":617480,"line_start":951,"line_end":951,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\punctuated.rs","byte_start":617485,"byte_end":617488,"line_start":952,"line_end":952,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\punctuated.rs","byte_start":617493,"byte_end":617500,"line_start":953,"line_end":953,"column_start":5,"column_end":12}},{"value":"/ # use proc_macro2::Span;","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\punctuated.rs","byte_start":617505,"byte_end":617533,"line_start":954,"line_end":954,"column_start":5,"column_end":33}},{"value":"/ # use syn::punctuated::Punctuated;","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\punctuated.rs","byte_start":617538,"byte_end":617576,"line_start":955,"line_end":955,"column_start":5,"column_end":43}},{"value":"/ # use syn::{parse_quote, Token, TypeParamBound};","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\punctuated.rs","byte_start":617581,"byte_end":617633,"line_start":956,"line_end":956,"column_start":5,"column_end":57}},{"value":"/ #","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\punctuated.rs","byte_start":617638,"byte_end":617643,"line_start":957,"line_end":957,"column_start":5,"column_end":10}},{"value":"/ # let mut punctuated = Punctuated::<TypeParamBound, Token![+]>::new();","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\punctuated.rs","byte_start":617648,"byte_end":617722,"line_start":958,"line_end":958,"column_start":5,"column_end":79}},{"value":"/ # let span = Span::call_site();","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\punctuated.rs","byte_start":617727,"byte_end":617762,"line_start":959,"line_end":959,"column_start":5,"column_end":40}},{"value":"/ #","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\punctuated.rs","byte_start":617767,"byte_end":617772,"line_start":960,"line_end":960,"column_start":5,"column_end":10}},{"value":"/ punctuated.insert(0, parse_quote!('lifetime));","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\punctuated.rs","byte_start":617777,"byte_end":617827,"line_start":961,"line_end":961,"column_start":5,"column_end":55}},{"value":"/ if let Some(punct) = punctuated.pairs_mut().next().unwrap().punct_mut() {","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\punctuated.rs","byte_start":617832,"byte_end":617909,"line_start":962,"line_end":962,"column_start":5,"column_end":82}},{"value":"/     punct.span = span;","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\punctuated.rs","byte_start":617914,"byte_end":617940,"line_start":963,"line_end":963,"column_start":5,"column_end":31}},{"value":"/ }","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\punctuated.rs","byte_start":617945,"byte_end":617950,"line_start":964,"line_end":964,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\punctuated.rs","byte_start":617955,"byte_end":617962,"line_start":965,"line_end":965,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1429},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\punctuated.rs","byte_start":618252,"byte_end":618255,"line_start":975,"line_end":975,"column_start":12,"column_end":15},"name":"new","qualname":"<Pair<T, P>>::new","value":"fn new(T, Option<P>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a punctuated pair out of a syntax tree node and an optional\n following punctuation.\n","sig":null,"attributes":[{"value":"/ Creates a punctuated pair out of a syntax tree node and an optional","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\punctuated.rs","byte_start":618138,"byte_end":618209,"line_start":973,"line_end":973,"column_start":5,"column_end":76}},{"value":"/ following punctuation.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\punctuated.rs","byte_start":618214,"byte_end":618240,"line_start":974,"line_end":974,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":1430},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\punctuated.rs","byte_start":618526,"byte_end":618536,"line_start":984,"line_end":984,"column_start":12,"column_end":22},"name":"into_tuple","qualname":"<Pair<T, P>>::into_tuple","value":"fn into_tuple(Self) -> (T, Option<P>)","parent":null,"children":[],"decl_id":null,"docs":" Produces this punctuated pair as a tuple of syntax tree node and\n optional following punctuation.\n","sig":null,"attributes":[{"value":"/ Produces this punctuated pair as a tuple of syntax tree node and","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\punctuated.rs","byte_start":618406,"byte_end":618474,"line_start":982,"line_end":982,"column_start":5,"column_end":73}},{"value":"/ optional following punctuation.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\punctuated.rs","byte_start":618479,"byte_end":618514,"line_start":983,"line_end":983,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":1435},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\punctuated.rs","byte_start":619124,"byte_end":619129,"line_start":1010,"line_end":1010,"column_start":8,"column_end":13},"name":"index","qualname":"<Punctuated<T, P> as std::ops::Index>::index","value":"fn index(&Self, usize) -> &Self::Output","parent":{"krate":2,"index":3483},"children":[],"decl_id":{"krate":2,"index":3486},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1439},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\punctuated.rs","byte_start":619454,"byte_end":619463,"line_start":1023,"line_end":1023,"column_start":8,"column_end":17},"name":"index_mut","qualname":"<Punctuated<T, P> as std::ops::IndexMut>::index_mut","value":"fn index_mut(&mut Self, usize) -> &mut Self::Output","parent":{"krate":2,"index":3487},"children":[],"decl_id":{"krate":2,"index":3489},"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":1443},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\export.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"__private","qualname":"::__private","value":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\export.rs","parent":null,"children":[{"krate":0,"index":1444},{"krate":0,"index":1445},{"krate":0,"index":1447},{"krate":0,"index":1448},{"krate":0,"index":1449},{"krate":0,"index":1451},{"krate":0,"index":1452},{"krate":0,"index":1454},{"krate":0,"index":1455},{"krate":0,"index":1457},{"krate":0,"index":1458},{"krate":0,"index":1461},{"krate":0,"index":1462},{"krate":0,"index":1464},{"krate":0,"index":1467},{"krate":0,"index":1468},{"krate":0,"index":1469},{"krate":0,"index":1471},{"krate":0,"index":1474},{"krate":0,"index":1475},{"krate":0,"index":1477},{"krate":0,"index":1478},{"krate":0,"index":1479},{"krate":0,"index":1481},{"krate":0,"index":1482},{"krate":0,"index":1484},{"krate":0,"index":1485},{"krate":0,"index":1486},{"krate":0,"index":1488},{"krate":0,"index":1489},{"krate":0,"index":1491},{"krate":0,"index":1492},{"krate":0,"index":1495},{"krate":0,"index":1498},{"krate":0,"index":1501},{"krate":0,"index":1502},{"krate":0,"index":1503},{"krate":0,"index":1506}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"path = \"export.rs\"","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":26410,"byte_end":26431,"line_start":788,"line_end":788,"column_start":1,"column_end":22}}]},{"kind":"Type","id":{"krate":0,"index":1501},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\export.rs","byte_start":625566,"byte_end":625570,"line_start":30,"line_end":30,"column_start":10,"column_end":14},"name":"bool","qualname":"::__private::bool","value":"help::Bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\export.rs","byte_start":625526,"byte_end":625556,"line_start":29,"line_end":29,"column_start":1,"column_end":31}}]},{"kind":"Type","id":{"krate":0,"index":1502},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\export.rs","byte_start":625625,"byte_end":625628,"line_start":32,"line_end":32,"column_start":10,"column_end":13},"name":"str","qualname":"::__private::str","value":"help::Str","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\export.rs","byte_start":625585,"byte_end":625615,"line_start":31,"line_end":31,"column_start":1,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":1506},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\export.rs","byte_start":625718,"byte_end":625725,"line_start":39,"line_end":39,"column_start":12,"column_end":19},"name":"private","qualname":"::__private::private","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":1529},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\span.rs","byte_start":642251,"byte_end":642260,"line_start":3,"line_end":3,"column_start":11,"column_end":20},"name":"IntoSpans","qualname":"::span::IntoSpans","value":"IntoSpans<S>","parent":null,"children":[{"krate":0,"index":1531}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1531},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\span.rs","byte_start":642273,"byte_end":642283,"line_start":4,"line_end":4,"column_start":8,"column_end":18},"name":"into_spans","qualname":"::span::IntoSpans::into_spans","value":"fn into_spans(Self) -> S","parent":{"krate":0,"index":1529},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1534},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\span.rs","byte_start":642343,"byte_end":642353,"line_start":8,"line_end":8,"column_start":8,"column_end":18},"name":"into_spans","qualname":"<Span as span::IntoSpans>::into_spans","value":"fn into_spans(Self) -> [Span; ]","parent":{"krate":0,"index":1529},"children":[],"decl_id":{"krate":0,"index":1531},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1538},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\span.rs","byte_start":642443,"byte_end":642453,"line_start":14,"line_end":14,"column_start":8,"column_end":18},"name":"into_spans","qualname":"<Span as span::IntoSpans>::into_spans","value":"fn into_spans(Self) -> [Span; ]","parent":{"krate":0,"index":1529},"children":[],"decl_id":{"krate":0,"index":1531},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1542},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\span.rs","byte_start":642549,"byte_end":642559,"line_start":20,"line_end":20,"column_start":8,"column_end":18},"name":"into_spans","qualname":"<Span as span::IntoSpans>::into_spans","value":"fn into_spans(Self) -> [Span; ]","parent":{"krate":0,"index":1529},"children":[],"decl_id":{"krate":0,"index":1531},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1547},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\span.rs","byte_start":642666,"byte_end":642676,"line_start":26,"line_end":26,"column_start":8,"column_end":18},"name":"into_spans","qualname":"<[Span; 1] as span::IntoSpans>::into_spans","value":"fn into_spans(Self) -> [Span; ]","parent":{"krate":0,"index":1529},"children":[],"decl_id":{"krate":0,"index":1531},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1552},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\span.rs","byte_start":642769,"byte_end":642779,"line_start":32,"line_end":32,"column_start":8,"column_end":18},"name":"into_spans","qualname":"<[Span; 2] as span::IntoSpans>::into_spans","value":"fn into_spans(Self) -> [Span; ]","parent":{"krate":0,"index":1529},"children":[],"decl_id":{"krate":0,"index":1531},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1557},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\span.rs","byte_start":642872,"byte_end":642882,"line_start":38,"line_end":38,"column_start":8,"column_end":18},"name":"into_spans","qualname":"<[Span; 3] as span::IntoSpans>::into_spans","value":"fn into_spans(Self) -> [Span; ]","parent":{"krate":0,"index":1529},"children":[],"decl_id":{"krate":0,"index":1531},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4303},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\reserved.rs","byte_start":645027,"byte_end":645035,"line_start":15,"line_end":15,"column_start":16,"column_end":24},"name":"Reserved","qualname":"::reserved::Reserved","value":"Reserved {  }","parent":null,"children":[{"krate":0,"index":4304}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1597},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\reserved.rs","byte_start":645119,"byte_end":645126,"line_start":21,"line_end":21,"column_start":8,"column_end":15},"name":"default","qualname":"<Reserved as std::default::Default>::default","value":"fn default() -> Self","parent":{"krate":2,"index":3157},"children":[],"decl_id":{"krate":2,"index":3158},"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":1652},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\error.rs","byte_start":646067,"byte_end":646073,"line_start":15,"line_end":15,"column_start":10,"column_end":16},"name":"Result","qualname":"::error::Result","value":"std::result::Result<T, Error>","parent":null,"children":[],"decl_id":null,"docs":" The result of a Syn parser.\n","sig":null,"attributes":[{"value":"/ The result of a Syn parser.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\error.rs","byte_start":646026,"byte_end":646057,"line_start":14,"line_end":14,"column_start":1,"column_end":32}}]},{"kind":"Struct","id":{"krate":0,"index":1654},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\error.rs","byte_start":648314,"byte_end":648319,"line_start":85,"line_end":85,"column_start":12,"column_end":17},"name":"Error","qualname":"::error::Error","value":"Error {  }","parent":null,"children":[{"krate":0,"index":1655}],"decl_id":null,"docs":" Error returned when a Syn parser cannot parse the input tokens.","sig":null,"attributes":[{"value":"/ Error returned when a Syn parser cannot parse the input tokens.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\error.rs","byte_start":646111,"byte_end":646178,"line_start":17,"line_end":17,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\error.rs","byte_start":646179,"byte_end":646182,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ # Error reporting in proc macros","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\error.rs","byte_start":646183,"byte_end":646219,"line_start":19,"line_end":19,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\error.rs","byte_start":646220,"byte_end":646223,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ The correct way to report errors back to the compiler from a procedural","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\error.rs","byte_start":646224,"byte_end":646299,"line_start":21,"line_end":21,"column_start":1,"column_end":76}},{"value":"/ macro is by emitting an appropriately spanned invocation of","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\error.rs","byte_start":646300,"byte_end":646363,"line_start":22,"line_end":22,"column_start":1,"column_end":64}},{"value":"/ [`compile_error!`] in the generated code. This produces a better diagnostic","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\error.rs","byte_start":646364,"byte_end":646443,"line_start":23,"line_end":23,"column_start":1,"column_end":80}},{"value":"/ message than simply panicking the macro.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\error.rs","byte_start":646444,"byte_end":646488,"line_start":24,"line_end":24,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\error.rs","byte_start":646489,"byte_end":646492,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ [`compile_error!`]: std::compile_error!","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\error.rs","byte_start":646493,"byte_end":646536,"line_start":26,"line_end":26,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\error.rs","byte_start":646537,"byte_end":646540,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ When parsing macro input, the [`parse_macro_input!`] macro handles the","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\error.rs","byte_start":646541,"byte_end":646615,"line_start":28,"line_end":28,"column_start":1,"column_end":75}},{"value":"/ conversion to `compile_error!` automatically.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\error.rs","byte_start":646616,"byte_end":646665,"line_start":29,"line_end":29,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\error.rs","byte_start":646666,"byte_end":646669,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ [`parse_macro_input!`]: crate::parse_macro_input!","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\error.rs","byte_start":646670,"byte_end":646723,"line_start":31,"line_end":31,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\error.rs","byte_start":646724,"byte_end":646727,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\error.rs","byte_start":646728,"byte_end":646735,"line_start":33,"line_end":33,"column_start":1,"column_end":8}},{"value":"/ # extern crate proc_macro;","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\error.rs","byte_start":646736,"byte_end":646766,"line_start":34,"line_end":34,"column_start":1,"column_end":31}},{"value":"/ #","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\error.rs","byte_start":646767,"byte_end":646772,"line_start":35,"line_end":35,"column_start":1,"column_end":6}},{"value":"/ use proc_macro::TokenStream;","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\error.rs","byte_start":646773,"byte_end":646805,"line_start":36,"line_end":36,"column_start":1,"column_end":33}},{"value":"/ use syn::{parse_macro_input, AttributeArgs, ItemFn};","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\error.rs","byte_start":646806,"byte_end":646862,"line_start":37,"line_end":37,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\error.rs","byte_start":646863,"byte_end":646866,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ # const IGNORE: &str = stringify! {","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\error.rs","byte_start":646867,"byte_end":646906,"line_start":39,"line_end":39,"column_start":1,"column_end":40}},{"value":"/ #[proc_macro_attribute]","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\error.rs","byte_start":646907,"byte_end":646934,"line_start":40,"line_end":40,"column_start":1,"column_end":28}},{"value":"/ # };","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\error.rs","byte_start":646935,"byte_end":646943,"line_start":41,"line_end":41,"column_start":1,"column_end":9}},{"value":"/ pub fn my_attr(args: TokenStream, input: TokenStream) -> TokenStream {","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\error.rs","byte_start":646944,"byte_end":647018,"line_start":42,"line_end":42,"column_start":1,"column_end":75}},{"value":"/     let args = parse_macro_input!(args as AttributeArgs);","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\error.rs","byte_start":647019,"byte_end":647080,"line_start":43,"line_end":43,"column_start":1,"column_end":62}},{"value":"/     let input = parse_macro_input!(input as ItemFn);","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\error.rs","byte_start":647081,"byte_end":647137,"line_start":44,"line_end":44,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\error.rs","byte_start":647138,"byte_end":647141,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/     /* ... */","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\error.rs","byte_start":647142,"byte_end":647159,"line_start":46,"line_end":46,"column_start":1,"column_end":18}},{"value":"/     # TokenStream::new()","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\error.rs","byte_start":647160,"byte_end":647188,"line_start":47,"line_end":47,"column_start":1,"column_end":29}},{"value":"/ }","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\error.rs","byte_start":647189,"byte_end":647194,"line_start":48,"line_end":48,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\error.rs","byte_start":647195,"byte_end":647202,"line_start":49,"line_end":49,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\error.rs","byte_start":647203,"byte_end":647206,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ For errors that arise later than the initial parsing stage, the","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\error.rs","byte_start":647207,"byte_end":647274,"line_start":51,"line_end":51,"column_start":1,"column_end":68}},{"value":"/ [`.to_compile_error()`] or [`.into_compile_error()`] methods can be used to","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\error.rs","byte_start":647275,"byte_end":647354,"line_start":52,"line_end":52,"column_start":1,"column_end":80}},{"value":"/ perform an explicit conversion to `compile_error!`.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\error.rs","byte_start":647355,"byte_end":647410,"line_start":53,"line_end":53,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\error.rs","byte_start":647411,"byte_end":647414,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ [`.to_compile_error()`]: Error::to_compile_error","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\error.rs","byte_start":647415,"byte_end":647467,"line_start":55,"line_end":55,"column_start":1,"column_end":53}},{"value":"/ [`.into_compile_error()`]: Error::into_compile_error","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\error.rs","byte_start":647468,"byte_end":647524,"line_start":56,"line_end":56,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\error.rs","byte_start":647525,"byte_end":647528,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\error.rs","byte_start":647529,"byte_end":647536,"line_start":58,"line_end":58,"column_start":1,"column_end":8}},{"value":"/ # extern crate proc_macro;","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\error.rs","byte_start":647537,"byte_end":647567,"line_start":59,"line_end":59,"column_start":1,"column_end":31}},{"value":"/ #","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\error.rs","byte_start":647568,"byte_end":647573,"line_start":60,"line_end":60,"column_start":1,"column_end":6}},{"value":"/ # use proc_macro::TokenStream;","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\error.rs","byte_start":647574,"byte_end":647608,"line_start":61,"line_end":61,"column_start":1,"column_end":35}},{"value":"/ # use syn::{parse_macro_input, DeriveInput};","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\error.rs","byte_start":647609,"byte_end":647657,"line_start":62,"line_end":62,"column_start":1,"column_end":49}},{"value":"/ #","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\error.rs","byte_start":647658,"byte_end":647663,"line_start":63,"line_end":63,"column_start":1,"column_end":6}},{"value":"/ # const IGNORE: &str = stringify! {","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\error.rs","byte_start":647664,"byte_end":647703,"line_start":64,"line_end":64,"column_start":1,"column_end":40}},{"value":"/ #[proc_macro_derive(MyDerive)]","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\error.rs","byte_start":647704,"byte_end":647738,"line_start":65,"line_end":65,"column_start":1,"column_end":35}},{"value":"/ # };","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\error.rs","byte_start":647739,"byte_end":647747,"line_start":66,"line_end":66,"column_start":1,"column_end":9}},{"value":"/ pub fn my_derive(input: TokenStream) -> TokenStream {","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\error.rs","byte_start":647748,"byte_end":647805,"line_start":67,"line_end":67,"column_start":1,"column_end":58}},{"value":"/     let input = parse_macro_input!(input as DeriveInput);","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\error.rs","byte_start":647806,"byte_end":647867,"line_start":68,"line_end":68,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\error.rs","byte_start":647868,"byte_end":647871,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/     // fn(DeriveInput) -> syn::Result<proc_macro2::TokenStream>","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\error.rs","byte_start":647872,"byte_end":647939,"line_start":70,"line_end":70,"column_start":1,"column_end":68}},{"value":"/     expand::my_derive(input)","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\error.rs","byte_start":647940,"byte_end":647972,"line_start":71,"line_end":71,"column_start":1,"column_end":33}},{"value":"/         .unwrap_or_else(syn::Error::into_compile_error)","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\error.rs","byte_start":647973,"byte_end":648032,"line_start":72,"line_end":72,"column_start":1,"column_end":60}},{"value":"/         .into()","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\error.rs","byte_start":648033,"byte_end":648052,"line_start":73,"line_end":73,"column_start":1,"column_end":20}},{"value":"/ }","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\error.rs","byte_start":648053,"byte_end":648058,"line_start":74,"line_end":74,"column_start":1,"column_end":6}},{"value":"/ #","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\error.rs","byte_start":648059,"byte_end":648064,"line_start":75,"line_end":75,"column_start":1,"column_end":6}},{"value":"/ # mod expand {","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\error.rs","byte_start":648065,"byte_end":648083,"line_start":76,"line_end":76,"column_start":1,"column_end":19}},{"value":"/ #     use proc_macro2::TokenStream;","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\error.rs","byte_start":648084,"byte_end":648123,"line_start":77,"line_end":77,"column_start":1,"column_end":40}},{"value":"/ #     use syn::{DeriveInput, Result};","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\error.rs","byte_start":648124,"byte_end":648165,"line_start":78,"line_end":78,"column_start":1,"column_end":42}},{"value":"/ #","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\error.rs","byte_start":648166,"byte_end":648171,"line_start":79,"line_end":79,"column_start":1,"column_end":6}},{"value":"/ #     pub fn my_derive(input: DeriveInput) -> Result<TokenStream> {","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\error.rs","byte_start":648172,"byte_end":648243,"line_start":80,"line_end":80,"column_start":1,"column_end":72}},{"value":"/ #         unimplemented!()","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\error.rs","byte_start":648244,"byte_end":648274,"line_start":81,"line_end":81,"column_start":1,"column_end":31}},{"value":"/ #     }","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\error.rs","byte_start":648275,"byte_end":648286,"line_start":82,"line_end":82,"column_start":1,"column_end":12}},{"value":"/ # }","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\error.rs","byte_start":648287,"byte_end":648294,"line_start":83,"line_end":83,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\error.rs","byte_start":648295,"byte_end":648302,"line_start":84,"line_end":84,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":1661},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\error.rs","byte_start":650173,"byte_end":650176,"line_start":136,"line_end":136,"column_start":12,"column_end":15},"name":"new","qualname":"<Error>::new","value":"fn new<T>(Span, T) -> Self where T: Display","parent":null,"children":[],"decl_id":null,"docs":" Usually the [`ParseStream::error`] method will be used instead, which\n automatically uses the correct span from the current position of the\n parse stream.","sig":null,"attributes":[{"value":"/ Usually the [`ParseStream::error`] method will be used instead, which","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\error.rs","byte_start":648909,"byte_end":648982,"line_start":106,"line_end":106,"column_start":5,"column_end":78}},{"value":"/ automatically uses the correct span from the current position of the","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\error.rs","byte_start":648987,"byte_end":649059,"line_start":107,"line_end":107,"column_start":5,"column_end":77}},{"value":"/ parse stream.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\error.rs","byte_start":649064,"byte_end":649081,"line_start":108,"line_end":108,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\error.rs","byte_start":649086,"byte_end":649089,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/ Use `Error::new` when the error needs to be triggered on some span other","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\error.rs","byte_start":649094,"byte_end":649170,"line_start":110,"line_end":110,"column_start":5,"column_end":81}},{"value":"/ than where the parse stream is currently positioned.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\error.rs","byte_start":649175,"byte_end":649231,"line_start":111,"line_end":111,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\error.rs","byte_start":649236,"byte_end":649239,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ [`ParseStream::error`]: crate::parse::ParseBuffer::error","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\error.rs","byte_start":649244,"byte_end":649304,"line_start":113,"line_end":113,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\error.rs","byte_start":649309,"byte_end":649312,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\error.rs","byte_start":649317,"byte_end":649330,"line_start":115,"line_end":115,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\error.rs","byte_start":649335,"byte_end":649338,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\error.rs","byte_start":649343,"byte_end":649350,"line_start":117,"line_end":117,"column_start":5,"column_end":12}},{"value":"/ use syn::{Error, Ident, LitStr, Result, Token};","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\error.rs","byte_start":649355,"byte_end":649406,"line_start":118,"line_end":118,"column_start":5,"column_end":56}},{"value":"/ use syn::parse::ParseStream;","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\error.rs","byte_start":649411,"byte_end":649443,"line_start":119,"line_end":119,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\error.rs","byte_start":649448,"byte_end":649451,"line_start":120,"line_end":120,"column_start":5,"column_end":8}},{"value":"/ // Parses input that looks like `name = \"string\"` where the key must be","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\error.rs","byte_start":649456,"byte_end":649531,"line_start":121,"line_end":121,"column_start":5,"column_end":80}},{"value":"/ // the identifier `name` and the value may be any string literal.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\error.rs","byte_start":649536,"byte_end":649605,"line_start":122,"line_end":122,"column_start":5,"column_end":74}},{"value":"/ // Returns the string literal.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\error.rs","byte_start":649610,"byte_end":649644,"line_start":123,"line_end":123,"column_start":5,"column_end":39}},{"value":"/ fn parse_name(input: ParseStream) -> Result<LitStr> {","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\error.rs","byte_start":649649,"byte_end":649706,"line_start":124,"line_end":124,"column_start":5,"column_end":62}},{"value":"/     let name_token: Ident = input.parse()?;","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\error.rs","byte_start":649711,"byte_end":649758,"line_start":125,"line_end":125,"column_start":5,"column_end":52}},{"value":"/     if name_token != \"name\" {","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\error.rs","byte_start":649763,"byte_end":649796,"line_start":126,"line_end":126,"column_start":5,"column_end":38}},{"value":"/         // Trigger an error not on the current position of the stream,","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\error.rs","byte_start":649801,"byte_end":649875,"line_start":127,"line_end":127,"column_start":5,"column_end":79}},{"value":"/         // but on the position of the unexpected identifier.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\error.rs","byte_start":649880,"byte_end":649944,"line_start":128,"line_end":128,"column_start":5,"column_end":69}},{"value":"/         return Err(Error::new(name_token.span(), \"expected `name`\"));","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\error.rs","byte_start":649949,"byte_end":650022,"line_start":129,"line_end":129,"column_start":5,"column_end":78}},{"value":"/     }","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\error.rs","byte_start":650027,"byte_end":650036,"line_start":130,"line_end":130,"column_start":5,"column_end":14}},{"value":"/     input.parse::<Token![=]>()?;","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\error.rs","byte_start":650041,"byte_end":650077,"line_start":131,"line_end":131,"column_start":5,"column_end":41}},{"value":"/     let s: LitStr = input.parse()?;","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\error.rs","byte_start":650082,"byte_end":650121,"line_start":132,"line_end":132,"column_start":5,"column_end":44}},{"value":"/     Ok(s)","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\error.rs","byte_start":650126,"byte_end":650139,"line_start":133,"line_end":133,"column_start":5,"column_end":18}},{"value":"/ }","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\error.rs","byte_start":650144,"byte_end":650149,"line_start":134,"line_end":134,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\error.rs","byte_start":650154,"byte_end":650161,"line_start":135,"line_end":135,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1663},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\error.rs","byte_start":651948,"byte_end":651952,"line_start":178,"line_end":178,"column_start":12,"column_end":16},"name":"span","qualname":"<Error>::span","value":"fn span(&Self) -> Span","parent":null,"children":[],"decl_id":null,"docs":" The source location of the error.","sig":null,"attributes":[{"value":"/ The source location of the error.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\error.rs","byte_start":651704,"byte_end":651741,"line_start":173,"line_end":173,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\error.rs","byte_start":651746,"byte_end":651749,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/ Spans are not thread-safe so this function returns `Span::call_site()`","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\error.rs","byte_start":651754,"byte_end":651828,"line_start":175,"line_end":175,"column_start":5,"column_end":79}},{"value":"/ if called from a different thread than the one on which the `Error` was","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\error.rs","byte_start":651833,"byte_end":651908,"line_start":176,"line_end":176,"column_start":5,"column_end":80}},{"value":"/ originally created.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\error.rs","byte_start":651913,"byte_end":651936,"line_start":177,"line_end":177,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":1664},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\error.rs","byte_start":652646,"byte_end":652662,"line_start":197,"line_end":197,"column_start":12,"column_end":28},"name":"to_compile_error","qualname":"<Error>::to_compile_error","value":"fn to_compile_error(&Self) -> TokenStream","parent":null,"children":[],"decl_id":null,"docs":" Render the error as an invocation of [`compile_error!`].","sig":null,"attributes":[{"value":"/ Render the error as an invocation of [`compile_error!`].","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\error.rs","byte_start":652322,"byte_end":652382,"line_start":190,"line_end":190,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\error.rs","byte_start":652387,"byte_end":652390,"line_start":191,"line_end":191,"column_start":5,"column_end":8}},{"value":"/ The [`parse_macro_input!`] macro provides a convenient way to invoke","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\error.rs","byte_start":652395,"byte_end":652467,"line_start":192,"line_end":192,"column_start":5,"column_end":77}},{"value":"/ this method correctly in a procedural macro.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\error.rs","byte_start":652472,"byte_end":652520,"line_start":193,"line_end":193,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\error.rs","byte_start":652525,"byte_end":652528,"line_start":194,"line_end":194,"column_start":5,"column_end":8}},{"value":"/ [`compile_error!`]: std::compile_error!","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\error.rs","byte_start":652533,"byte_end":652576,"line_start":195,"line_end":195,"column_start":5,"column_end":48}},{"value":"/ [`parse_macro_input!`]: crate::parse_macro_input!","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\error.rs","byte_start":652581,"byte_end":652634,"line_start":196,"line_end":196,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":1665},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\error.rs","byte_start":653787,"byte_end":653805,"line_start":236,"line_end":236,"column_start":12,"column_end":30},"name":"into_compile_error","qualname":"<Error>::into_compile_error","value":"fn into_compile_error(Self) -> TokenStream","parent":null,"children":[],"decl_id":null,"docs":" Render the error as an invocation of [`compile_error!`].","sig":null,"attributes":[{"value":"/ Render the error as an invocation of [`compile_error!`].","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\error.rs","byte_start":652812,"byte_end":652872,"line_start":204,"line_end":204,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\error.rs","byte_start":652877,"byte_end":652880,"line_start":205,"line_end":205,"column_start":5,"column_end":8}},{"value":"/ [`compile_error!`]: std::compile_error!","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\error.rs","byte_start":652885,"byte_end":652928,"line_start":206,"line_end":206,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\error.rs","byte_start":652933,"byte_end":652936,"line_start":207,"line_end":207,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\error.rs","byte_start":652941,"byte_end":652954,"line_start":208,"line_end":208,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\error.rs","byte_start":652959,"byte_end":652962,"line_start":209,"line_end":209,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\error.rs","byte_start":652967,"byte_end":652974,"line_start":210,"line_end":210,"column_start":5,"column_end":12}},{"value":"/ # extern crate proc_macro;","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\error.rs","byte_start":652979,"byte_end":653009,"line_start":211,"line_end":211,"column_start":5,"column_end":35}},{"value":"/ #","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\error.rs","byte_start":653014,"byte_end":653019,"line_start":212,"line_end":212,"column_start":5,"column_end":10}},{"value":"/ use proc_macro::TokenStream;","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\error.rs","byte_start":653024,"byte_end":653056,"line_start":213,"line_end":213,"column_start":5,"column_end":37}},{"value":"/ use syn::{parse_macro_input, DeriveInput, Error};","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\error.rs","byte_start":653061,"byte_end":653114,"line_start":214,"line_end":214,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\error.rs","byte_start":653119,"byte_end":653122,"line_start":215,"line_end":215,"column_start":5,"column_end":8}},{"value":"/ # const _: &str = stringify! {","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\error.rs","byte_start":653127,"byte_end":653161,"line_start":216,"line_end":216,"column_start":5,"column_end":39}},{"value":"/ #[proc_macro_derive(MyTrait)]","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\error.rs","byte_start":653166,"byte_end":653199,"line_start":217,"line_end":217,"column_start":5,"column_end":38}},{"value":"/ # };","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\error.rs","byte_start":653204,"byte_end":653212,"line_start":218,"line_end":218,"column_start":5,"column_end":13}},{"value":"/ pub fn derive_my_trait(input: TokenStream) -> TokenStream {","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\error.rs","byte_start":653217,"byte_end":653280,"line_start":219,"line_end":219,"column_start":5,"column_end":68}},{"value":"/     let input = parse_macro_input!(input as DeriveInput);","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\error.rs","byte_start":653285,"byte_end":653346,"line_start":220,"line_end":220,"column_start":5,"column_end":66}},{"value":"/     my_trait::expand(input)","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\error.rs","byte_start":653351,"byte_end":653382,"line_start":221,"line_end":221,"column_start":5,"column_end":36}},{"value":"/         .unwrap_or_else(Error::into_compile_error)","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\error.rs","byte_start":653387,"byte_end":653441,"line_start":222,"line_end":222,"column_start":5,"column_end":59}},{"value":"/         .into()","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\error.rs","byte_start":653446,"byte_end":653465,"line_start":223,"line_end":223,"column_start":5,"column_end":24}},{"value":"/ }","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\error.rs","byte_start":653470,"byte_end":653475,"line_start":224,"line_end":224,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\error.rs","byte_start":653480,"byte_end":653483,"line_start":225,"line_end":225,"column_start":5,"column_end":8}},{"value":"/ mod my_trait {","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\error.rs","byte_start":653488,"byte_end":653506,"line_start":226,"line_end":226,"column_start":5,"column_end":23}},{"value":"/     use proc_macro2::TokenStream;","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\error.rs","byte_start":653511,"byte_end":653548,"line_start":227,"line_end":227,"column_start":5,"column_end":42}},{"value":"/     use syn::{DeriveInput, Result};","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\error.rs","byte_start":653553,"byte_end":653592,"line_start":228,"line_end":228,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\error.rs","byte_start":653597,"byte_end":653600,"line_start":229,"line_end":229,"column_start":5,"column_end":8}},{"value":"/     pub(crate) fn expand(input: DeriveInput) -> Result<TokenStream> {","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\error.rs","byte_start":653605,"byte_end":653678,"line_start":230,"line_end":230,"column_start":5,"column_end":78}},{"value":"/         /* ... */","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\error.rs","byte_start":653683,"byte_end":653704,"line_start":231,"line_end":231,"column_start":5,"column_end":26}},{"value":"/         # unimplemented!()","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\error.rs","byte_start":653709,"byte_end":653739,"line_start":232,"line_end":232,"column_start":5,"column_end":35}},{"value":"/     }","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\error.rs","byte_start":653744,"byte_end":653753,"line_start":233,"line_end":233,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\error.rs","byte_start":653758,"byte_end":653763,"line_start":234,"line_end":234,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\error.rs","byte_start":653768,"byte_end":653775,"line_start":235,"line_end":235,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1666},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\error.rs","byte_start":654014,"byte_end":654021,"line_start":242,"line_end":242,"column_start":12,"column_end":19},"name":"combine","qualname":"<Error>::combine","value":"fn combine(&mut Self, Error)","parent":null,"children":[],"decl_id":null,"docs":" Add another error message to self such that when `to_compile_error()` is\n called, both errors will be emitted together.\n","sig":null,"attributes":[{"value":"/ Add another error message to self such that when `to_compile_error()` is","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\error.rs","byte_start":653872,"byte_end":653948,"line_start":240,"line_end":240,"column_start":5,"column_end":81}},{"value":"/ called, both errors will be emitted together.","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\error.rs","byte_start":653953,"byte_end":654002,"line_start":241,"line_end":241,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":1670},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\error.rs","byte_start":655863,"byte_end":655866,"line_start":301,"line_end":301,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Error as std::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10115},"children":[],"decl_id":{"krate":2,"index":10116},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1674},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\error.rs","byte_start":656433,"byte_end":656436,"line_start":323,"line_end":323,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Error as std::fmt::Display>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10122},"children":[],"decl_id":{"krate":2,"index":10123},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1676},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\error.rs","byte_start":656587,"byte_end":656592,"line_start":329,"line_end":329,"column_start":8,"column_end":13},"name":"clone","qualname":"<Error as std::clone::Clone>::clone","value":"fn clone(&Self) -> Self","parent":{"krate":2,"index":2801},"children":[],"decl_id":{"krate":2,"index":2802},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1681},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\error.rs","byte_start":657221,"byte_end":657225,"line_start":355,"line_end":355,"column_start":8,"column_end":12},"name":"from","qualname":"<Error as std::convert::From>::from","value":"fn from(LexError) -> Self","parent":{"krate":2,"index":3085},"children":[],"decl_id":{"krate":2,"index":3087},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1685},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\error.rs","byte_start":657395,"byte_end":657404,"line_start":364,"line_end":364,"column_start":8,"column_end":17},"name":"into_iter","qualname":"<Error as std::iter::IntoIterator>::into_iter","value":"fn into_iter(Self) -> Self::IntoIter","parent":{"krate":2,"index":8286},"children":[],"decl_id":{"krate":2,"index":8289},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1686},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\error.rs","byte_start":657529,"byte_end":657537,"line_start":371,"line_end":371,"column_start":12,"column_end":20},"name":"IntoIter","qualname":"::error::IntoIter","value":"IntoIter {  }","parent":null,"children":[{"krate":0,"index":1687}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1690},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\error.rs","byte_start":657646,"byte_end":657650,"line_start":378,"line_end":378,"column_start":8,"column_end":12},"name":"next","qualname":"<IntoIter as std::iter::Iterator>::next","value":"fn next(&mut Self) -> Option<Self::Item>","parent":{"krate":2,"index":8481},"children":[],"decl_id":{"krate":2,"index":8483},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1695},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\error.rs","byte_start":657877,"byte_end":657886,"line_start":389,"line_end":389,"column_start":8,"column_end":17},"name":"into_iter","qualname":"<&'a Error as std::iter::IntoIterator>::into_iter","value":"fn into_iter(Self) -> Self::IntoIter","parent":{"krate":2,"index":8286},"children":[],"decl_id":{"krate":2,"index":8289},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1696},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\error.rs","byte_start":658002,"byte_end":658006,"line_start":396,"line_end":396,"column_start":12,"column_end":16},"name":"Iter","qualname":"::error::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":1698}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1702},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\error.rs","byte_start":658125,"byte_end":658129,"line_start":403,"line_end":403,"column_start":8,"column_end":12},"name":"next","qualname":"<Iter as std::iter::Iterator>::next","value":"fn next(&mut Self) -> Option<Self::Item>","parent":{"krate":2,"index":8481},"children":[],"decl_id":{"krate":2,"index":8483},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1704},"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\error.rs","byte_start":658303,"byte_end":658309,"line_start":411,"line_end":411,"column_start":8,"column_end":14},"name":"extend","qualname":"<Error as std::iter::Extend>::extend","value":"fn extend<T>(&mut Self, T) where T: IntoIterator<Item = Error>","parent":{"krate":2,"index":8295},"children":[],"decl_id":{"krate":2,"index":8297},"docs":"","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\ident.rs","byte_start":74251,"byte_end":74256,"line_start":83,"line_end":83,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":49}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\attr.rs","byte_start":80373,"byte_end":80382,"line_start":158,"line_end":158,"column_start":6,"column_end":15},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\attr.rs","byte_start":88024,"byte_end":88028,"line_start":398,"line_end":398,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":70}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Inherent","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\bigint.rs","byte_start":96664,"byte_end":96670,"line_start":8,"line_end":8,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":117},{"krate":0,"index":118},{"krate":0,"index":119}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\bigint.rs","byte_start":97440,"byte_end":97446,"line_start":39,"line_end":39,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":121}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\bigint.rs","byte_start":97803,"byte_end":97809,"line_start":54,"line_end":54,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":123}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Inherent","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\data.rs","byte_start":100335,"byte_end":100341,"line_start":75,"line_end":75,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":130},{"krate":0,"index":131},{"krate":0,"index":132},{"krate":0,"index":133}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\data.rs","byte_start":101805,"byte_end":101811,"line_start":117,"line_end":117,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":135},{"krate":0,"index":136},{"krate":0,"index":137}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Inherent","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":138191,"byte_end":138195,"line_start":783,"line_end":783,"column_start":6,"column_end":10},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":141292,"byte_end":141298,"line_start":859,"line_end":859,"column_start":22,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":200}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":141398,"byte_end":141404,"line_start":865,"line_end":865,"column_start":22,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":202}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":141506,"byte_end":141512,"line_start":871,"line_end":871,"column_start":22,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":204}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":141618,"byte_end":141624,"line_start":877,"line_end":877,"column_start":13,"column_end":19},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":141648,"byte_end":141654,"line_start":879,"line_end":879,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":207}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":141937,"byte_end":141943,"line_start":889,"line_end":889,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":209}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":142953,"byte_end":142958,"line_start":927,"line_end":927,"column_start":22,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":212}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":143167,"byte_end":143172,"line_start":937,"line_end":937,"column_start":13,"column_end":18},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":143196,"byte_end":143201,"line_start":939,"line_end":939,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":215}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":143302,"byte_end":143307,"line_start":945,"line_end":945,"column_start":15,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":217}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\generics.rs","byte_start":236166,"byte_end":236174,"line_start":95,"line_end":95,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":378}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Inherent","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\generics.rs","byte_start":236374,"byte_end":236382,"line_start":106,"line_end":106,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":380},{"krate":0,"index":381},{"krate":0,"index":382},{"krate":0,"index":383},{"krate":0,"index":384},{"krate":0,"index":385},{"krate":0,"index":386}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\generics.rs","byte_start":239344,"byte_end":239354,"line_start":184,"line_end":184,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":394},{"krate":0,"index":395}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\generics.rs","byte_start":239781,"byte_end":239794,"line_start":202,"line_end":202,"column_start":23,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":402},{"krate":0,"index":403}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\generics.rs","byte_start":240218,"byte_end":240227,"line_start":220,"line_end":220,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":410},{"krate":0,"index":411}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\generics.rs","byte_start":240655,"byte_end":240667,"line_start":238,"line_end":238,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":418},{"krate":0,"index":419}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\generics.rs","byte_start":241095,"byte_end":241106,"line_start":256,"line_end":256,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":426},{"krate":0,"index":427}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\generics.rs","byte_start":241538,"byte_end":241552,"line_start":274,"line_end":274,"column_start":23,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":434},{"krate":0,"index":435}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\generics.rs","byte_start":246498,"byte_end":246512,"line_start":435,"line_end":435,"column_start":18,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":437}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Inherent","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\generics.rs","byte_start":246760,"byte_end":246771,"line_start":446,"line_end":446,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":439}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\generics.rs","byte_start":247004,"byte_end":247013,"line_start":457,"line_end":457,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":441}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Inherent","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":290667,"byte_end":290671,"line_start":359,"line_end":359,"column_start":6,"column_end":10},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":291839,"byte_end":291843,"line_start":387,"line_end":387,"column_start":28,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":511}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":292965,"byte_end":292976,"line_start":420,"line_end":420,"column_start":27,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":513}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":293416,"byte_end":293427,"line_start":436,"line_end":436,"column_start":25,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":515}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":293864,"byte_end":293875,"line_start":452,"line_end":452,"column_start":26,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":517}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Inherent","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":308285,"byte_end":308294,"line_start":905,"line_end":905,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":519}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Inherent","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":310075,"byte_end":310083,"line_start":958,"line_end":958,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":521}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Inherent","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lifetime.rs","byte_start":400346,"byte_end":400354,"line_start":24,"line_end":24,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":680},{"krate":0,"index":681},{"krate":0,"index":682}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lifetime.rs","byte_start":401538,"byte_end":401546,"line_start":73,"line_end":73,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":684}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lifetime.rs","byte_start":401703,"byte_end":401711,"line_start":80,"line_end":80,"column_start":16,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":686}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lifetime.rs","byte_start":401881,"byte_end":401889,"line_start":89,"line_end":89,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":688}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lifetime.rs","byte_start":401994,"byte_end":402002,"line_start":95,"line_end":95,"column_start":13,"column_end":21},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lifetime.rs","byte_start":402027,"byte_end":402035,"line_start":97,"line_end":97,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":691}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lifetime.rs","byte_start":402156,"byte_end":402164,"line_start":103,"line_end":103,"column_start":14,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":693}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lifetime.rs","byte_start":402277,"byte_end":402285,"line_start":109,"line_end":109,"column_start":15,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":695}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Inherent","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lit.rs","byte_start":405948,"byte_end":405954,"line_start":120,"line_end":120,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":744},{"krate":0,"index":745},{"krate":0,"index":746},{"krate":0,"index":747},{"krate":0,"index":748},{"krate":0,"index":749}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Inherent","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lit.rs","byte_start":410000,"byte_end":410010,"line_start":250,"line_end":250,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":751},{"krate":0,"index":752},{"krate":0,"index":753},{"krate":0,"index":754},{"krate":0,"index":755},{"krate":0,"index":756}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Inherent","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lit.rs","byte_start":410793,"byte_end":410800,"line_start":285,"line_end":285,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":758},{"krate":0,"index":759},{"krate":0,"index":760},{"krate":0,"index":761},{"krate":0,"index":762},{"krate":0,"index":763}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Inherent","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lit.rs","byte_start":411568,"byte_end":411575,"line_start":320,"line_end":320,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":765},{"krate":0,"index":766},{"krate":0,"index":767},{"krate":0,"index":768},{"krate":0,"index":769},{"krate":0,"index":770}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Inherent","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lit.rs","byte_start":412345,"byte_end":412351,"line_start":355,"line_end":355,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":772},{"krate":0,"index":773},{"krate":0,"index":774},{"krate":0,"index":777},{"krate":0,"index":778},{"krate":0,"index":779},{"krate":0,"index":780}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lit.rs","byte_start":414278,"byte_end":414284,"line_start":430,"line_end":430,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":782}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lit.rs","byte_start":414726,"byte_end":414732,"line_start":447,"line_end":447,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":784}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Inherent","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lit.rs","byte_start":414855,"byte_end":414863,"line_start":453,"line_end":453,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":786},{"krate":0,"index":787},{"krate":0,"index":788},{"krate":0,"index":791},{"krate":0,"index":792},{"krate":0,"index":793},{"krate":0,"index":794}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lit.rs","byte_start":416105,"byte_end":416113,"line_start":506,"line_end":506,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":796}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lit.rs","byte_start":416558,"byte_end":416566,"line_start":523,"line_end":523,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":798}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Inherent","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lit.rs","byte_start":416689,"byte_end":416696,"line_start":529,"line_end":529,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":800},{"krate":0,"index":801},{"krate":0,"index":802},{"krate":0,"index":803},{"krate":0,"index":804}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Inherent","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lit.rs","byte_start":429189,"byte_end":429192,"line_start":956,"line_end":956,"column_start":10,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":822},{"krate":0,"index":823},{"krate":0,"index":824},{"krate":0,"index":825}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Inherent","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\mac.rs","byte_start":453061,"byte_end":453066,"line_start":53,"line_end":53,"column_start":6,"column_end":11},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\path.rs","byte_start":561985,"byte_end":561989,"line_start":16,"line_end":16,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1053}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\path.rs","byte_start":562648,"byte_end":562659,"line_start":42,"line_end":42,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1056}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\path.rs","byte_start":563576,"byte_end":563589,"line_start":77,"line_end":77,"column_start":18,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1058}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Inherent","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\path.rs","byte_start":563661,"byte_end":563674,"line_start":83,"line_end":83,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":1060}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Inherent","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\punctuated.rs","byte_start":592947,"byte_end":592957,"line_start":51,"line_end":51,"column_start":12,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":1120},{"krate":0,"index":1121},{"krate":0,"index":1122},{"krate":0,"index":1123},{"krate":0,"index":1124},{"krate":0,"index":1125},{"krate":0,"index":1126},{"krate":0,"index":1127},{"krate":0,"index":1128},{"krate":0,"index":1129},{"krate":0,"index":1130},{"krate":0,"index":1131},{"krate":0,"index":1133},{"krate":0,"index":1134},{"krate":0,"index":1135},{"krate":0,"index":1138},{"krate":0,"index":1139},{"krate":0,"index":1140},{"krate":0,"index":1141},{"krate":0,"index":1142}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\punctuated.rs","byte_start":604579,"byte_end":604589,"line_start":436,"line_end":436,"column_start":32,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1146}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\punctuated.rs","byte_start":604790,"byte_end":604800,"line_start":447,"line_end":447,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1151}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\punctuated.rs","byte_start":605005,"byte_end":605015,"line_start":458,"line_end":458,"column_start":41,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":1156}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\punctuated.rs","byte_start":605212,"byte_end":605222,"line_start":466,"line_end":466,"column_start":35,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1161}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\punctuated.rs","byte_start":605927,"byte_end":605937,"line_start":489,"line_end":489,"column_start":29,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1166},{"krate":0,"index":1167},{"krate":0,"index":1168}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\punctuated.rs","byte_start":606725,"byte_end":606735,"line_start":522,"line_end":522,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1188}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\punctuated.rs","byte_start":607126,"byte_end":607131,"line_start":538,"line_end":538,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1199},{"krate":0,"index":1200},{"krate":0,"index":1203}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\punctuated.rs","byte_start":607520,"byte_end":607525,"line_start":553,"line_end":553,"column_start":40,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1208}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\punctuated.rs","byte_start":607787,"byte_end":607792,"line_start":562,"line_end":562,"column_start":38,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1215}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\punctuated.rs","byte_start":607940,"byte_end":607945,"line_start":569,"line_end":569,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1220}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\punctuated.rs","byte_start":608445,"byte_end":608453,"line_start":588,"line_end":588,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1231},{"krate":0,"index":1232},{"krate":0,"index":1235}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\punctuated.rs","byte_start":608850,"byte_end":608858,"line_start":603,"line_end":603,"column_start":40,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":1240}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\punctuated.rs","byte_start":609120,"byte_end":609128,"line_start":612,"line_end":612,"column_start":38,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1247}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\punctuated.rs","byte_start":609519,"byte_end":609528,"line_start":628,"line_end":628,"column_start":25,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1256},{"krate":0,"index":1257},{"krate":0,"index":1260}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\punctuated.rs","byte_start":609901,"byte_end":609910,"line_start":643,"line_end":643,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1264}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\punctuated.rs","byte_start":610164,"byte_end":610173,"line_start":652,"line_end":652,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1270}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\punctuated.rs","byte_start":610284,"byte_end":610293,"line_start":658,"line_end":658,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1274}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\punctuated.rs","byte_start":610727,"byte_end":610735,"line_start":680,"line_end":680,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1280},{"krate":0,"index":1281},{"krate":0,"index":1282}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\punctuated.rs","byte_start":610973,"byte_end":610981,"line_start":692,"line_end":692,"column_start":33,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1285}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\punctuated.rs","byte_start":611109,"byte_end":611117,"line_start":698,"line_end":698,"column_start":31,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1288}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\punctuated.rs","byte_start":611204,"byte_end":611212,"line_start":704,"line_end":704,"column_start":19,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1291}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\punctuated.rs","byte_start":612340,"byte_end":612344,"line_start":746,"line_end":746,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1312}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\punctuated.rs","byte_start":612486,"byte_end":612490,"line_start":754,"line_end":754,"column_start":26,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1316},{"krate":0,"index":1317},{"krate":0,"index":1318}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\punctuated.rs","byte_start":612740,"byte_end":612744,"line_start":766,"line_end":766,"column_start":37,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1322}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\punctuated.rs","byte_start":612880,"byte_end":612884,"line_start":772,"line_end":772,"column_start":35,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1326}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\punctuated.rs","byte_start":612985,"byte_end":612996,"line_start":778,"line_end":778,"column_start":29,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1331},{"krate":0,"index":1332}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\punctuated.rs","byte_start":613242,"byte_end":613253,"line_start":789,"line_end":789,"column_start":40,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":1339}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\punctuated.rs","byte_start":613470,"byte_end":613481,"line_start":797,"line_end":797,"column_start":38,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":1346}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\punctuated.rs","byte_start":613629,"byte_end":613640,"line_start":804,"line_end":804,"column_start":26,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1351}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Direct","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\punctuated.rs","byte_start":613836,"byte_end":613837,"line_start":813,"line_end":813,"column_start":37,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1356}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Direct","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\punctuated.rs","byte_start":614789,"byte_end":614796,"line_start":849,"line_end":849,"column_start":26,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1376},{"krate":0,"index":1377},{"krate":0,"index":1378}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Direct","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\punctuated.rs","byte_start":615050,"byte_end":615057,"line_start":861,"line_end":861,"column_start":37,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1382}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Direct","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\punctuated.rs","byte_start":615193,"byte_end":615200,"line_start":867,"line_end":867,"column_start":35,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1386}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Direct","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\punctuated.rs","byte_start":615301,"byte_end":615315,"line_start":873,"line_end":873,"column_start":29,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1391},{"krate":0,"index":1392}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Direct","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\punctuated.rs","byte_start":615569,"byte_end":615583,"line_start":884,"line_end":884,"column_start":40,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":1399}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Direct","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\punctuated.rs","byte_start":615804,"byte_end":615818,"line_start":892,"line_end":892,"column_start":38,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":1406}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Direct","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\punctuated.rs","byte_start":615951,"byte_end":615952,"line_start":898,"line_end":898,"column_start":40,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Inherent","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\punctuated.rs","byte_start":616358,"byte_end":616362,"line_start":916,"line_end":916,"column_start":12,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1424},{"krate":0,"index":1425},{"krate":0,"index":1426},{"krate":0,"index":1427},{"krate":0,"index":1428},{"krate":0,"index":1429},{"krate":0,"index":1430}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Direct","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\punctuated.rs","byte_start":619076,"byte_end":619086,"line_start":1007,"line_end":1007,"column_start":29,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1434},{"krate":0,"index":1435}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Direct","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\punctuated.rs","byte_start":619428,"byte_end":619438,"line_start":1022,"line_end":1022,"column_start":32,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1439}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Direct","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\span.rs","byte_start":642329,"byte_end":642333,"line_start":7,"line_end":7,"column_start":31,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1534}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Direct","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\span.rs","byte_start":642429,"byte_end":642433,"line_start":13,"line_end":13,"column_start":31,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1538}],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Direct","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\span.rs","byte_start":642535,"byte_end":642539,"line_start":19,"line_end":19,"column_start":31,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1542}],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Direct","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\thread.rs","byte_start":643778,"byte_end":643789,"line_start":12,"line_end":12,"column_start":25,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Direct","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\thread.rs","byte_start":643904,"byte_end":643915,"line_start":15,"line_end":15,"column_start":31,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Inherent","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\thread.rs","byte_start":643931,"byte_end":643942,"line_start":17,"line_end":17,"column_start":9,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1584},{"krate":0,"index":1585}],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Direct","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\thread.rs","byte_start":644288,"byte_end":644299,"line_start":34,"line_end":34,"column_start":26,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1588}],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Direct","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\reserved.rs","byte_start":645101,"byte_end":645109,"line_start":20,"line_end":20,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1597}],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Inherent","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\error.rs","byte_start":648897,"byte_end":648902,"line_start":105,"line_end":105,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":1661},{"krate":0,"index":1663},{"krate":0,"index":1664},{"krate":0,"index":1665},{"krate":0,"index":1666}],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Inherent","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\error.rs","byte_start":654113,"byte_end":654125,"line_start":247,"line_end":247,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1668}],"docs":"","sig":null,"attributes":[]},{"id":113,"kind":"Direct","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\error.rs","byte_start":655848,"byte_end":655853,"line_start":300,"line_end":300,"column_start":16,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1670}],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Direct","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\error.rs","byte_start":656265,"byte_end":656277,"line_start":316,"line_end":316,"column_start":16,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1672}],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Direct","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\error.rs","byte_start":656418,"byte_end":656423,"line_start":322,"line_end":322,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1674}],"docs":"","sig":null,"attributes":[]},{"id":116,"kind":"Direct","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\error.rs","byte_start":656572,"byte_end":656577,"line_start":328,"line_end":328,"column_start":16,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1676}],"docs":"","sig":null,"attributes":[]},{"id":117,"kind":"Direct","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\error.rs","byte_start":656705,"byte_end":656717,"line_start":336,"line_end":336,"column_start":16,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1678}],"docs":"","sig":null,"attributes":[]},{"id":118,"kind":"Direct","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\error.rs","byte_start":657172,"byte_end":657177,"line_start":352,"line_end":352,"column_start":28,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":119,"kind":"Direct","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\error.rs","byte_start":657206,"byte_end":657211,"line_start":354,"line_end":354,"column_start":25,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1681}],"docs":"","sig":null,"attributes":[]},{"id":120,"kind":"Direct","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\error.rs","byte_start":657326,"byte_end":657331,"line_start":360,"line_end":360,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1683},{"krate":0,"index":1684},{"krate":0,"index":1685}],"docs":"","sig":null,"attributes":[]},{"id":121,"kind":"Direct","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\error.rs","byte_start":657604,"byte_end":657612,"line_start":375,"line_end":375,"column_start":19,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1689},{"krate":0,"index":1690}],"docs":"","sig":null,"attributes":[]},{"id":122,"kind":"Direct","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\error.rs","byte_start":658083,"byte_end":658087,"line_start":400,"line_end":400,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1701},{"krate":0,"index":1702}],"docs":"","sig":null,"attributes":[]},{"id":123,"kind":"Direct","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\error.rs","byte_start":658288,"byte_end":658293,"line_start":410,"line_end":410,"column_start":24,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1704}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":10984,"byte_end":10989,"line_start":309,"line_end":309,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":12}},{"kind":"Mod","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":15300,"byte_end":15310,"line_start":433,"line_end":433,"column_start":9,"column_end":19},"ref_id":{"krate":0,"index":1089}},{"kind":"Mod","span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lib.rs","byte_start":26440,"byte_end":26449,"line_start":789,"line_end":789,"column_start":9,"column_end":18},"ref_id":{"krate":0,"index":1443}}],"macro_refs":[],"relations":[{"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\ident.rs","byte_start":74251,"byte_end":74256,"line_start":83,"line_end":83,"column_start":26,"column_end":31},"kind":{"Impl":{"id":0}},"from":{"krate":16,"index":776},"to":{"krate":2,"index":3085}},{"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\attr.rs","byte_start":80373,"byte_end":80382,"line_start":158,"line_end":158,"column_start":6,"column_end":15},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":2653},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\attr.rs","byte_start":88024,"byte_end":88028,"line_start":398,"line_end":398,"column_start":6,"column_end":10},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":2665},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\bigint.rs","byte_start":96664,"byte_end":96670,"line_start":8,"line_end":8,"column_start":6,"column_end":12},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":114},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\bigint.rs","byte_start":97440,"byte_end":97446,"line_start":39,"line_end":39,"column_start":24,"column_end":30},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":114},"to":{"krate":2,"index":3278}},{"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\bigint.rs","byte_start":97803,"byte_end":97809,"line_start":54,"line_end":54,"column_start":24,"column_end":30},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":114},"to":{"krate":2,"index":3286}},{"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\data.rs","byte_start":100335,"byte_end":100341,"line_start":75,"line_end":75,"column_start":6,"column_end":12},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":2705},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\data.rs","byte_start":101805,"byte_end":101811,"line_start":117,"line_end":117,"column_start":23,"column_end":29},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":2705},"to":{"krate":2,"index":8286}},{"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":138191,"byte_end":138195,"line_start":783,"line_end":783,"column_start":6,"column_end":10},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":2757},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":141292,"byte_end":141298,"line_start":859,"line_end":859,"column_start":22,"column_end":28},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":3152},"to":{"krate":2,"index":3085}},{"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":141398,"byte_end":141404,"line_start":865,"line_end":865,"column_start":22,"column_end":28},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":3152},"to":{"krate":2,"index":3085}},{"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":141506,"byte_end":141512,"line_start":871,"line_end":871,"column_start":22,"column_end":28},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":3152},"to":{"krate":2,"index":3085}},{"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":141618,"byte_end":141624,"line_start":877,"line_end":877,"column_start":13,"column_end":19},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":3152},"to":{"krate":2,"index":2836}},{"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":141648,"byte_end":141654,"line_start":879,"line_end":879,"column_start":20,"column_end":26},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":3152},"to":{"krate":2,"index":2831}},{"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":141937,"byte_end":141943,"line_start":889,"line_end":889,"column_start":15,"column_end":21},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":3152},"to":{"krate":2,"index":10329}},{"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":142953,"byte_end":142958,"line_start":927,"line_end":927,"column_start":22,"column_end":27},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":3159},"to":{"krate":2,"index":3085}},{"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":143167,"byte_end":143172,"line_start":937,"line_end":937,"column_start":13,"column_end":18},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":3159},"to":{"krate":2,"index":2836}},{"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":143196,"byte_end":143201,"line_start":939,"line_end":939,"column_start":20,"column_end":25},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":3159},"to":{"krate":2,"index":2831}},{"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\expr.rs","byte_start":143302,"byte_end":143307,"line_start":945,"line_end":945,"column_start":15,"column_end":20},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":3159},"to":{"krate":2,"index":10329}},{"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\generics.rs","byte_start":236166,"byte_end":236174,"line_start":95,"line_end":95,"column_start":18,"column_end":26},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":3196},"to":{"krate":2,"index":3157}},{"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\generics.rs","byte_start":236374,"byte_end":236382,"line_start":106,"line_end":106,"column_start":6,"column_end":14},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":3196},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\generics.rs","byte_start":239344,"byte_end":239354,"line_start":184,"line_end":184,"column_start":23,"column_end":33},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":388},"to":{"krate":2,"index":8481}},{"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\generics.rs","byte_start":239781,"byte_end":239794,"line_start":202,"line_end":202,"column_start":23,"column_end":36},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":396},"to":{"krate":2,"index":8481}},{"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\generics.rs","byte_start":240218,"byte_end":240227,"line_start":220,"line_end":220,"column_start":23,"column_end":32},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":404},"to":{"krate":2,"index":8481}},{"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\generics.rs","byte_start":240655,"byte_end":240667,"line_start":238,"line_end":238,"column_start":23,"column_end":35},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":412},"to":{"krate":2,"index":8481}},{"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\generics.rs","byte_start":241095,"byte_end":241106,"line_start":256,"line_end":256,"column_start":23,"column_end":34},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":420},"to":{"krate":2,"index":8481}},{"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\generics.rs","byte_start":241538,"byte_end":241552,"line_start":274,"line_end":274,"column_start":23,"column_end":37},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":428},"to":{"krate":2,"index":8481}},{"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\generics.rs","byte_start":246498,"byte_end":246512,"line_start":435,"line_end":435,"column_start":18,"column_end":32},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":3237},"to":{"krate":2,"index":3157}},{"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\generics.rs","byte_start":246760,"byte_end":246771,"line_start":446,"line_end":446,"column_start":6,"column_end":17},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":3224},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\generics.rs","byte_start":247004,"byte_end":247013,"line_start":457,"line_end":457,"column_start":22,"column_end":31},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":3217},"to":{"krate":2,"index":3085}},{"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":290667,"byte_end":290671,"line_start":359,"line_end":359,"column_start":6,"column_end":10},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":3296},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":291839,"byte_end":291843,"line_start":387,"line_end":387,"column_start":28,"column_end":32},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":3296},"to":{"krate":2,"index":3085}},{"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":292965,"byte_end":292976,"line_start":420,"line_end":420,"column_start":27,"column_end":38},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":3808},"to":{"krate":2,"index":3085}},{"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":293416,"byte_end":293427,"line_start":436,"line_end":436,"column_start":25,"column_end":36},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":3808},"to":{"krate":2,"index":3085}},{"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":293864,"byte_end":293875,"line_start":452,"line_end":452,"column_start":26,"column_end":37},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":3808},"to":{"krate":2,"index":3085}},{"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":308285,"byte_end":308294,"line_start":905,"line_end":905,"column_start":6,"column_end":15},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":3701},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\item.rs","byte_start":310075,"byte_end":310083,"line_start":958,"line_end":958,"column_start":6,"column_end":14},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":3724},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lifetime.rs","byte_start":400346,"byte_end":400354,"line_start":24,"line_end":24,"column_start":6,"column_end":14},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":676},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lifetime.rs","byte_start":401538,"byte_end":401546,"line_start":73,"line_end":73,"column_start":18,"column_end":26},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":676},"to":{"krate":2,"index":10122}},{"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lifetime.rs","byte_start":401703,"byte_end":401711,"line_start":80,"line_end":80,"column_start":16,"column_end":24},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":676},"to":{"krate":2,"index":2801}},{"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lifetime.rs","byte_start":401881,"byte_end":401889,"line_start":89,"line_end":89,"column_start":20,"column_end":28},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":676},"to":{"krate":2,"index":2831}},{"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lifetime.rs","byte_start":401994,"byte_end":402002,"line_start":95,"line_end":95,"column_start":13,"column_end":21},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":676},"to":{"krate":2,"index":2836}},{"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lifetime.rs","byte_start":402027,"byte_end":402035,"line_start":97,"line_end":97,"column_start":21,"column_end":29},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":676},"to":{"krate":2,"index":2877}},{"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lifetime.rs","byte_start":402156,"byte_end":402164,"line_start":103,"line_end":103,"column_start":14,"column_end":22},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":676},"to":{"krate":2,"index":2867}},{"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lifetime.rs","byte_start":402277,"byte_end":402285,"line_start":109,"line_end":109,"column_start":15,"column_end":23},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":676},"to":{"krate":2,"index":10329}},{"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lit.rs","byte_start":405948,"byte_end":405954,"line_start":120,"line_end":120,"column_start":6,"column_end":12},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":3772},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lit.rs","byte_start":410000,"byte_end":410010,"line_start":250,"line_end":250,"column_start":6,"column_end":16},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":3774},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lit.rs","byte_start":410793,"byte_end":410800,"line_start":285,"line_end":285,"column_start":6,"column_end":13},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":3776},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lit.rs","byte_start":411568,"byte_end":411575,"line_start":320,"line_end":320,"column_start":6,"column_end":13},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":3778},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lit.rs","byte_start":412345,"byte_end":412351,"line_start":355,"line_end":355,"column_start":6,"column_end":12},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":3780},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lit.rs","byte_start":414278,"byte_end":414284,"line_start":430,"line_end":430,"column_start":24,"column_end":30},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":3780},"to":{"krate":2,"index":3085}},{"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lit.rs","byte_start":414726,"byte_end":414732,"line_start":447,"line_end":447,"column_start":18,"column_end":24},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":3780},"to":{"krate":2,"index":10122}},{"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lit.rs","byte_start":414855,"byte_end":414863,"line_start":453,"line_end":453,"column_start":6,"column_end":14},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":3782},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lit.rs","byte_start":416105,"byte_end":416113,"line_start":506,"line_end":506,"column_start":24,"column_end":32},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":3782},"to":{"krate":2,"index":3085}},{"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lit.rs","byte_start":416558,"byte_end":416566,"line_start":523,"line_end":523,"column_start":18,"column_end":26},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":3782},"to":{"krate":2,"index":10122}},{"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lit.rs","byte_start":416689,"byte_end":416696,"line_start":529,"line_end":529,"column_start":6,"column_end":13},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":3784},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\lit.rs","byte_start":429189,"byte_end":429192,"line_start":956,"line_end":956,"column_start":10,"column_end":13},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":3733},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\mac.rs","byte_start":453061,"byte_end":453066,"line_start":53,"line_end":53,"column_start":6,"column_end":11},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":3793},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\path.rs","byte_start":561985,"byte_end":561989,"line_start":16,"line_end":16,"column_start":21,"column_end":25},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":4248},"to":{"krate":2,"index":3085}},{"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\path.rs","byte_start":562648,"byte_end":562659,"line_start":42,"line_end":42,"column_start":21,"column_end":32},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":4251},"to":{"krate":2,"index":3085}},{"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\path.rs","byte_start":563576,"byte_end":563589,"line_start":77,"line_end":77,"column_start":18,"column_end":31},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":4254},"to":{"krate":2,"index":3157}},{"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\path.rs","byte_start":563661,"byte_end":563674,"line_start":83,"line_end":83,"column_start":6,"column_end":19},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":4254},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\punctuated.rs","byte_start":592947,"byte_end":592957,"line_start":51,"line_end":51,"column_start":12,"column_end":22},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":1112},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\punctuated.rs","byte_start":604579,"byte_end":604589,"line_start":436,"line_end":436,"column_start":32,"column_end":42},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":1112},"to":{"krate":2,"index":8282}},{"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\punctuated.rs","byte_start":604790,"byte_end":604800,"line_start":447,"line_end":447,"column_start":26,"column_end":36},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":1112},"to":{"krate":2,"index":8295}},{"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\punctuated.rs","byte_start":605005,"byte_end":605015,"line_start":458,"line_end":458,"column_start":41,"column_end":51},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":1112},"to":{"krate":2,"index":8282}},{"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\punctuated.rs","byte_start":605212,"byte_end":605222,"line_start":466,"line_end":466,"column_start":35,"column_end":45},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":1112},"to":{"krate":2,"index":8295}},{"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\punctuated.rs","byte_start":605927,"byte_end":605937,"line_start":489,"line_end":489,"column_start":29,"column_end":39},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":1112},"to":{"krate":2,"index":8286}},{"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\punctuated.rs","byte_start":606725,"byte_end":606735,"line_start":522,"line_end":522,"column_start":24,"column_end":34},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":1112},"to":{"krate":2,"index":3157}},{"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\punctuated.rs","byte_start":607126,"byte_end":607131,"line_start":538,"line_end":538,"column_start":29,"column_end":34},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":1189},"to":{"krate":2,"index":8481}},{"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\punctuated.rs","byte_start":607520,"byte_end":607525,"line_start":553,"line_end":553,"column_start":40,"column_end":45},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":1189},"to":{"krate":2,"index":8330}},{"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\punctuated.rs","byte_start":607787,"byte_end":607792,"line_start":562,"line_end":562,"column_start":38,"column_end":43},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":1189},"to":{"krate":2,"index":8355}},{"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\punctuated.rs","byte_start":607940,"byte_end":607945,"line_start":569,"line_end":569,"column_start":26,"column_end":31},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":1189},"to":{"krate":2,"index":2801}},{"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\punctuated.rs","byte_start":608445,"byte_end":608453,"line_start":588,"line_end":588,"column_start":29,"column_end":37},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":1221},"to":{"krate":2,"index":8481}},{"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\punctuated.rs","byte_start":608850,"byte_end":608858,"line_start":603,"line_end":603,"column_start":40,"column_end":48},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":1221},"to":{"krate":2,"index":8330}},{"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\punctuated.rs","byte_start":609120,"byte_end":609128,"line_start":612,"line_end":612,"column_start":38,"column_end":46},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":1221},"to":{"krate":2,"index":8355}},{"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\punctuated.rs","byte_start":609519,"byte_end":609528,"line_start":628,"line_end":628,"column_start":25,"column_end":34},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":1248},"to":{"krate":2,"index":8481}},{"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\punctuated.rs","byte_start":609901,"byte_end":609910,"line_start":643,"line_end":643,"column_start":36,"column_end":45},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":1248},"to":{"krate":2,"index":8330}},{"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\punctuated.rs","byte_start":610164,"byte_end":610173,"line_start":652,"line_end":652,"column_start":34,"column_end":43},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":1248},"to":{"krate":2,"index":8355}},{"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\punctuated.rs","byte_start":610284,"byte_end":610293,"line_start":658,"line_end":658,"column_start":22,"column_end":31},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":1248},"to":{"krate":2,"index":2801}},{"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\punctuated.rs","byte_start":610727,"byte_end":610735,"line_start":680,"line_end":680,"column_start":22,"column_end":30},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":1275},"to":{"krate":2,"index":8481}},{"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\punctuated.rs","byte_start":610973,"byte_end":610981,"line_start":692,"line_end":692,"column_start":33,"column_end":41},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":1275},"to":{"krate":2,"index":8330}},{"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\punctuated.rs","byte_start":611109,"byte_end":611117,"line_start":698,"line_end":698,"column_start":31,"column_end":39},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":1275},"to":{"krate":2,"index":8355}},{"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\punctuated.rs","byte_start":611204,"byte_end":611212,"line_start":704,"line_end":704,"column_start":19,"column_end":27},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":1275},"to":{"krate":2,"index":2801}},{"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\punctuated.rs","byte_start":611863,"byte_end":611882,"line_start":728,"line_end":728,"column_start":5,"column_end":24},"kind":"SuperTrait","from":{"krate":2,"index":8330},"to":{"krate":0,"index":1296}},{"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\punctuated.rs","byte_start":611899,"byte_end":611916,"line_start":728,"line_end":728,"column_start":41,"column_end":58},"kind":"SuperTrait","from":{"krate":2,"index":8355},"to":{"krate":0,"index":1296}},{"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\punctuated.rs","byte_start":612340,"byte_end":612344,"line_start":746,"line_end":746,"column_start":23,"column_end":27},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":1292},"to":{"krate":2,"index":2801}},{"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\punctuated.rs","byte_start":612486,"byte_end":612490,"line_start":754,"line_end":754,"column_start":26,"column_end":30},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":1292},"to":{"krate":2,"index":8481}},{"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\punctuated.rs","byte_start":612740,"byte_end":612744,"line_start":766,"line_end":766,"column_start":37,"column_end":41},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":1292},"to":{"krate":2,"index":8330}},{"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\punctuated.rs","byte_start":612880,"byte_end":612884,"line_start":772,"line_end":772,"column_start":35,"column_end":39},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":1292},"to":{"krate":2,"index":8355}},{"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\punctuated.rs","byte_start":612985,"byte_end":612996,"line_start":778,"line_end":778,"column_start":29,"column_end":40},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":1300},"to":{"krate":2,"index":8481}},{"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\punctuated.rs","byte_start":613242,"byte_end":613253,"line_start":789,"line_end":789,"column_start":40,"column_end":51},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":1300},"to":{"krate":2,"index":8330}},{"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\punctuated.rs","byte_start":613470,"byte_end":613481,"line_start":797,"line_end":797,"column_start":38,"column_end":49},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":1300},"to":{"krate":2,"index":8355}},{"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\punctuated.rs","byte_start":613629,"byte_end":613640,"line_start":804,"line_end":804,"column_start":26,"column_end":37},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":1300},"to":{"krate":2,"index":2801}},{"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\punctuated.rs","byte_start":613836,"byte_end":613837,"line_start":813,"line_end":813,"column_start":37,"column_end":38},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":1355},"to":{"krate":0,"index":1296}},{"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\punctuated.rs","byte_start":614378,"byte_end":614397,"line_start":833,"line_end":833,"column_start":5,"column_end":24},"kind":"SuperTrait","from":{"krate":2,"index":8330},"to":{"krate":0,"index":1361}},{"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\punctuated.rs","byte_start":614418,"byte_end":614435,"line_start":833,"line_end":833,"column_start":45,"column_end":62},"kind":"SuperTrait","from":{"krate":2,"index":8355},"to":{"krate":0,"index":1361}},{"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\punctuated.rs","byte_start":614789,"byte_end":614796,"line_start":849,"line_end":849,"column_start":26,"column_end":33},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":1357},"to":{"krate":2,"index":8481}},{"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\punctuated.rs","byte_start":615050,"byte_end":615057,"line_start":861,"line_end":861,"column_start":37,"column_end":44},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":1357},"to":{"krate":2,"index":8330}},{"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\punctuated.rs","byte_start":615193,"byte_end":615200,"line_start":867,"line_end":867,"column_start":35,"column_end":42},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":1357},"to":{"krate":2,"index":8355}},{"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\punctuated.rs","byte_start":615301,"byte_end":615315,"line_start":873,"line_end":873,"column_start":29,"column_end":43},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":1364},"to":{"krate":2,"index":8481}},{"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\punctuated.rs","byte_start":615569,"byte_end":615583,"line_start":884,"line_end":884,"column_start":40,"column_end":54},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":1364},"to":{"krate":2,"index":8330}},{"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\punctuated.rs","byte_start":615804,"byte_end":615818,"line_start":892,"line_end":892,"column_start":38,"column_end":52},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":1364},"to":{"krate":2,"index":8355}},{"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\punctuated.rs","byte_start":615951,"byte_end":615952,"line_start":898,"line_end":898,"column_start":40,"column_end":41},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":1410},"to":{"krate":0,"index":1361}},{"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\punctuated.rs","byte_start":616358,"byte_end":616362,"line_start":916,"line_end":916,"column_start":12,"column_end":16},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":1411},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\punctuated.rs","byte_start":619076,"byte_end":619086,"line_start":1007,"line_end":1007,"column_start":29,"column_end":39},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":1112},"to":{"krate":2,"index":3483}},{"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\punctuated.rs","byte_start":619428,"byte_end":619438,"line_start":1022,"line_end":1022,"column_start":32,"column_end":42},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":1112},"to":{"krate":2,"index":3487}},{"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\span.rs","byte_start":642329,"byte_end":642333,"line_start":7,"line_end":7,"column_start":31,"column_end":35},"kind":{"Impl":{"id":103}},"from":{"krate":16,"index":709},"to":{"krate":0,"index":1529}},{"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\span.rs","byte_start":642429,"byte_end":642433,"line_start":13,"line_end":13,"column_start":31,"column_end":35},"kind":{"Impl":{"id":104}},"from":{"krate":16,"index":709},"to":{"krate":0,"index":1529}},{"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\span.rs","byte_start":642535,"byte_end":642539,"line_start":19,"line_end":19,"column_start":31,"column_end":35},"kind":{"Impl":{"id":105}},"from":{"krate":16,"index":709},"to":{"krate":0,"index":1529}},{"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\thread.rs","byte_start":643778,"byte_end":643789,"line_start":12,"line_end":12,"column_start":25,"column_end":36},"kind":{"Impl":{"id":106}},"from":{"krate":0,"index":1574},"to":{"krate":2,"index":3191}},{"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\thread.rs","byte_start":643904,"byte_end":643915,"line_start":15,"line_end":15,"column_start":31,"column_end":42},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":1574},"to":{"krate":2,"index":3179}},{"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\thread.rs","byte_start":643931,"byte_end":643942,"line_start":17,"line_end":17,"column_start":9,"column_end":20},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":1574},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\thread.rs","byte_start":644288,"byte_end":644299,"line_start":34,"line_end":34,"column_start":26,"column_end":37},"kind":{"Impl":{"id":109}},"from":{"krate":0,"index":1574},"to":{"krate":2,"index":10115}},{"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\reserved.rs","byte_start":645101,"byte_end":645109,"line_start":20,"line_end":20,"column_start":18,"column_end":26},"kind":{"Impl":{"id":110}},"from":{"krate":0,"index":4303},"to":{"krate":2,"index":3157}},{"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\error.rs","byte_start":648897,"byte_end":648902,"line_start":105,"line_end":105,"column_start":6,"column_end":11},"kind":{"Impl":{"id":111}},"from":{"krate":0,"index":1654},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\error.rs","byte_start":654113,"byte_end":654125,"line_start":247,"line_end":247,"column_start":6,"column_end":18},"kind":{"Impl":{"id":112}},"from":{"krate":0,"index":1656},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\error.rs","byte_start":655848,"byte_end":655853,"line_start":300,"line_end":300,"column_start":16,"column_end":21},"kind":{"Impl":{"id":113}},"from":{"krate":0,"index":1654},"to":{"krate":2,"index":10115}},{"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\error.rs","byte_start":656265,"byte_end":656277,"line_start":316,"line_end":316,"column_start":16,"column_end":28},"kind":{"Impl":{"id":114}},"from":{"krate":0,"index":1656},"to":{"krate":2,"index":10115}},{"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\error.rs","byte_start":656418,"byte_end":656423,"line_start":322,"line_end":322,"column_start":18,"column_end":23},"kind":{"Impl":{"id":115}},"from":{"krate":0,"index":1654},"to":{"krate":2,"index":10122}},{"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\error.rs","byte_start":656572,"byte_end":656577,"line_start":328,"line_end":328,"column_start":16,"column_end":21},"kind":{"Impl":{"id":116}},"from":{"krate":0,"index":1654},"to":{"krate":2,"index":2801}},{"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\error.rs","byte_start":656705,"byte_end":656717,"line_start":336,"line_end":336,"column_start":16,"column_end":28},"kind":{"Impl":{"id":117}},"from":{"krate":0,"index":1656},"to":{"krate":2,"index":2801}},{"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\error.rs","byte_start":657172,"byte_end":657177,"line_start":352,"line_end":352,"column_start":28,"column_end":33},"kind":{"Impl":{"id":118}},"from":{"krate":0,"index":1654},"to":{"krate":1,"index":2569}},{"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\error.rs","byte_start":657206,"byte_end":657211,"line_start":354,"line_end":354,"column_start":25,"column_end":30},"kind":{"Impl":{"id":119}},"from":{"krate":0,"index":1654},"to":{"krate":2,"index":3085}},{"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\error.rs","byte_start":657326,"byte_end":657331,"line_start":360,"line_end":360,"column_start":23,"column_end":28},"kind":{"Impl":{"id":120}},"from":{"krate":0,"index":1654},"to":{"krate":2,"index":8286}},{"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\error.rs","byte_start":657604,"byte_end":657612,"line_start":375,"line_end":375,"column_start":19,"column_end":27},"kind":{"Impl":{"id":121}},"from":{"krate":0,"index":1686},"to":{"krate":2,"index":8481}},{"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\error.rs","byte_start":658083,"byte_end":658087,"line_start":400,"line_end":400,"column_start":23,"column_end":27},"kind":{"Impl":{"id":122}},"from":{"krate":0,"index":1696},"to":{"krate":2,"index":8481}},{"span":{"file_name":"C:\\Users\\blueb\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.99\\src\\error.rs","byte_start":658288,"byte_end":658293,"line_start":410,"line_end":410,"column_start":24,"column_end":29},"kind":{"Impl":{"id":123}},"from":{"krate":0,"index":1654},"to":{"krate":2,"index":8295}}]}